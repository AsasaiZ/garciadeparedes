function get_info(e){var t={};t.site=get_site();for(var i={},n=e.serializeArray(),s=0;s<n.length;s++)i[n[s].name]=n[s].value;return i.url=get_url(),t.type=i.type,t.data=JSON.stringify(i),t}function get_site(){return window.location.hostname}function get_url(){return window.location.href}!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("jquery")):"function"==typeof define&&define.amd?define(["exports","jquery"],t):t(e.bootstrap={},e.jQuery)}(this,function(e,t){"use strict";function n(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function r(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),e}function h(){return(h=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e}).apply(this,arguments)}for(var s,i,a,o,l,d,c,u,p,f,g,m,v,y,b,w,_,E,x,T,C,S,k,I,M,D,A,P,$,O,L,N,z,H,j,B,R,W,V,F,Y,G,X,U,K,q,Q,Z,J,ee,te,ie,ne,se,ae,re,oe,le,de,he,ce,ue,pe,fe,ge,me,ve,ye,be,we,_e,Ee=function(n){var t=!1;function e(e){var t=this,i=!1;return n(this).one(l.TRANSITION_END,function(){i=!0}),setTimeout(function(){i||l.triggerTransitionEnd(t)},e),this}var l={TRANSITION_END:"bsTransitionEnd",getUID:function(e){for(;e+=~~(1e6*Math.random()),document.getElementById(e););return e},getSelectorFromElement:function(e){var t,i=e.getAttribute("data-target");i&&"#"!==i||(i=e.getAttribute("href")||""),"#"===i.charAt(0)&&(t=i,i=t="function"==typeof n.escapeSelector?n.escapeSelector(t).substr(1):t.replace(/(:|\.|\[|\]|,|=|@)/g,"\\$1"));try{return 0<n(document).find(i).length?i:null}catch(e){return null}},reflow:function(e){return e.offsetHeight},triggerTransitionEnd:function(e){n(e).trigger(t.end)},supportsTransitionEnd:function(){return Boolean(t)},isElement:function(e){return(e[0]||e).nodeType},typeCheckConfig:function(e,t,i){for(var n in i)if(Object.prototype.hasOwnProperty.call(i,n)){var s=i[n],a=t[n],r=a&&l.isElement(a)?"element":(o=a,{}.toString.call(o).match(/\s([a-zA-Z]+)/)[1].toLowerCase());if(!new RegExp(s).test(r))throw new Error(e.toUpperCase()+': Option "'+n+'" provided type "'+r+'" but expected type "'+s+'".')}var o}};return t=("undefined"==typeof window||!window.QUnit)&&{end:"transitionend"},n.fn.emulateTransitionEnd=e,l.supportsTransitionEnd()&&(n.event.special[l.TRANSITION_END]={bindType:t.end,delegateType:t.end,handle:function(e){if(n(e.target).is(this))return e.handleObj.handler.apply(this,arguments)}}),l}(t=t&&t.hasOwnProperty("default")?t.default:t),xe=(i="alert",o="."+(a="bs.alert"),l=(s=t).fn[i],d={CLOSE:"close"+o,CLOSED:"closed"+o,CLICK_DATA_API:"click"+o+".data-api"},c="alert",u="fade",p="show",f=function(){function n(e){this._element=e}var e=n.prototype;return e.close=function(e){e=e||this._element;var t=this._getRootElement(e);this._triggerCloseEvent(t).isDefaultPrevented()||this._removeElement(t)},e.dispose=function(){s.removeData(this._element,a),this._element=null},e._getRootElement=function(e){var t=Ee.getSelectorFromElement(e),i=!1;return t&&(i=s(t)[0]),i||(i=s(e).closest("."+c)[0]),i},e._triggerCloseEvent=function(e){var t=s.Event(d.CLOSE);return s(e).trigger(t),t},e._removeElement=function(t){var i=this;s(t).removeClass(p),Ee.supportsTransitionEnd()&&s(t).hasClass(u)?s(t).one(Ee.TRANSITION_END,function(e){return i._destroyElement(t,e)}).emulateTransitionEnd(150):this._destroyElement(t)},e._destroyElement=function(e){s(e).detach().trigger(d.CLOSED).remove()},n._jQueryInterface=function(i){return this.each(function(){var e=s(this),t=e.data(a);t||(t=new n(this),e.data(a,t)),"close"===i&&t[i](this)})},n._handleDismiss=function(t){return function(e){e&&e.preventDefault(),t.close(this)}},r(n,null,[{key:"VERSION",get:function(){return"4.0.0"}}]),n}(),s(document).on(d.CLICK_DATA_API,'[data-dismiss="alert"]',f._handleDismiss(new f)),s.fn[i]=f._jQueryInterface,s.fn[i].Constructor=f,s.fn[i].noConflict=function(){return s.fn[i]=l,f._jQueryInterface},f),Te=(m="button",y="."+(v="bs.button"),b=".data-api",w=(g=t).fn[m],_="active",E="btn",T='[data-toggle^="button"]',C='[data-toggle="buttons"]',S="input",k=".active",I=".btn",M={CLICK_DATA_API:"click"+y+b,FOCUS_BLUR_DATA_API:(x="focus")+y+b+" blur"+y+b},D=function(){function i(e){this._element=e}var e=i.prototype;return e.toggle=function(){var e=!0,t=!0,i=g(this._element).closest(C)[0];if(i){var n=g(this._element).find(S)[0];if(n){if("radio"===n.type)if(n.checked&&g(this._element).hasClass(_))e=!1;else{var s=g(i).find(k)[0];s&&g(s).removeClass(_)}if(e){if(n.hasAttribute("disabled")||i.hasAttribute("disabled")||n.classList.contains("disabled")||i.classList.contains("disabled"))return;n.checked=!g(this._element).hasClass(_),g(n).trigger("change")}n.focus(),t=!1}}t&&this._element.setAttribute("aria-pressed",!g(this._element).hasClass(_)),e&&g(this._element).toggleClass(_)},e.dispose=function(){g.removeData(this._element,v),this._element=null},i._jQueryInterface=function(t){return this.each(function(){var e=g(this).data(v);e||(e=new i(this),g(this).data(v,e)),"toggle"===t&&e[t]()})},r(i,null,[{key:"VERSION",get:function(){return"4.0.0"}}]),i}(),g(document).on(M.CLICK_DATA_API,T,function(e){e.preventDefault();var t=e.target;g(t).hasClass(E)||(t=g(t).closest(I)),D._jQueryInterface.call(g(t),"toggle")}).on(M.FOCUS_BLUR_DATA_API,T,function(e){var t=g(e.target).closest(I)[0];g(t).toggleClass(x,/^focus(in)?$/.test(e.type))}),g.fn[m]=D._jQueryInterface,g.fn[m].Constructor=D,g.fn[m].noConflict=function(){return g.fn[m]=w,D._jQueryInterface},D),Ce=(P="carousel",O="."+($="bs.carousel"),L=".data-api",N=(A=t).fn[P],z={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0},H={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean"},j="next",B="prev",R="left",W="right",V={SLIDE:"slide"+O,SLID:"slid"+O,KEYDOWN:"keydown"+O,MOUSEENTER:"mouseenter"+O,MOUSELEAVE:"mouseleave"+O,TOUCHEND:"touchend"+O,LOAD_DATA_API:"load"+O+L,CLICK_DATA_API:"click"+O+L},F="carousel",Y="active",G="slide",X="carousel-item-right",U="carousel-item-left",K="carousel-item-next",q="carousel-item-prev",Q=".active",Z=".active.carousel-item",J=".carousel-item",ee=".carousel-item-next, .carousel-item-prev",te=".carousel-indicators",ie="[data-slide], [data-slide-to]",ne='[data-ride="carousel"]',se=function(){function a(e,t){this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this._config=this._getConfig(t),this._element=A(e)[0],this._indicatorsElement=A(this._element).find(te)[0],this._addEventListeners()}var e=a.prototype;return e.next=function(){this._isSliding||this._slide(j)},e.nextWhenVisible=function(){!document.hidden&&A(this._element).is(":visible")&&"hidden"!==A(this._element).css("visibility")&&this.next()},e.prev=function(){this._isSliding||this._slide(B)},e.pause=function(e){e||(this._isPaused=!0),A(this._element).find(ee)[0]&&Ee.supportsTransitionEnd()&&(Ee.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},e.cycle=function(e){e||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},e.to=function(e){var t=this;this._activeElement=A(this._element).find(Z)[0];var i=this._getItemIndex(this._activeElement);if(!(e>this._items.length-1||e<0))if(this._isSliding)A(this._element).one(V.SLID,function(){return t.to(e)});else{if(i===e)return this.pause(),void this.cycle();var n=i<e?j:B;this._slide(n,this._items[e])}},e.dispose=function(){A(this._element).off(O),A.removeData(this._element,$),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},e._getConfig=function(e){return e=h({},z,e),Ee.typeCheckConfig(P,e,H),e},e._addEventListeners=function(){var t=this;this._config.keyboard&&A(this._element).on(V.KEYDOWN,function(e){return t._keydown(e)}),"hover"===this._config.pause&&(A(this._element).on(V.MOUSEENTER,function(e){return t.pause(e)}).on(V.MOUSELEAVE,function(e){return t.cycle(e)}),"ontouchstart"in document.documentElement&&A(this._element).on(V.TOUCHEND,function(){t.pause(),t.touchTimeout&&clearTimeout(t.touchTimeout),t.touchTimeout=setTimeout(function(e){return t.cycle(e)},500+t._config.interval)}))},e._keydown=function(e){if(!/input|textarea/i.test(e.target.tagName))switch(e.which){case 37:e.preventDefault(),this.prev();break;case 39:e.preventDefault(),this.next()}},e._getItemIndex=function(e){return this._items=A.makeArray(A(e).parent().find(J)),this._items.indexOf(e)},e._getItemByDirection=function(e,t){var i=e===j,n=e===B,s=this._getItemIndex(t),a=this._items.length-1;if((n&&0===s||i&&s===a)&&!this._config.wrap)return t;var r=(s+(e===B?-1:1))%this._items.length;return-1===r?this._items[this._items.length-1]:this._items[r]},e._triggerSlideEvent=function(e,t){var i=this._getItemIndex(e),n=this._getItemIndex(A(this._element).find(Z)[0]),s=A.Event(V.SLIDE,{relatedTarget:e,direction:t,from:n,to:i});return A(this._element).trigger(s),s},e._setActiveIndicatorElement=function(e){if(this._indicatorsElement){A(this._indicatorsElement).find(Q).removeClass(Y);var t=this._indicatorsElement.children[this._getItemIndex(e)];t&&A(t).addClass(Y)}},e._slide=function(e,t){var i,n,s,a=this,r=A(this._element).find(Z)[0],o=this._getItemIndex(r),l=t||r&&this._getItemByDirection(e,r),d=this._getItemIndex(l),h=Boolean(this._interval);if(e===j?(i=U,n=K,s=R):(i=X,n=q,s=W),l&&A(l).hasClass(Y))this._isSliding=!1;else if(!this._triggerSlideEvent(l,s).isDefaultPrevented()&&r&&l){this._isSliding=!0,h&&this.pause(),this._setActiveIndicatorElement(l);var c=A.Event(V.SLID,{relatedTarget:l,direction:s,from:o,to:d});Ee.supportsTransitionEnd()&&A(this._element).hasClass(G)?(A(l).addClass(n),Ee.reflow(l),A(r).addClass(i),A(l).addClass(i),A(r).one(Ee.TRANSITION_END,function(){A(l).removeClass(i+" "+n).addClass(Y),A(r).removeClass(Y+" "+n+" "+i),a._isSliding=!1,setTimeout(function(){return A(a._element).trigger(c)},0)}).emulateTransitionEnd(600)):(A(r).removeClass(Y),A(l).addClass(Y),this._isSliding=!1,A(this._element).trigger(c)),h&&this.cycle()}},a._jQueryInterface=function(n){return this.each(function(){var e=A(this).data($),t=h({},z,A(this).data());"object"==typeof n&&(t=h({},t,n));var i="string"==typeof n?n:t.slide;if(e||(e=new a(this,t),A(this).data($,e)),"number"==typeof n)e.to(n);else if("string"==typeof i){if(void 0===e[i])throw new TypeError('No method named "'+i+'"');e[i]()}else t.interval&&(e.pause(),e.cycle())})},a._dataApiClickHandler=function(e){var t=Ee.getSelectorFromElement(this);if(t){var i=A(t)[0];if(i&&A(i).hasClass(F)){var n=h({},A(i).data(),A(this).data()),s=this.getAttribute("data-slide-to");s&&(n.interval=!1),a._jQueryInterface.call(A(i),n),s&&A(i).data($).to(s),e.preventDefault()}}},r(a,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return z}}]),a}(),A(document).on(V.CLICK_DATA_API,ie,se._dataApiClickHandler),A(window).on(V.LOAD_DATA_API,function(){A(ne).each(function(){var e=A(this);se._jQueryInterface.call(e,e.data())})}),A.fn[P]=se._jQueryInterface,A.fn[P].Constructor=se,A.fn[P].noConflict=function(){return A.fn[P]=N,se._jQueryInterface},se),Se=(re="collapse",le="."+(oe="bs.collapse"),de=(ae=t).fn[re],he={toggle:!0,parent:""},ce={toggle:"boolean",parent:"(string|element)"},ue={SHOW:"show"+le,SHOWN:"shown"+le,HIDE:"hide"+le,HIDDEN:"hidden"+le,CLICK_DATA_API:"click"+le+".data-api"},pe="show",fe="collapse",ge="collapsing",me="collapsed",ve="width",ye="height",be=".show, .collapsing",we='[data-toggle="collapse"]',_e=function(){function o(e,t){this._isTransitioning=!1,this._element=e,this._config=this._getConfig(t),this._triggerArray=ae.makeArray(ae('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'));for(var i=ae(we),n=0;n<i.length;n++){var s=i[n],a=Ee.getSelectorFromElement(s);null!==a&&0<ae(a).filter(e).length&&(this._selector=a,this._triggerArray.push(s))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}var e=o.prototype;return e.toggle=function(){ae(this._element).hasClass(pe)?this.hide():this.show()},e.show=function(){var e,t,i=this;if(!this._isTransitioning&&!ae(this._element).hasClass(pe)&&(this._parent&&0===(e=ae.makeArray(ae(this._parent).find(be).filter('[data-parent="'+this._config.parent+'"]'))).length&&(e=null),!(e&&(t=ae(e).not(this._selector).data(oe))&&t._isTransitioning))){var n=ae.Event(ue.SHOW);if(ae(this._element).trigger(n),!n.isDefaultPrevented()){e&&(o._jQueryInterface.call(ae(e).not(this._selector),"hide"),t||ae(e).data(oe,null));var s=this._getDimension();ae(this._element).removeClass(fe).addClass(ge),(this._element.style[s]=0)<this._triggerArray.length&&ae(this._triggerArray).removeClass(me).attr("aria-expanded",!0),this.setTransitioning(!0);var a=function(){ae(i._element).removeClass(ge).addClass(fe).addClass(pe),i._element.style[s]="",i.setTransitioning(!1),ae(i._element).trigger(ue.SHOWN)};if(Ee.supportsTransitionEnd()){var r="scroll"+(s[0].toUpperCase()+s.slice(1));ae(this._element).one(Ee.TRANSITION_END,a).emulateTransitionEnd(600),this._element.style[s]=this._element[r]+"px"}else a()}}},e.hide=function(){var e=this;if(!this._isTransitioning&&ae(this._element).hasClass(pe)){var t=ae.Event(ue.HIDE);if(ae(this._element).trigger(t),!t.isDefaultPrevented()){var i=this._getDimension();if(this._element.style[i]=this._element.getBoundingClientRect()[i]+"px",Ee.reflow(this._element),ae(this._element).addClass(ge).removeClass(fe).removeClass(pe),0<this._triggerArray.length)for(var n=0;n<this._triggerArray.length;n++){var s=this._triggerArray[n],a=Ee.getSelectorFromElement(s);if(null!==a)ae(a).hasClass(pe)||ae(s).addClass(me).attr("aria-expanded",!1)}this.setTransitioning(!0);var r=function(){e.setTransitioning(!1),ae(e._element).removeClass(ge).addClass(fe).trigger(ue.HIDDEN)};this._element.style[i]="",Ee.supportsTransitionEnd()?ae(this._element).one(Ee.TRANSITION_END,r).emulateTransitionEnd(600):r()}}},e.setTransitioning=function(e){this._isTransitioning=e},e.dispose=function(){ae.removeData(this._element,oe),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},e._getConfig=function(e){return(e=h({},he,e)).toggle=Boolean(e.toggle),Ee.typeCheckConfig(re,e,ce),e},e._getDimension=function(){return ae(this._element).hasClass(ve)?ve:ye},e._getParent=function(){var i=this,e=null;Ee.isElement(this._config.parent)?(e=this._config.parent,void 0!==this._config.parent.jquery&&(e=this._config.parent[0])):e=ae(this._config.parent)[0];var t='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]';return ae(e).find(t).each(function(e,t){i._addAriaAndCollapsedClass(o._getTargetFromElement(t),[t])}),e},e._addAriaAndCollapsedClass=function(e,t){if(e){var i=ae(e).hasClass(pe);0<t.length&&ae(t).toggleClass(me,!i).attr("aria-expanded",i)}},o._getTargetFromElement=function(e){var t=Ee.getSelectorFromElement(e);return t?ae(t)[0]:null},o._jQueryInterface=function(n){return this.each(function(){var e=ae(this),t=e.data(oe),i=h({},he,e.data(),"object"==typeof n&&n);if(!t&&i.toggle&&/show|hide/.test(n)&&(i.toggle=!1),t||(t=new o(this,i),e.data(oe,t)),"string"==typeof n){if(void 0===t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},r(o,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return he}}]),o}(),ae(document).on(ue.CLICK_DATA_API,we,function(e){"A"===e.currentTarget.tagName&&e.preventDefault();var i=ae(this),t=Ee.getSelectorFromElement(this);ae(t).each(function(){var e=ae(this),t=e.data(oe)?"toggle":i.data();_e._jQueryInterface.call(e,t)})}),ae.fn[re]=_e._jQueryInterface,ae.fn[re].Constructor=_e,ae.fn[re].noConflict=function(){return ae.fn[re]=de,_e._jQueryInterface},_e),ke="undefined"!=typeof window&&"undefined"!=typeof document,Ie=["Edge","Trident","Firefox"],Me=0,De=0;De<Ie.length;De+=1)if(ke&&0<=navigator.userAgent.indexOf(Ie[De])){Me=1;break}var Ae=ke&&window.Promise?function(e){var t=!1;return function(){t||(t=!0,window.Promise.resolve().then(function(){t=!1,e()}))}}:function(e){var t=!1;return function(){t||(t=!0,setTimeout(function(){t=!1,e()},Me))}};function Pe(e){return e&&"[object Function]"==={}.toString.call(e)}function $e(e,t){if(1!==e.nodeType)return[];var i=getComputedStyle(e,null);return t?i[t]:i}function Oe(e){return"HTML"===e.nodeName?e:e.parentNode||e.host}function Le(e){if(!e)return document.body;switch(e.nodeName){case"HTML":case"BODY":return e.ownerDocument.body;case"#document":return e.body}var t=$e(e),i=t.overflow,n=t.overflowX,s=t.overflowY;return/(auto|scroll)/.test(i+s+n)?e:Le(Oe(e))}function Ne(e){var t=e&&e.offsetParent,i=t&&t.nodeName;return i&&"BODY"!==i&&"HTML"!==i?-1!==["TD","TABLE"].indexOf(t.nodeName)&&"static"===$e(t,"position")?Ne(t):t:e?e.ownerDocument.documentElement:document.documentElement}function ze(e){return null!==e.parentNode?ze(e.parentNode):e}function He(e,t){if(!(e&&e.nodeType&&t&&t.nodeType))return document.documentElement;var i=e.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_FOLLOWING,n=i?e:t,s=i?t:e,a=document.createRange();a.setStart(n,0),a.setEnd(s,0);var r,o,l=a.commonAncestorContainer;if(e!==l&&t!==l||n.contains(s))return"BODY"===(o=(r=l).nodeName)||"HTML"!==o&&Ne(r.firstElementChild)!==r?Ne(l):l;var d=ze(e);return d.host?He(d.host,t):He(e,ze(t).host)}function je(e){var t="top"===(1<arguments.length&&void 0!==arguments[1]?arguments[1]:"top")?"scrollTop":"scrollLeft",i=e.nodeName;if("BODY"===i||"HTML"===i){var n=e.ownerDocument.documentElement;return(e.ownerDocument.scrollingElement||n)[t]}return e[t]}function Be(e,t){var i="x"===t?"Left":"Top",n="Left"===i?"Right":"Bottom";return parseFloat(e["border"+i+"Width"],10)+parseFloat(e["border"+n+"Width"],10)}var Re=void 0,We=function(){return void 0===Re&&(Re=-1!==navigator.appVersion.indexOf("MSIE 10")),Re};function Ve(e,t,i,n){return Math.max(t["offset"+e],t["scroll"+e],i["client"+e],i["offset"+e],i["scroll"+e],We()?i["offset"+e]+n["margin"+("Height"===e?"Top":"Left")]+n["margin"+("Height"===e?"Bottom":"Right")]:0)}function Fe(){var e=document.body,t=document.documentElement,i=We()&&getComputedStyle(t);return{height:Ve("Height",e,t,i),width:Ve("Width",e,t,i)}}var Ye=function(){function n(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(e,t,i){return t&&n(e.prototype,t),i&&n(e,i),e}}(),Ge=function(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e},Xe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e};function Ue(e){return Xe({},e,{right:e.left+e.width,bottom:e.top+e.height})}function Ke(e){var t={};if(We())try{t=e.getBoundingClientRect();var i=je(e,"top"),n=je(e,"left");t.top+=i,t.left+=n,t.bottom+=i,t.right+=n}catch(e){}else t=e.getBoundingClientRect();var s={left:t.left,top:t.top,width:t.right-t.left,height:t.bottom-t.top},a="HTML"===e.nodeName?Fe():{},r=a.width||e.clientWidth||s.right-s.left,o=a.height||e.clientHeight||s.bottom-s.top,l=e.offsetWidth-r,d=e.offsetHeight-o;if(l||d){var h=$e(e);l-=Be(h,"x"),d-=Be(h,"y"),s.width-=l,s.height-=d}return Ue(s)}function qe(e,t){var i=We(),n="HTML"===t.nodeName,s=Ke(e),a=Ke(t),r=Le(e),o=$e(t),l=parseFloat(o.borderTopWidth,10),d=parseFloat(o.borderLeftWidth,10),h=Ue({top:s.top-a.top-l,left:s.left-a.left-d,width:s.width,height:s.height});if(h.marginTop=0,h.marginLeft=0,!i&&n){var c=parseFloat(o.marginTop,10),u=parseFloat(o.marginLeft,10);h.top-=l-c,h.bottom-=l-c,h.left-=d-u,h.right-=d-u,h.marginTop=c,h.marginLeft=u}return(i?t.contains(r):t===r&&"BODY"!==r.nodeName)&&(h=function(e,t){var i=2<arguments.length&&void 0!==arguments[2]&&arguments[2],n=je(t,"top"),s=je(t,"left"),a=i?-1:1;return e.top+=n*a,e.bottom+=n*a,e.left+=s*a,e.right+=s*a,e}(h,t)),h}function Qe(e,t,i,n){var s,a,r,o,l,d,h,c={top:0,left:0},u=He(e,t);if("viewport"===n)a=(s=u).ownerDocument.documentElement,r=qe(s,a),o=Math.max(a.clientWidth,window.innerWidth||0),l=Math.max(a.clientHeight,window.innerHeight||0),d=je(a),h=je(a,"left"),c=Ue({top:d-r.top+r.marginTop,left:h-r.left+r.marginLeft,width:o,height:l});else{var p=void 0;"scrollParent"===n?"BODY"===(p=Le(Oe(t))).nodeName&&(p=e.ownerDocument.documentElement):p="window"===n?e.ownerDocument.documentElement:n;var f=qe(p,u);if("HTML"!==p.nodeName||function e(t){var i=t.nodeName;return"BODY"!==i&&"HTML"!==i&&("fixed"===$e(t,"position")||e(Oe(t)))}(u))c=f;else{var g=Fe(),m=g.height,v=g.width;c.top+=f.top-f.marginTop,c.bottom=m+f.top,c.left+=f.left-f.marginLeft,c.right=v+f.left}}return c.left+=i,c.top+=i,c.right-=i,c.bottom-=i,c}function Ze(e,t,n,i,s){var a=5<arguments.length&&void 0!==arguments[5]?arguments[5]:0;if(-1===e.indexOf("auto"))return e;var r=Qe(n,i,a,s),o={top:{width:r.width,height:t.top-r.top},right:{width:r.right-t.right,height:r.height},bottom:{width:r.width,height:r.bottom-t.bottom},left:{width:t.left-r.left,height:r.height}},l=Object.keys(o).map(function(e){return Xe({key:e},o[e],{area:(t=o[e],t.width*t.height)});var t}).sort(function(e,t){return t.area-e.area}),d=l.filter(function(e){var t=e.width,i=e.height;return t>=n.clientWidth&&i>=n.clientHeight}),h=0<d.length?d[0].key:l[0].key,c=e.split("-")[1];return h+(c?"-"+c:"")}function Je(e,t,i){return qe(i,He(t,i))}function et(e){var t=getComputedStyle(e),i=parseFloat(t.marginTop)+parseFloat(t.marginBottom),n=parseFloat(t.marginLeft)+parseFloat(t.marginRight);return{width:e.offsetWidth+n,height:e.offsetHeight+i}}function tt(e){var t={left:"right",right:"left",bottom:"top",top:"bottom"};return e.replace(/left|right|bottom|top/g,function(e){return t[e]})}function it(e,t,i){i=i.split("-")[0];var n=et(e),s={width:n.width,height:n.height},a=-1!==["right","left"].indexOf(i),r=a?"top":"left",o=a?"left":"top",l=a?"height":"width",d=a?"width":"height";return s[r]=t[r]+t[l]/2-n[l]/2,s[o]=i===o?t[o]-n[d]:t[tt(o)],s}function nt(e,t){return Array.prototype.find?e.find(t):e.filter(t)[0]}function st(e,i,t){return(void 0===t?e:e.slice(0,function(e,t,i){if(Array.prototype.findIndex)return e.findIndex(function(e){return e[t]===i});var n=nt(e,function(e){return e[t]===i});return e.indexOf(n)}(e,"name",t))).forEach(function(e){e.function&&console.warn("`modifier.function` is deprecated, use `modifier.fn`!");var t=e.function||e.fn;e.enabled&&Pe(t)&&(i.offsets.popper=Ue(i.offsets.popper),i.offsets.reference=Ue(i.offsets.reference),i=t(i,e))}),i}function at(e,i){return e.some(function(e){var t=e.name;return e.enabled&&t===i})}function rt(e){for(var t=[!1,"ms","Webkit","Moz","O"],i=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<t.length-1;n++){var s=t[n],a=s?""+s+i:e;if(void 0!==document.body.style[a])return a}return null}function ot(e){var t=e.ownerDocument;return t?t.defaultView:window}function lt(e,t,i,n){i.updateBound=n,ot(e).addEventListener("resize",i.updateBound,{passive:!0});var s=Le(e);return function e(t,i,n,s){var a="BODY"===t.nodeName,r=a?t.ownerDocument.defaultView:t;r.addEventListener(i,n,{passive:!0}),a||e(Le(r.parentNode),i,n,s),s.push(r)}(s,"scroll",i.updateBound,i.scrollParents),i.scrollElement=s,i.eventsEnabled=!0,i}function dt(){var e,t;this.state.eventsEnabled&&(cancelAnimationFrame(this.scheduleUpdate),this.state=(e=this.reference,t=this.state,ot(e).removeEventListener("resize",t.updateBound),t.scrollParents.forEach(function(e){e.removeEventListener("scroll",t.updateBound)}),t.updateBound=null,t.scrollParents=[],t.scrollElement=null,t.eventsEnabled=!1,t))}function ht(e){return""!==e&&!isNaN(parseFloat(e))&&isFinite(e)}function ct(i,n){Object.keys(n).forEach(function(e){var t="";-1!==["width","height","top","right","bottom","left"].indexOf(e)&&ht(n[e])&&(t="px"),i.style[e]=n[e]+t})}function ut(e,t,i){var n=nt(e,function(e){return e.name===t}),s=!!n&&e.some(function(e){return e.name===i&&e.enabled&&e.order<n.order});if(!s){var a="`"+t+"`",r="`"+i+"`";console.warn(r+" modifier is required by "+a+" modifier in order to work, be sure to include it before "+a+"!")}return s}var pt=["auto-start","auto","auto-end","top-start","top","top-end","right-start","right","right-end","bottom-end","bottom","bottom-start","left-end","left","left-start"],ft=pt.slice(3);function gt(e){var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1],i=ft.indexOf(e),n=ft.slice(i+1).concat(ft.slice(0,i));return t?n.reverse():n}var mt="flip",vt="clockwise",yt="counterclockwise";function bt(e,s,a,t){var r=[0,0],o=-1!==["right","left"].indexOf(t),i=e.split(/(\+|\-)/).map(function(e){return e.trim()}),n=i.indexOf(nt(i,function(e){return-1!==e.search(/,|\s/)}));i[n]&&-1===i[n].indexOf(",")&&console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");var l=/\s*,\s*|\s+/,d=-1!==n?[i.slice(0,n).concat([i[n].split(l)[0]]),[i[n].split(l)[1]].concat(i.slice(n+1))]:[i];return(d=d.map(function(e,t){var i=(1===t?!o:o)?"height":"width",n=!1;return e.reduce(function(e,t){return""===e[e.length-1]&&-1!==["+","-"].indexOf(t)?(e[e.length-1]=t,n=!0,e):n?(e[e.length-1]+=t,n=!1,e):e.concat(t)},[]).map(function(e){return function(e,t,i,n){var s=e.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),a=+s[1],r=s[2];if(!a)return e;if(0===r.indexOf("%")){var o=void 0;switch(r){case"%p":o=i;break;case"%":case"%r":default:o=n}return Ue(o)[t]/100*a}if("vh"===r||"vw"===r)return("vh"===r?Math.max(document.documentElement.clientHeight,window.innerHeight||0):Math.max(document.documentElement.clientWidth,window.innerWidth||0))/100*a;return a}(e,i,s,a)})})).forEach(function(i,n){i.forEach(function(e,t){ht(e)&&(r[n]+=e*("-"===i[t-1]?-1:1))})}),r}var wt={placement:"bottom",eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(e){var t=e.placement,i=t.split("-")[0],n=t.split("-")[1];if(n){var s=e.offsets,a=s.reference,r=s.popper,o=-1!==["bottom","top"].indexOf(i),l=o?"left":"top",d=o?"width":"height",h={start:Ge({},l,a[l]),end:Ge({},l,a[l]+a[d]-r[d])};e.offsets.popper=Xe({},r,h[n])}return e}},offset:{order:200,enabled:!0,fn:function(e,t){var i=t.offset,n=e.placement,s=e.offsets,a=s.popper,r=s.reference,o=n.split("-")[0],l=void 0;return l=ht(+i)?[+i,0]:bt(i,a,r,o),"left"===o?(a.top+=l[0],a.left-=l[1]):"right"===o?(a.top+=l[0],a.left+=l[1]):"top"===o?(a.left+=l[0],a.top-=l[1]):"bottom"===o&&(a.left+=l[0],a.top+=l[1]),e.popper=a,e},offset:0},preventOverflow:{order:300,enabled:!0,fn:function(e,n){var t=n.boundariesElement||Ne(e.instance.popper);e.instance.reference===t&&(t=Ne(t));var s=Qe(e.instance.popper,e.instance.reference,n.padding,t);n.boundaries=s;var i=n.priority,a=e.offsets.popper,r={primary:function(e){var t=a[e];return a[e]<s[e]&&!n.escapeWithReference&&(t=Math.max(a[e],s[e])),Ge({},e,t)},secondary:function(e){var t="right"===e?"left":"top",i=a[t];return a[e]>s[e]&&!n.escapeWithReference&&(i=Math.min(a[t],s[e]-("right"===e?a.width:a.height))),Ge({},t,i)}};return i.forEach(function(e){var t=-1!==["left","top"].indexOf(e)?"primary":"secondary";a=Xe({},a,r[t](e))}),e.offsets.popper=a,e},priority:["left","right","top","bottom"],padding:5,boundariesElement:"scrollParent"},keepTogether:{order:400,enabled:!0,fn:function(e){var t=e.offsets,i=t.popper,n=t.reference,s=e.placement.split("-")[0],a=Math.floor,r=-1!==["top","bottom"].indexOf(s),o=r?"right":"bottom",l=r?"left":"top",d=r?"width":"height";return i[o]<a(n[l])&&(e.offsets.popper[l]=a(n[l])-i[d]),i[l]>a(n[o])&&(e.offsets.popper[l]=a(n[o])),e}},arrow:{order:500,enabled:!0,fn:function(e,t){var i;if(!ut(e.instance.modifiers,"arrow","keepTogether"))return e;var n=t.element;if("string"==typeof n){if(!(n=e.instance.popper.querySelector(n)))return e}else if(!e.instance.popper.contains(n))return console.warn("WARNING: `arrow.element` must be child of its popper element!"),e;var s=e.placement.split("-")[0],a=e.offsets,r=a.popper,o=a.reference,l=-1!==["left","right"].indexOf(s),d=l?"height":"width",h=l?"Top":"Left",c=h.toLowerCase(),u=l?"left":"top",p=l?"bottom":"right",f=et(n)[d];o[p]-f<r[c]&&(e.offsets.popper[c]-=r[c]-(o[p]-f)),o[c]+f>r[p]&&(e.offsets.popper[c]+=o[c]+f-r[p]),e.offsets.popper=Ue(e.offsets.popper);var g=o[c]+o[d]/2-f/2,m=$e(e.instance.popper),v=parseFloat(m["margin"+h],10),y=parseFloat(m["border"+h+"Width"],10),b=g-e.offsets.popper[c]-v-y;return b=Math.max(Math.min(r[d]-f,b),0),e.arrowElement=n,e.offsets.arrow=(Ge(i={},c,Math.round(b)),Ge(i,u,""),i),e},element:"[x-arrow]"},flip:{order:600,enabled:!0,fn:function(f,g){if(at(f.instance.modifiers,"inner"))return f;if(f.flipped&&f.placement===f.originalPlacement)return f;var m=Qe(f.instance.popper,f.instance.reference,g.padding,g.boundariesElement),v=f.placement.split("-")[0],y=tt(v),b=f.placement.split("-")[1]||"",w=[];switch(g.behavior){case mt:w=[v,y];break;case vt:w=gt(v);break;case yt:w=gt(v,!0);break;default:w=g.behavior}return w.forEach(function(e,t){if(v!==e||w.length===t+1)return f;v=f.placement.split("-")[0],y=tt(v);var i,n=f.offsets.popper,s=f.offsets.reference,a=Math.floor,r="left"===v&&a(n.right)>a(s.left)||"right"===v&&a(n.left)<a(s.right)||"top"===v&&a(n.bottom)>a(s.top)||"bottom"===v&&a(n.top)<a(s.bottom),o=a(n.left)<a(m.left),l=a(n.right)>a(m.right),d=a(n.top)<a(m.top),h=a(n.bottom)>a(m.bottom),c="left"===v&&o||"right"===v&&l||"top"===v&&d||"bottom"===v&&h,u=-1!==["top","bottom"].indexOf(v),p=!!g.flipVariations&&(u&&"start"===b&&o||u&&"end"===b&&l||!u&&"start"===b&&d||!u&&"end"===b&&h);(r||c||p)&&(f.flipped=!0,(r||c)&&(v=w[t+1]),p&&(b="end"===(i=b)?"start":"start"===i?"end":i),f.placement=v+(b?"-"+b:""),f.offsets.popper=Xe({},f.offsets.popper,it(f.instance.popper,f.offsets.reference,f.placement)),f=st(f.instance.modifiers,f,"flip"))}),f},behavior:"flip",padding:5,boundariesElement:"viewport"},inner:{order:700,enabled:!1,fn:function(e){var t=e.placement,i=t.split("-")[0],n=e.offsets,s=n.popper,a=n.reference,r=-1!==["left","right"].indexOf(i),o=-1===["top","left"].indexOf(i);return s[r?"left":"top"]=a[i]-(o?s[r?"width":"height"]:0),e.placement=tt(t),e.offsets.popper=Ue(s),e}},hide:{order:800,enabled:!0,fn:function(e){if(!ut(e.instance.modifiers,"hide","preventOverflow"))return e;var t=e.offsets.reference,i=nt(e.instance.modifiers,function(e){return"preventOverflow"===e.name}).boundaries;if(t.bottom<i.top||t.left>i.right||t.top>i.bottom||t.right<i.left){if(!0===e.hide)return e;e.hide=!0,e.attributes["x-out-of-boundaries"]=""}else{if(!1===e.hide)return e;e.hide=!1,e.attributes["x-out-of-boundaries"]=!1}return e}},computeStyle:{order:850,enabled:!0,fn:function(e,t){var i=t.x,n=t.y,s=e.offsets.popper,a=nt(e.instance.modifiers,function(e){return"applyStyle"===e.name}).gpuAcceleration;void 0!==a&&console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");var r=void 0!==a?a:t.gpuAcceleration,o=Ke(Ne(e.instance.popper)),l={position:s.position},d={left:Math.floor(s.left),top:Math.floor(s.top),bottom:Math.floor(s.bottom),right:Math.floor(s.right)},h="bottom"===i?"top":"bottom",c="right"===n?"left":"right",u=rt("transform"),p=void 0,f=void 0;if(f="bottom"===h?-o.height+d.bottom:d.top,p="right"===c?-o.width+d.right:d.left,r&&u)l[u]="translate3d("+p+"px, "+f+"px, 0)",l[h]=0,l[c]=0,l.willChange="transform";else{var g="bottom"===h?-1:1,m="right"===c?-1:1;l[h]=f*g,l[c]=p*m,l.willChange=h+", "+c}var v={"x-placement":e.placement};return e.attributes=Xe({},v,e.attributes),e.styles=Xe({},l,e.styles),e.arrowStyles=Xe({},e.offsets.arrow,e.arrowStyles),e},gpuAcceleration:!0,x:"bottom",y:"right"},applyStyle:{order:900,enabled:!0,fn:function(e){var t,i;return ct(e.instance.popper,e.styles),t=e.instance.popper,i=e.attributes,Object.keys(i).forEach(function(e){!1!==i[e]?t.setAttribute(e,i[e]):t.removeAttribute(e)}),e.arrowElement&&Object.keys(e.arrowStyles).length&&ct(e.arrowElement,e.arrowStyles),e},onLoad:function(e,t,i,n,s){var a=Je(0,t,e),r=Ze(i.placement,a,t,e,i.modifiers.flip.boundariesElement,i.modifiers.flip.padding);return t.setAttribute("x-placement",r),ct(t,{position:"absolute"}),i},gpuAcceleration:void 0}}},_t=function(){function a(e,t){var i=this,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),this.scheduleUpdate=function(){return requestAnimationFrame(i.update)},this.update=Ae(this.update.bind(this)),this.options=Xe({},a.Defaults,n),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=e&&e.jquery?e[0]:e,this.popper=t&&t.jquery?t[0]:t,this.options.modifiers={},Object.keys(Xe({},a.Defaults.modifiers,n.modifiers)).forEach(function(e){i.options.modifiers[e]=Xe({},a.Defaults.modifiers[e]||{},n.modifiers?n.modifiers[e]:{})}),this.modifiers=Object.keys(this.options.modifiers).map(function(e){return Xe({name:e},i.options.modifiers[e])}).sort(function(e,t){return e.order-t.order}),this.modifiers.forEach(function(e){e.enabled&&Pe(e.onLoad)&&e.onLoad(i.reference,i.popper,i.options,e,i.state)}),this.update();var s=this.options.eventsEnabled;s&&this.enableEventListeners(),this.state.eventsEnabled=s}return Ye(a,[{key:"update",value:function(){return function(){if(!this.state.isDestroyed){var e={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}};e.offsets.reference=Je(this.state,this.popper,this.reference),e.placement=Ze(this.options.placement,e.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),e.originalPlacement=e.placement,e.offsets.popper=it(this.popper,e.offsets.reference,e.placement),e.offsets.popper.position="absolute",e=st(this.modifiers,e),this.state.isCreated?this.options.onUpdate(e):(this.state.isCreated=!0,this.options.onCreate(e))}}.call(this)}},{key:"destroy",value:function(){return function(){return this.state.isDestroyed=!0,at(this.modifiers,"applyStyle")&&(this.popper.removeAttribute("x-placement"),this.popper.style.left="",this.popper.style.position="",this.popper.style.top="",this.popper.style[rt("transform")]=""),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}.call(this)}},{key:"enableEventListeners",value:function(){return function(){this.state.eventsEnabled||(this.state=lt(this.reference,this.options,this.state,this.scheduleUpdate))}.call(this)}},{key:"disableEventListeners",value:function(){return dt.call(this)}}]),a}();_t.Utils=("undefined"!=typeof window?window:global).PopperUtils,_t.placements=pt,_t.Defaults=wt;var Et,xt,Tt,Ct,St,kt,It,Mt,Dt,At,Pt,$t,Ot,Lt,Nt,zt,Ht,jt,Bt,Rt,Wt,Vt,Ft,Yt,Gt,Xt,Ut,Kt,qt,Qt,Zt,Jt,ei,ti,ii,ni,si,ai,ri,oi,li,di,hi,ci,ui,pi,fi,gi,mi,vi,yi,bi,wi,_i,Ei,xi,Ti,Ci,Si,ki,Ii,Mi,Di,Ai,Pi,$i,Oi,Li,Ni,zi,Hi,ji,Bi,Ri,Wi,Vi,Fi,Yi,Gi,Xi,Ui,Ki,qi,Qi,Zi,Ji,en,tn,nn,sn,an,rn,on,ln,dn,hn,cn,un,pn,fn,gn,mn,vn,yn,bn,wn,_n,En,xn,Tn,Cn,Sn,kn,In,Mn,Dn,An,Pn,$n,On,Ln,Nn,zn,Hn,jn,Bn,Rn,Wn=(xt="dropdown",Ct="."+(Tt="bs.dropdown"),St=".data-api",kt=(Et=t).fn[xt],It=new RegExp("38|40|27"),Mt={HIDE:"hide"+Ct,HIDDEN:"hidden"+Ct,SHOW:"show"+Ct,SHOWN:"shown"+Ct,CLICK:"click"+Ct,CLICK_DATA_API:"click"+Ct+St,KEYDOWN_DATA_API:"keydown"+Ct+St,KEYUP_DATA_API:"keyup"+Ct+St},Dt="disabled",At="show",Pt="dropup",$t="dropright",Ot="dropleft",Lt="dropdown-menu-right",Nt="dropdown-menu-left",zt="position-static",Ht='[data-toggle="dropdown"]',jt=".dropdown form",Bt=".dropdown-menu",Rt=".navbar-nav",Wt=".dropdown-menu .dropdown-item:not(.disabled)",Vt="top-start",Ft="top-end",Yt="bottom-start",Gt="bottom-end",Xt="right-start",Ut="left-start",Kt={offset:0,flip:!0,boundary:"scrollParent"},qt={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)"},Qt=function(){function l(e,t){this._element=e,this._popper=null,this._config=this._getConfig(t),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}var e=l.prototype;return e.toggle=function(){if(!this._element.disabled&&!Et(this._element).hasClass(Dt)){var e=l._getParentFromElement(this._element),t=Et(this._menu).hasClass(At);if(l._clearMenus(),!t){var i={relatedTarget:this._element},n=Et.Event(Mt.SHOW,i);if(Et(e).trigger(n),!n.isDefaultPrevented()){if(!this._inNavbar){if(void 0===_t)throw new TypeError("Bootstrap dropdown require Popper.js (https://popper.js.org)");var s=this._element;Et(e).hasClass(Pt)&&(Et(this._menu).hasClass(Nt)||Et(this._menu).hasClass(Lt))&&(s=e),"scrollParent"!==this._config.boundary&&Et(e).addClass(zt),this._popper=new _t(s,this._menu,this._getPopperConfig())}"ontouchstart"in document.documentElement&&0===Et(e).closest(Rt).length&&Et("body").children().on("mouseover",null,Et.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),Et(this._menu).toggleClass(At),Et(e).toggleClass(At).trigger(Et.Event(Mt.SHOWN,i))}}}},e.dispose=function(){Et.removeData(this._element,Tt),Et(this._element).off(Ct),this._element=null,(this._menu=null)!==this._popper&&(this._popper.destroy(),this._popper=null)},e.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},e._addEventListeners=function(){var t=this;Et(this._element).on(Mt.CLICK,function(e){e.preventDefault(),e.stopPropagation(),t.toggle()})},e._getConfig=function(e){return e=h({},this.constructor.Default,Et(this._element).data(),e),Ee.typeCheckConfig(xt,e,this.constructor.DefaultType),e},e._getMenuElement=function(){if(!this._menu){var e=l._getParentFromElement(this._element);this._menu=Et(e).find(Bt)[0]}return this._menu},e._getPlacement=function(){var e=Et(this._element).parent(),t=Yt;return e.hasClass(Pt)?(t=Vt,Et(this._menu).hasClass(Lt)&&(t=Ft)):e.hasClass($t)?t=Xt:e.hasClass(Ot)?t=Ut:Et(this._menu).hasClass(Lt)&&(t=Gt),t},e._detectNavbar=function(){return 0<Et(this._element).closest(".navbar").length},e._getPopperConfig=function(){var t=this,e={};return"function"==typeof this._config.offset?e.fn=function(e){return e.offsets=h({},e.offsets,t._config.offset(e.offsets)||{}),e}:e.offset=this._config.offset,{placement:this._getPlacement(),modifiers:{offset:e,flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}}},l._jQueryInterface=function(t){return this.each(function(){var e=Et(this).data(Tt);if(e||(e=new l(this,"object"==typeof t?t:null),Et(this).data(Tt,e)),"string"==typeof t){if(void 0===e[t])throw new TypeError('No method named "'+t+'"');e[t]()}})},l._clearMenus=function(e){if(!e||3!==e.which&&("keyup"!==e.type||9===e.which))for(var t=Et.makeArray(Et(Ht)),i=0;i<t.length;i++){var n=l._getParentFromElement(t[i]),s=Et(t[i]).data(Tt),a={relatedTarget:t[i]};if(s){var r=s._menu;if(Et(n).hasClass(At)&&!(e&&("click"===e.type&&/input|textarea/i.test(e.target.tagName)||"keyup"===e.type&&9===e.which)&&Et.contains(n,e.target))){var o=Et.Event(Mt.HIDE,a);Et(n).trigger(o),o.isDefaultPrevented()||("ontouchstart"in document.documentElement&&Et("body").children().off("mouseover",null,Et.noop),t[i].setAttribute("aria-expanded","false"),Et(r).removeClass(At),Et(n).removeClass(At).trigger(Et.Event(Mt.HIDDEN,a)))}}}},l._getParentFromElement=function(e){var t,i=Ee.getSelectorFromElement(e);return i&&(t=Et(i)[0]),t||e.parentNode},l._dataApiKeydownHandler=function(e){if((/input|textarea/i.test(e.target.tagName)?!(32===e.which||27!==e.which&&(40!==e.which&&38!==e.which||Et(e.target).closest(Bt).length)):It.test(e.which))&&(e.preventDefault(),e.stopPropagation(),!this.disabled&&!Et(this).hasClass(Dt))){var t=l._getParentFromElement(this),i=Et(t).hasClass(At);if((i||27===e.which&&32===e.which)&&(!i||27!==e.which&&32!==e.which)){var n=Et(t).find(Wt).get();if(0!==n.length){var s=n.indexOf(e.target);38===e.which&&0<s&&s--,40===e.which&&s<n.length-1&&s++,s<0&&(s=0),n[s].focus()}}else{if(27===e.which){var a=Et(t).find(Ht)[0];Et(a).trigger("focus")}Et(this).trigger("click")}}},r(l,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return Kt}},{key:"DefaultType",get:function(){return qt}}]),l}(),Et(document).on(Mt.KEYDOWN_DATA_API,Ht,Qt._dataApiKeydownHandler).on(Mt.KEYDOWN_DATA_API,Bt,Qt._dataApiKeydownHandler).on(Mt.CLICK_DATA_API+" "+Mt.KEYUP_DATA_API,Qt._clearMenus).on(Mt.CLICK_DATA_API,Ht,function(e){e.preventDefault(),e.stopPropagation(),Qt._jQueryInterface.call(Et(this),"toggle")}).on(Mt.CLICK_DATA_API,jt,function(e){e.stopPropagation()}),Et.fn[xt]=Qt._jQueryInterface,Et.fn[xt].Constructor=Qt,Et.fn[xt].noConflict=function(){return Et.fn[xt]=kt,Qt._jQueryInterface},Qt),Vn=(Jt="modal",ti="."+(ei="bs.modal"),ii=(Zt=t).fn[Jt],ni={backdrop:!0,keyboard:!0,focus:!0,show:!0},si={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},ai={HIDE:"hide"+ti,HIDDEN:"hidden"+ti,SHOW:"show"+ti,SHOWN:"shown"+ti,FOCUSIN:"focusin"+ti,RESIZE:"resize"+ti,CLICK_DISMISS:"click.dismiss"+ti,KEYDOWN_DISMISS:"keydown.dismiss"+ti,MOUSEUP_DISMISS:"mouseup.dismiss"+ti,MOUSEDOWN_DISMISS:"mousedown.dismiss"+ti,CLICK_DATA_API:"click"+ti+".data-api"},ri="modal-scrollbar-measure",oi="modal-backdrop",li="modal-open",di="fade",hi="show",ci=".modal-dialog",ui='[data-toggle="modal"]',pi='[data-dismiss="modal"]',fi=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",gi=".sticky-top",mi=".navbar-toggler",vi=function(){function s(e,t){this._config=this._getConfig(t),this._element=e,this._dialog=Zt(e).find(ci)[0],this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._originalBodyPadding=0,this._scrollbarWidth=0}var e=s.prototype;return e.toggle=function(e){return this._isShown?this.hide():this.show(e)},e.show=function(e){var t=this;if(!this._isTransitioning&&!this._isShown){Ee.supportsTransitionEnd()&&Zt(this._element).hasClass(di)&&(this._isTransitioning=!0);var i=Zt.Event(ai.SHOW,{relatedTarget:e});Zt(this._element).trigger(i),this._isShown||i.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),Zt(document.body).addClass(li),this._setEscapeEvent(),this._setResizeEvent(),Zt(this._element).on(ai.CLICK_DISMISS,pi,function(e){return t.hide(e)}),Zt(this._dialog).on(ai.MOUSEDOWN_DISMISS,function(){Zt(t._element).one(ai.MOUSEUP_DISMISS,function(e){Zt(e.target).is(t._element)&&(t._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return t._showElement(e)}))}},e.hide=function(e){var t=this;if(e&&e.preventDefault(),!this._isTransitioning&&this._isShown){var i=Zt.Event(ai.HIDE);if(Zt(this._element).trigger(i),this._isShown&&!i.isDefaultPrevented()){this._isShown=!1;var n=Ee.supportsTransitionEnd()&&Zt(this._element).hasClass(di);n&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),Zt(document).off(ai.FOCUSIN),Zt(this._element).removeClass(hi),Zt(this._element).off(ai.CLICK_DISMISS),Zt(this._dialog).off(ai.MOUSEDOWN_DISMISS),n?Zt(this._element).one(Ee.TRANSITION_END,function(e){return t._hideModal(e)}).emulateTransitionEnd(300):this._hideModal()}}},e.dispose=function(){Zt.removeData(this._element,ei),Zt(window,document,this._element,this._backdrop).off(ti),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._scrollbarWidth=null},e.handleUpdate=function(){this._adjustDialog()},e._getConfig=function(e){return e=h({},ni,e),Ee.typeCheckConfig(Jt,e,si),e},e._showElement=function(e){var t=this,i=Ee.supportsTransitionEnd()&&Zt(this._element).hasClass(di);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.scrollTop=0,i&&Ee.reflow(this._element),Zt(this._element).addClass(hi),this._config.focus&&this._enforceFocus();var n=Zt.Event(ai.SHOWN,{relatedTarget:e}),s=function(){t._config.focus&&t._element.focus(),t._isTransitioning=!1,Zt(t._element).trigger(n)};i?Zt(this._dialog).one(Ee.TRANSITION_END,s).emulateTransitionEnd(300):s()},e._enforceFocus=function(){var t=this;Zt(document).off(ai.FOCUSIN).on(ai.FOCUSIN,function(e){document!==e.target&&t._element!==e.target&&0===Zt(t._element).has(e.target).length&&t._element.focus()})},e._setEscapeEvent=function(){var t=this;this._isShown&&this._config.keyboard?Zt(this._element).on(ai.KEYDOWN_DISMISS,function(e){27===e.which&&(e.preventDefault(),t.hide())}):this._isShown||Zt(this._element).off(ai.KEYDOWN_DISMISS)},e._setResizeEvent=function(){var t=this;this._isShown?Zt(window).on(ai.RESIZE,function(e){return t.handleUpdate(e)}):Zt(window).off(ai.RESIZE)},e._hideModal=function(){var e=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._isTransitioning=!1,this._showBackdrop(function(){Zt(document.body).removeClass(li),e._resetAdjustments(),e._resetScrollbar(),Zt(e._element).trigger(ai.HIDDEN)})},e._removeBackdrop=function(){this._backdrop&&(Zt(this._backdrop).remove(),this._backdrop=null)},e._showBackdrop=function(e){var t=this,i=Zt(this._element).hasClass(di)?di:"";if(this._isShown&&this._config.backdrop){var n=Ee.supportsTransitionEnd()&&i;if(this._backdrop=document.createElement("div"),this._backdrop.className=oi,i&&Zt(this._backdrop).addClass(i),Zt(this._backdrop).appendTo(document.body),Zt(this._element).on(ai.CLICK_DISMISS,function(e){t._ignoreBackdropClick?t._ignoreBackdropClick=!1:e.target===e.currentTarget&&("static"===t._config.backdrop?t._element.focus():t.hide())}),n&&Ee.reflow(this._backdrop),Zt(this._backdrop).addClass(hi),!e)return;if(!n)return void e();Zt(this._backdrop).one(Ee.TRANSITION_END,e).emulateTransitionEnd(150)}else if(!this._isShown&&this._backdrop){Zt(this._backdrop).removeClass(hi);var s=function(){t._removeBackdrop(),e&&e()};Ee.supportsTransitionEnd()&&Zt(this._element).hasClass(di)?Zt(this._backdrop).one(Ee.TRANSITION_END,s).emulateTransitionEnd(150):s()}else e&&e()},e._adjustDialog=function(){var e=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&e&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!e&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},e._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},e._checkScrollbar=function(){var e=document.body.getBoundingClientRect();this._isBodyOverflowing=e.left+e.right<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},e._setScrollbar=function(){var s=this;if(this._isBodyOverflowing){Zt(fi).each(function(e,t){var i=Zt(t)[0].style.paddingRight,n=Zt(t).css("padding-right");Zt(t).data("padding-right",i).css("padding-right",parseFloat(n)+s._scrollbarWidth+"px")}),Zt(gi).each(function(e,t){var i=Zt(t)[0].style.marginRight,n=Zt(t).css("margin-right");Zt(t).data("margin-right",i).css("margin-right",parseFloat(n)-s._scrollbarWidth+"px")}),Zt(mi).each(function(e,t){var i=Zt(t)[0].style.marginRight,n=Zt(t).css("margin-right");Zt(t).data("margin-right",i).css("margin-right",parseFloat(n)+s._scrollbarWidth+"px")});var e=document.body.style.paddingRight,t=Zt("body").css("padding-right");Zt("body").data("padding-right",e).css("padding-right",parseFloat(t)+this._scrollbarWidth+"px")}},e._resetScrollbar=function(){Zt(fi).each(function(e,t){var i=Zt(t).data("padding-right");void 0!==i&&Zt(t).css("padding-right",i).removeData("padding-right")}),Zt(gi+", "+mi).each(function(e,t){var i=Zt(t).data("margin-right");void 0!==i&&Zt(t).css("margin-right",i).removeData("margin-right")});var e=Zt("body").data("padding-right");void 0!==e&&Zt("body").css("padding-right",e).removeData("padding-right")},e._getScrollbarWidth=function(){var e=document.createElement("div");e.className=ri,document.body.appendChild(e);var t=e.getBoundingClientRect().width-e.clientWidth;return document.body.removeChild(e),t},s._jQueryInterface=function(i,n){return this.each(function(){var e=Zt(this).data(ei),t=h({},s.Default,Zt(this).data(),"object"==typeof i&&i);if(e||(e=new s(this,t),Zt(this).data(ei,e)),"string"==typeof i){if(void 0===e[i])throw new TypeError('No method named "'+i+'"');e[i](n)}else t.show&&e.show(n)})},r(s,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return ni}}]),s}(),Zt(document).on(ai.CLICK_DATA_API,ui,function(e){var t,i=this,n=Ee.getSelectorFromElement(this);n&&(t=Zt(n)[0]);var s=Zt(t).data(ei)?"toggle":h({},Zt(t).data(),Zt(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||e.preventDefault();var a=Zt(t).one(ai.SHOW,function(e){e.isDefaultPrevented()||a.one(ai.HIDDEN,function(){Zt(i).is(":visible")&&i.focus()})});vi._jQueryInterface.call(Zt(t),s,this)}),Zt.fn[Jt]=vi._jQueryInterface,Zt.fn[Jt].Constructor=vi,Zt.fn[Jt].noConflict=function(){return Zt.fn[Jt]=ii,vi._jQueryInterface},vi),Fn=(bi="tooltip",_i="."+(wi="bs.tooltip"),Ei=(yi=t).fn[bi],xi="bs-tooltip",Ti=new RegExp("(^|\\s)"+xi+"\\S+","g"),ki={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!(Si={AUTO:"auto",TOP:"top",RIGHT:"right",BOTTOM:"bottom",LEFT:"left"}),selector:!(Ci={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(number|string)",container:"(string|element|boolean)",fallbackPlacement:"(string|array)",boundary:"(string|element)"}),placement:"top",offset:0,container:!1,fallbackPlacement:"flip",boundary:"scrollParent"},Mi="out",Di={HIDE:"hide"+_i,HIDDEN:"hidden"+_i,SHOW:(Ii="show")+_i,SHOWN:"shown"+_i,INSERTED:"inserted"+_i,CLICK:"click"+_i,FOCUSIN:"focusin"+_i,FOCUSOUT:"focusout"+_i,MOUSEENTER:"mouseenter"+_i,MOUSELEAVE:"mouseleave"+_i},Ai="fade",Pi="show",$i=".tooltip-inner",Oi=".arrow",Li="hover",Ni="focus",zi="click",Hi="manual",ji=function(){function d(e,t){if(void 0===_t)throw new TypeError("Bootstrap tooltips require Popper.js (https://popper.js.org)");this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this.element=e,this.config=this._getConfig(t),this.tip=null,this._setListeners()}var e=d.prototype;return e.enable=function(){this._isEnabled=!0},e.disable=function(){this._isEnabled=!1},e.toggleEnabled=function(){this._isEnabled=!this._isEnabled},e.toggle=function(e){if(this._isEnabled)if(e){var t=this.constructor.DATA_KEY,i=yi(e.currentTarget).data(t);i||(i=new this.constructor(e.currentTarget,this._getDelegateConfig()),yi(e.currentTarget).data(t,i)),i._activeTrigger.click=!i._activeTrigger.click,i._isWithActiveTrigger()?i._enter(null,i):i._leave(null,i)}else{if(yi(this.getTipElement()).hasClass(Pi))return void this._leave(null,this);this._enter(null,this)}},e.dispose=function(){clearTimeout(this._timeout),yi.removeData(this.element,this.constructor.DATA_KEY),yi(this.element).off(this.constructor.EVENT_KEY),yi(this.element).closest(".modal").off("hide.bs.modal"),this.tip&&yi(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,(this._activeTrigger=null)!==this._popper&&this._popper.destroy(),this._popper=null,this.element=null,this.config=null,this.tip=null},e.show=function(){var t=this;if("none"===yi(this.element).css("display"))throw new Error("Please use show on visible elements");var e=yi.Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){yi(this.element).trigger(e);var i=yi.contains(this.element.ownerDocument.documentElement,this.element);if(e.isDefaultPrevented()||!i)return;var n=this.getTipElement(),s=Ee.getUID(this.constructor.NAME);n.setAttribute("id",s),this.element.setAttribute("aria-describedby",s),this.setContent(),this.config.animation&&yi(n).addClass(Ai);var a="function"==typeof this.config.placement?this.config.placement.call(this,n,this.element):this.config.placement,r=this._getAttachment(a);this.addAttachmentClass(r);var o=!1===this.config.container?document.body:yi(this.config.container);yi(n).data(this.constructor.DATA_KEY,this),yi.contains(this.element.ownerDocument.documentElement,this.tip)||yi(n).appendTo(o),yi(this.element).trigger(this.constructor.Event.INSERTED),this._popper=new _t(this.element,n,{placement:r,modifiers:{offset:{offset:this.config.offset},flip:{behavior:this.config.fallbackPlacement},arrow:{element:Oi},preventOverflow:{boundariesElement:this.config.boundary}},onCreate:function(e){e.originalPlacement!==e.placement&&t._handlePopperPlacementChange(e)},onUpdate:function(e){t._handlePopperPlacementChange(e)}}),yi(n).addClass(Pi),"ontouchstart"in document.documentElement&&yi("body").children().on("mouseover",null,yi.noop);var l=function(){t.config.animation&&t._fixTransition();var e=t._hoverState;t._hoverState=null,yi(t.element).trigger(t.constructor.Event.SHOWN),e===Mi&&t._leave(null,t)};Ee.supportsTransitionEnd()&&yi(this.tip).hasClass(Ai)?yi(this.tip).one(Ee.TRANSITION_END,l).emulateTransitionEnd(d._TRANSITION_DURATION):l()}},e.hide=function(e){var t=this,i=this.getTipElement(),n=yi.Event(this.constructor.Event.HIDE),s=function(){t._hoverState!==Ii&&i.parentNode&&i.parentNode.removeChild(i),t._cleanTipClass(),t.element.removeAttribute("aria-describedby"),yi(t.element).trigger(t.constructor.Event.HIDDEN),null!==t._popper&&t._popper.destroy(),e&&e()};yi(this.element).trigger(n),n.isDefaultPrevented()||(yi(i).removeClass(Pi),"ontouchstart"in document.documentElement&&yi("body").children().off("mouseover",null,yi.noop),this._activeTrigger[zi]=!1,this._activeTrigger[Ni]=!1,this._activeTrigger[Li]=!1,Ee.supportsTransitionEnd()&&yi(this.tip).hasClass(Ai)?yi(i).one(Ee.TRANSITION_END,s).emulateTransitionEnd(150):s(),this._hoverState="")},e.update=function(){null!==this._popper&&this._popper.scheduleUpdate()},e.isWithContent=function(){return Boolean(this.getTitle())},e.addAttachmentClass=function(e){yi(this.getTipElement()).addClass(xi+"-"+e)},e.getTipElement=function(){return this.tip=this.tip||yi(this.config.template)[0],this.tip},e.setContent=function(){var e=yi(this.getTipElement());this.setElementContent(e.find($i),this.getTitle()),e.removeClass(Ai+" "+Pi)},e.setElementContent=function(e,t){var i=this.config.html;"object"==typeof t&&(t.nodeType||t.jquery)?i?yi(t).parent().is(e)||e.empty().append(t):e.text(yi(t).text()):e[i?"html":"text"](t)},e.getTitle=function(){var e=this.element.getAttribute("data-original-title");return e||(e="function"==typeof this.config.title?this.config.title.call(this.element):this.config.title),e},e._getAttachment=function(e){return Si[e.toUpperCase()]},e._setListeners=function(){var n=this;this.config.trigger.split(" ").forEach(function(e){if("click"===e)yi(n.element).on(n.constructor.Event.CLICK,n.config.selector,function(e){return n.toggle(e)});else if(e!==Hi){var t=e===Li?n.constructor.Event.MOUSEENTER:n.constructor.Event.FOCUSIN,i=e===Li?n.constructor.Event.MOUSELEAVE:n.constructor.Event.FOCUSOUT;yi(n.element).on(t,n.config.selector,function(e){return n._enter(e)}).on(i,n.config.selector,function(e){return n._leave(e)})}yi(n.element).closest(".modal").on("hide.bs.modal",function(){return n.hide()})}),this.config.selector?this.config=h({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},e._fixTitle=function(){var e=typeof this.element.getAttribute("data-original-title");(this.element.getAttribute("title")||"string"!==e)&&(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},e._enter=function(e,t){var i=this.constructor.DATA_KEY;(t=t||yi(e.currentTarget).data(i))||(t=new this.constructor(e.currentTarget,this._getDelegateConfig()),yi(e.currentTarget).data(i,t)),e&&(t._activeTrigger["focusin"===e.type?Ni:Li]=!0),yi(t.getTipElement()).hasClass(Pi)||t._hoverState===Ii?t._hoverState=Ii:(clearTimeout(t._timeout),t._hoverState=Ii,t.config.delay&&t.config.delay.show?t._timeout=setTimeout(function(){t._hoverState===Ii&&t.show()},t.config.delay.show):t.show())},e._leave=function(e,t){var i=this.constructor.DATA_KEY;(t=t||yi(e.currentTarget).data(i))||(t=new this.constructor(e.currentTarget,this._getDelegateConfig()),yi(e.currentTarget).data(i,t)),e&&(t._activeTrigger["focusout"===e.type?Ni:Li]=!1),t._isWithActiveTrigger()||(clearTimeout(t._timeout),t._hoverState=Mi,t.config.delay&&t.config.delay.hide?t._timeout=setTimeout(function(){t._hoverState===Mi&&t.hide()},t.config.delay.hide):t.hide())},e._isWithActiveTrigger=function(){for(var e in this._activeTrigger)if(this._activeTrigger[e])return!0;return!1},e._getConfig=function(e){return"number"==typeof(e=h({},this.constructor.Default,yi(this.element).data(),e)).delay&&(e.delay={show:e.delay,hide:e.delay}),"number"==typeof e.title&&(e.title=e.title.toString()),"number"==typeof e.content&&(e.content=e.content.toString()),Ee.typeCheckConfig(bi,e,this.constructor.DefaultType),e},e._getDelegateConfig=function(){var e={};if(this.config)for(var t in this.config)this.constructor.Default[t]!==this.config[t]&&(e[t]=this.config[t]);return e},e._cleanTipClass=function(){var e=yi(this.getTipElement()),t=e.attr("class").match(Ti);null!==t&&0<t.length&&e.removeClass(t.join(""))},e._handlePopperPlacementChange=function(e){this._cleanTipClass(),this.addAttachmentClass(this._getAttachment(e.placement))},e._fixTransition=function(){var e=this.getTipElement(),t=this.config.animation;null===e.getAttribute("x-placement")&&(yi(e).removeClass(Ai),this.config.animation=!1,this.hide(),this.show(),this.config.animation=t)},d._jQueryInterface=function(i){return this.each(function(){var e=yi(this).data(wi),t="object"==typeof i&&i;if((e||!/dispose|hide/.test(i))&&(e||(e=new d(this,t),yi(this).data(wi,e)),"string"==typeof i)){if(void 0===e[i])throw new TypeError('No method named "'+i+'"');e[i]()}})},r(d,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return ki}},{key:"NAME",get:function(){return bi}},{key:"DATA_KEY",get:function(){return wi}},{key:"Event",get:function(){return Di}},{key:"EVENT_KEY",get:function(){return _i}},{key:"DefaultType",get:function(){return Ci}}]),d}(),yi.fn[bi]=ji._jQueryInterface,yi.fn[bi].Constructor=ji,yi.fn[bi].noConflict=function(){return yi.fn[bi]=Ei,ji._jQueryInterface},ji),Yn=(Ri="popover",Vi="."+(Wi="bs.popover"),Fi=(Bi=t).fn[Ri],Yi="bs-popover",Gi=new RegExp("(^|\\s)"+Yi+"\\S+","g"),Xi=h({},Fn.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),Ui=h({},Fn.DefaultType,{content:"(string|element|function)"}),Ki="fade",Qi=".popover-header",Zi=".popover-body",Ji={HIDE:"hide"+Vi,HIDDEN:"hidden"+Vi,SHOW:(qi="show")+Vi,SHOWN:"shown"+Vi,INSERTED:"inserted"+Vi,CLICK:"click"+Vi,FOCUSIN:"focusin"+Vi,FOCUSOUT:"focusout"+Vi,MOUSEENTER:"mouseenter"+Vi,MOUSELEAVE:"mouseleave"+Vi},en=function(e){var t,i;function n(){return e.apply(this,arguments)||this}i=e,(t=n).prototype=Object.create(i.prototype),(t.prototype.constructor=t).__proto__=i;var s=n.prototype;return s.isWithContent=function(){return this.getTitle()||this._getContent()},s.addAttachmentClass=function(e){Bi(this.getTipElement()).addClass(Yi+"-"+e)},s.getTipElement=function(){return this.tip=this.tip||Bi(this.config.template)[0],this.tip},s.setContent=function(){var e=Bi(this.getTipElement());this.setElementContent(e.find(Qi),this.getTitle());var t=this._getContent();"function"==typeof t&&(t=t.call(this.element)),this.setElementContent(e.find(Zi),t),e.removeClass(Ki+" "+qi)},s._getContent=function(){return this.element.getAttribute("data-content")||this.config.content},s._cleanTipClass=function(){var e=Bi(this.getTipElement()),t=e.attr("class").match(Gi);null!==t&&0<t.length&&e.removeClass(t.join(""))},n._jQueryInterface=function(i){return this.each(function(){var e=Bi(this).data(Wi),t="object"==typeof i?i:null;if((e||!/destroy|hide/.test(i))&&(e||(e=new n(this,t),Bi(this).data(Wi,e)),"string"==typeof i)){if(void 0===e[i])throw new TypeError('No method named "'+i+'"');e[i]()}})},r(n,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return Xi}},{key:"NAME",get:function(){return Ri}},{key:"DATA_KEY",get:function(){return Wi}},{key:"Event",get:function(){return Ji}},{key:"EVENT_KEY",get:function(){return Vi}},{key:"DefaultType",get:function(){return Ui}}]),n}(Fn),Bi.fn[Ri]=en._jQueryInterface,Bi.fn[Ri].Constructor=en,Bi.fn[Ri].noConflict=function(){return Bi.fn[Ri]=Fi,en._jQueryInterface},en),Gn=(nn="scrollspy",an="."+(sn="bs.scrollspy"),rn=(tn=t).fn[nn],on={offset:10,method:"auto",target:""},ln={offset:"number",method:"string",target:"(string|element)"},dn={ACTIVATE:"activate"+an,SCROLL:"scroll"+an,LOAD_DATA_API:"load"+an+".data-api"},hn="dropdown-item",cn="active",un='[data-spy="scroll"]',pn=".active",fn=".nav, .list-group",gn=".nav-link",mn=".nav-item",vn=".list-group-item",yn=".dropdown",bn=".dropdown-item",wn=".dropdown-toggle",_n="offset",En="position",xn=function(){function i(e,t){var i=this;this._element=e,this._scrollElement="BODY"===e.tagName?window:e,this._config=this._getConfig(t),this._selector=this._config.target+" "+gn+","+this._config.target+" "+vn+","+this._config.target+" "+bn,this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,tn(this._scrollElement).on(dn.SCROLL,function(e){return i._process(e)}),this.refresh(),this._process()}var e=i.prototype;return e.refresh=function(){var t=this,e=this._scrollElement===this._scrollElement.window?_n:En,s="auto"===this._config.method?e:this._config.method,a=s===En?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),tn.makeArray(tn(this._selector)).map(function(e){var t,i=Ee.getSelectorFromElement(e);if(i&&(t=tn(i)[0]),t){var n=t.getBoundingClientRect();if(n.width||n.height)return[tn(t)[s]().top+a,i]}return null}).filter(function(e){return e}).sort(function(e,t){return e[0]-t[0]}).forEach(function(e){t._offsets.push(e[0]),t._targets.push(e[1])})},e.dispose=function(){tn.removeData(this._element,sn),tn(this._scrollElement).off(an),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},e._getConfig=function(e){if("string"!=typeof(e=h({},on,e)).target){var t=tn(e.target).attr("id");t||(t=Ee.getUID(nn),tn(e.target).attr("id",t)),e.target="#"+t}return Ee.typeCheckConfig(nn,e,ln),e},e._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},e._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},e._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},e._process=function(){var e=this._getScrollTop()+this._config.offset,t=this._getScrollHeight(),i=this._config.offset+t-this._getOffsetHeight();if(this._scrollHeight!==t&&this.refresh(),i<=e){var n=this._targets[this._targets.length-1];this._activeTarget!==n&&this._activate(n)}else{if(this._activeTarget&&e<this._offsets[0]&&0<this._offsets[0])return this._activeTarget=null,void this._clear();for(var s=this._offsets.length;s--;){this._activeTarget!==this._targets[s]&&e>=this._offsets[s]&&(void 0===this._offsets[s+1]||e<this._offsets[s+1])&&this._activate(this._targets[s])}}},e._activate=function(t){this._activeTarget=t,this._clear();var e=this._selector.split(",");e=e.map(function(e){return e+'[data-target="'+t+'"],'+e+'[href="'+t+'"]'});var i=tn(e.join(","));i.hasClass(hn)?(i.closest(yn).find(wn).addClass(cn),i.addClass(cn)):(i.addClass(cn),i.parents(fn).prev(gn+", "+vn).addClass(cn),i.parents(fn).prev(mn).children(gn).addClass(cn)),tn(this._scrollElement).trigger(dn.ACTIVATE,{relatedTarget:t})},e._clear=function(){tn(this._selector).filter(pn).removeClass(cn)},i._jQueryInterface=function(t){return this.each(function(){var e=tn(this).data(sn);if(e||(e=new i(this,"object"==typeof t&&t),tn(this).data(sn,e)),"string"==typeof t){if(void 0===e[t])throw new TypeError('No method named "'+t+'"');e[t]()}})},r(i,null,[{key:"VERSION",get:function(){return"4.0.0"}},{key:"Default",get:function(){return on}}]),i}(),tn(window).on(dn.LOAD_DATA_API,function(){for(var e=tn.makeArray(tn(un)),t=e.length;t--;){var i=tn(e[t]);xn._jQueryInterface.call(i,i.data())}}),tn.fn[nn]=xn._jQueryInterface,tn.fn[nn].Constructor=xn,tn.fn[nn].noConflict=function(){return tn.fn[nn]=rn,xn._jQueryInterface},xn),Xn=(Sn="."+(Cn="bs.tab"),kn=(Tn=t).fn.tab,In={HIDE:"hide"+Sn,HIDDEN:"hidden"+Sn,SHOW:"show"+Sn,SHOWN:"shown"+Sn,CLICK_DATA_API:"click"+Sn+".data-api"},Mn="dropdown-menu",Dn="active",An="disabled",Pn="fade",$n="show",On=".dropdown",Ln=".nav, .list-group",Nn=".active",zn="> li > .active",Hn='[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',jn=".dropdown-toggle",Bn="> .dropdown-menu .active",Rn=function(){function n(e){this._element=e}var e=n.prototype;return e.show=function(){var i=this;if(!(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&Tn(this._element).hasClass(Dn)||Tn(this._element).hasClass(An))){var e,n,t=Tn(this._element).closest(Ln)[0],s=Ee.getSelectorFromElement(this._element);if(t){var a="UL"===t.nodeName?zn:Nn;n=(n=Tn.makeArray(Tn(t).find(a)))[n.length-1]}var r=Tn.Event(In.HIDE,{relatedTarget:this._element}),o=Tn.Event(In.SHOW,{relatedTarget:n});if(n&&Tn(n).trigger(r),Tn(this._element).trigger(o),!o.isDefaultPrevented()&&!r.isDefaultPrevented()){s&&(e=Tn(s)[0]),this._activate(this._element,t);var l=function(){var e=Tn.Event(In.HIDDEN,{relatedTarget:i._element}),t=Tn.Event(In.SHOWN,{relatedTarget:n});Tn(n).trigger(e),Tn(i._element).trigger(t)};e?this._activate(e,e.parentNode,l):l()}}},e.dispose=function(){Tn.removeData(this._element,Cn),this._element=null},e._activate=function(e,t,i){var n=this,s=("UL"===t.nodeName?Tn(t).find(zn):Tn(t).children(Nn))[0],a=i&&Ee.supportsTransitionEnd()&&s&&Tn(s).hasClass(Pn),r=function(){return n._transitionComplete(e,s,i)};s&&a?Tn(s).one(Ee.TRANSITION_END,r).emulateTransitionEnd(150):r()},e._transitionComplete=function(e,t,i){if(t){Tn(t).removeClass($n+" "+Dn);var n=Tn(t.parentNode).find(Bn)[0];n&&Tn(n).removeClass(Dn),"tab"===t.getAttribute("role")&&t.setAttribute("aria-selected",!1)}if(Tn(e).addClass(Dn),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!0),Ee.reflow(e),Tn(e).addClass($n),e.parentNode&&Tn(e.parentNode).hasClass(Mn)){var s=Tn(e).closest(On)[0];s&&Tn(s).find(jn).addClass(Dn),e.setAttribute("aria-expanded",!0)}i&&i()},n._jQueryInterface=function(i){return this.each(function(){var e=Tn(this),t=e.data(Cn);if(t||(t=new n(this),e.data(Cn,t)),"string"==typeof i){if(void 0===t[i])throw new TypeError('No method named "'+i+'"');t[i]()}})},r(n,null,[{key:"VERSION",get:function(){return"4.0.0"}}]),n}(),Tn(document).on(In.CLICK_DATA_API,Hn,function(e){e.preventDefault(),Rn._jQueryInterface.call(Tn(this),"show")}),Tn.fn.tab=Rn._jQueryInterface,Tn.fn.tab.Constructor=Rn,Tn.fn.tab.noConflict=function(){return Tn.fn.tab=kn,Rn._jQueryInterface},Rn);!function(e){if(void 0===e)throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");var t=e.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1===t[0]&&9===t[1]&&t[2]<1||4<=t[0])throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}(t),e.Util=Ee,e.Alert=xe,e.Button=Te,e.Carousel=Ce,e.Collapse=Se,e.Dropdown=Wn,e.Modal=Vn,e.Popover=Yn,e.Scrollspy=Gn,e.Tab=Xn,e.Tooltip=Fn,Object.defineProperty(e,"__esModule",{value:!0})}),function(h){"use strict";function s(e,t){if(!(this instanceof s)){var i=new s(e,t);return i.open(),i}this.id=s.id++,this.setup(e,t),this.chainCallbacks(s._callbackChain)}if(void 0!==h)if(h.fn.jquery.match(/-ajax/))"console"in window&&window.console.info("Featherlight needs regular jQuery, not the slim version.");else{var n=[],a=function(t){return n=h.grep(n,function(e){return e!==t&&0<e.$instance.closest("body").length})},r={allow:1,allowfullscreen:1,frameborder:1,height:1,longdesc:1,marginheight:1,marginwidth:1,mozallowfullscreen:1,name:1,referrerpolicy:1,sandbox:1,scrolling:1,src:1,srcdoc:1,style:1,webkitallowfullscreen:1,width:1},i={keyup:"onKeyUp",resize:"onResize"},o=function(e){h.each(s.opened().reverse(),function(){return e.isDefaultPrevented()||!1!==this[i[e.type]](e)?void 0:(e.preventDefault(),e.stopPropagation(),!1)})},l=function(e){if(e!==s._globalHandlerInstalled){s._globalHandlerInstalled=e;var t=h.map(i,function(e,t){return t+"."+s.prototype.namespace}).join(" ");h(window)[e?"on":"off"](t,o)}};s.prototype={constructor:s,namespace:"featherlight",targetAttr:"data-featherlight",variant:null,resetCss:!1,background:null,openTrigger:"click",closeTrigger:"click",filter:null,root:"body",openSpeed:250,closeSpeed:250,closeOnClick:"background",closeOnEsc:!0,closeIcon:"&#10005;",loading:"",persist:!1,otherClose:null,beforeOpen:h.noop,beforeContent:h.noop,beforeClose:h.noop,afterOpen:h.noop,afterContent:h.noop,afterClose:h.noop,onKeyUp:h.noop,onResize:h.noop,type:null,contentFilters:["jquery","image","html","ajax","iframe","text"],setup:function(e,t){"object"!=typeof e||e instanceof h!=0||t||(t=e,e=void 0);var i=h.extend(this,t,{target:e}),n=i.resetCss?i.namespace+"-reset":i.namespace,s=h(i.background||['<div class="'+n+"-loading "+n+'">','<div class="'+n+'-content">','<button class="'+n+"-close-icon "+i.namespace+'-close" aria-label="Close">',i.closeIcon,"</button>",'<div class="'+i.namespace+'-inner">'+i.loading+"</div>","</div>","</div>"].join("")),a="."+i.namespace+"-close"+(i.otherClose?","+i.otherClose:"");return i.$instance=s.clone().addClass(i.variant),i.$instance.on(i.closeTrigger+"."+i.namespace,function(e){if(!e.isDefaultPrevented()){var t=h(e.target);("background"===i.closeOnClick&&t.is("."+i.namespace)||"anywhere"===i.closeOnClick||t.closest(a).length)&&(i.close(e),e.preventDefault())}}),this},getContent:function(){if(!1!==this.persist&&this.$content)return this.$content;var t=this,e=this.constructor.contentFilters,i=function(e){return t.$currentTarget&&t.$currentTarget.attr(e)},n=i(t.targetAttr),s=t.target||n||"",a=e[t.type];if(!a&&s in e&&(a=e[s],s=t.target&&n),s=s||i("href")||"",!a)for(var r in e)t[r]&&(a=e[r],s=t[r]);if(!a){var o=s;if(s=null,h.each(t.contentFilters,function(){return(a=e[this]).test&&(s=a.test(o)),!s&&a.regex&&o.match&&o.match(a.regex)&&(s=o),!s}),!s)return"console"in window&&window.console.error("Featherlight: no content filter found "+(o?' for "'+o+'"':" (no target specified)")),!1}return a.process.call(t,s)},setContent:function(e){return this.$instance.removeClass(this.namespace+"-loading"),this.$instance.toggleClass(this.namespace+"-iframe",e.is("iframe")),this.$instance.find("."+this.namespace+"-inner").not(e).slice(1).remove().end().replaceWith(h.contains(this.$instance[0],e[0])?"":e),this.$content=e.addClass(this.namespace+"-inner"),this},open:function(t){var i=this;if(i.$instance.hide().appendTo(i.root),!(t&&t.isDefaultPrevented()||!1===i.beforeOpen(t))){t&&t.preventDefault();var e=i.getContent();if(e)return n.push(i),l(!0),i.$instance.fadeIn(i.openSpeed),i.beforeContent(t),h.when(e).always(function(e){i.setContent(e),i.afterContent(t)}).then(i.$instance.promise()).done(function(){i.afterOpen(t)})}return i.$instance.detach(),h.Deferred().reject().promise()},close:function(e){var t=this,i=h.Deferred();return!1===t.beforeClose(e)?i.reject():(0===a(t).length&&l(!1),t.$instance.fadeOut(t.closeSpeed,function(){t.$instance.detach(),t.afterClose(e),i.resolve()})),i.promise()},resize:function(e,t){if(e&&t){this.$content.css("width","").css("height","");var i=Math.max(e/(this.$content.parent().width()-1),t/(this.$content.parent().height()-1));1<i&&(i=t/Math.floor(t/i),this.$content.css("width",e/i+"px").css("height",t/i+"px"))}},chainCallbacks:function(e){for(var t in e)this[t]=h.proxy(e[t],this,h.proxy(this[t],this))}},h.extend(s,{id:0,autoBind:"[data-featherlight]",defaults:s.prototype,contentFilters:{jquery:{regex:/^[#.]\w/,test:function(e){return e instanceof h&&e},process:function(e){return!1!==this.persist?h(e):h(e).clone(!0)}},image:{regex:/\.(png|jpg|jpeg|gif|tiff?|bmp|svg)(\?\S*)?$/i,process:function(e){var t=h.Deferred(),i=new Image,n=h('<img src="'+e+'" alt="" class="'+this.namespace+'-image" />');return i.onload=function(){n.naturalWidth=i.width,n.naturalHeight=i.height,t.resolve(n)},i.onerror=function(){t.reject(n)},i.src=e,t.promise()}},html:{regex:/^\s*<[\w!][^<]*>/,process:function(e){return h(e)}},ajax:{regex:/./,process:function(e){var i=h.Deferred(),n=h("<div></div>").load(e,function(e,t){"error"!==t&&i.resolve(n.contents()),i.fail()});return i.promise()}},iframe:{process:function(e){var t=new h.Deferred,i=h("<iframe/>"),n=function(e,t){var i={},n=new RegExp("^"+t+"([A-Z])(.*)");for(var s in e){var a=s.match(n);a&&(i[(a[1]+a[2].replace(/([A-Z])/g,"-$1")).toLowerCase()]=e[s])}return i}(this,"iframe"),s=function(e,t){var i={};for(var n in e)n in t&&(i[n]=e[n],delete e[n]);return i}(n,r);return i.hide().attr("src",e).attr(s).css(n).on("load",function(){t.resolve(i.show())}).appendTo(this.$instance.find("."+this.namespace+"-content")),t.promise()}},text:{process:function(e){return h("<div>",{text:e})}}},functionAttributes:["beforeOpen","afterOpen","beforeContent","afterContent","beforeClose","afterClose"],readElementConfig:function(e,t){var n=this,s=new RegExp("^data-"+t+"-(.*)"),a={};return e&&e.attributes&&h.each(e.attributes,function(){var e=this.name.match(s);if(e){var t=this.value,i=h.camelCase(e[1]);if(0<=h.inArray(i,n.functionAttributes))t=new Function(t);else try{t=JSON.parse(t)}catch(e){}a[i]=t}}),a},extend:function(e,t){var i=function(){this.constructor=e};return i.prototype=this.prototype,e.prototype=new i,e.__super__=this.prototype,h.extend(e,this,t),e.defaults=e.prototype,e},attach:function(s,a,r){var o=this;"object"!=typeof a||a instanceof h!=0||r||(r=a,a=void 0);var l,e=(r=h.extend({},r)).namespace||o.defaults.namespace,d=h.extend({},o.defaults,o.readElementConfig(s[0],e),r),t=function(e){var t=h(e.currentTarget),i=h.extend({$source:s,$currentTarget:t},o.readElementConfig(s[0],d.namespace),o.readElementConfig(e.currentTarget,d.namespace),r),n=l||t.data("featherlight-persisted")||new o(a,i);"shared"===n.persist?l=n:!1!==n.persist&&t.data("featherlight-persisted",n),i.$currentTarget.blur&&i.$currentTarget.blur(),n.open(e)};return s.on(d.openTrigger+"."+d.namespace,d.filter,t),{filter:d.filter,handler:t}},current:function(){var e=this.opened();return e[e.length-1]||null},opened:function(){var t=this;return a(),h.grep(n,function(e){return e instanceof t})},close:function(e){var t=this.current();return t?t.close(e):void 0},_onReady:function(){var n=this;if(n.autoBind){var s=h(n.autoBind);s.each(function(){n.attach(h(this))}),h(document).on("click",n.autoBind,function(e){if(!e.isDefaultPrevented()){var t=h(e.currentTarget);if(s.length!==(s=s.add(t)).length){var i=n.attach(t);(!i.filter||0<h(e.target).parentsUntil(t,i.filter).length)&&i.handler(e)}}})}},_callbackChain:{onKeyUp:function(e,t){return 27===t.keyCode?(this.closeOnEsc&&h.featherlight.close(t),!1):e(t)},beforeOpen:function(e,t){return h(document.documentElement).addClass("with-featherlight"),this._previouslyActive=document.activeElement,this._$previouslyTabbable=h("a, input, select, textarea, iframe, button, iframe, [contentEditable=true]").not("[tabindex]").not(this.$instance.find("button")),this._$previouslyWithTabIndex=h("[tabindex]").not('[tabindex="-1"]'),this._previousWithTabIndices=this._$previouslyWithTabIndex.map(function(e,t){return h(t).attr("tabindex")}),this._$previouslyWithTabIndex.add(this._$previouslyTabbable).attr("tabindex",-1),document.activeElement.blur&&document.activeElement.blur(),e(t)},afterClose:function(e,t){var i=e(t),n=this;return this._$previouslyTabbable.removeAttr("tabindex"),this._$previouslyWithTabIndex.each(function(e,t){h(t).attr("tabindex",n._previousWithTabIndices[e])}),this._previouslyActive.focus(),0===s.opened().length&&h(document.documentElement).removeClass("with-featherlight"),i},onResize:function(e,t){return this.resize(this.$content.naturalWidth,this.$content.naturalHeight),e(t)},afterContent:function(e,t){var i=e(t);return this.$instance.find("[autofocus]:not([disabled])").focus(),this.onResize(t),i}}}),h.featherlight=s,h.fn.featherlight=function(e,t){return s.attach(this,e,t),this},h(document).ready(function(){s._onReady()})}else"console"in window&&window.console.info("Too much lightness, Featherlight needs jQuery.")}(jQuery),function(a){"use strict";function n(e,t){if(!(this instanceof n)){var i=new n(a.extend({$source:e,$currentTarget:e.first()},t));return i.open(),i}a.featherlight.apply(this,arguments),this.chainCallbacks(o)}var e=function(e){window.console&&window.console.warn&&window.console.warn("FeatherlightGallery: "+e)};if(void 0===a)return e("Too much lightness, Featherlight needs jQuery.");if(!a.featherlight)return e("Load the featherlight plugin before the gallery plugin");var t="ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch,i=a.event&&a.event.special.swipeleft&&a,s=window.Hammer&&function(e){var t=new window.Hammer.Manager(e[0]);return t.add(new window.Hammer.Swipe),t},r=t&&(i||s);t&&!r&&e("No compatible swipe library detected; one must be included before featherlightGallery for swipe motions to navigate the galleries.");var o={afterClose:function(e,t){var i=this;return i.$instance.off("next."+i.namespace+" previous."+i.namespace),i._swiper&&(i._swiper.off("swipeleft",i._swipeleft).off("swiperight",i._swiperight),i._swiper=null),e(t)},beforeOpen:function(e,t){var i=this;return i.$instance.on("next."+i.namespace+" previous."+i.namespace,function(e){var t="next"===e.type?1:-1;i.navigateTo(i.currentNavigation()+t)}),r&&(i._swiper=r(i.$instance).on("swipeleft",i._swipeleft=function(){i.$instance.trigger("next")}).on("swiperight",i._swiperight=function(){i.$instance.trigger("previous")}),i.$instance.addClass(this.namespace+"-swipe-aware",r)),i.$instance.find("."+i.namespace+"-content").append(i.createNavigation("previous")).append(i.createNavigation("next")),e(t)},beforeContent:function(e,t){var i=this.currentNavigation(),n=this.slides().length;return this.$instance.toggleClass(this.namespace+"-first-slide",0===i).toggleClass(this.namespace+"-last-slide",i===n-1),e(t)},onKeyUp:function(e,t){var i={37:"previous",39:"next"}[t.keyCode];return i?(this.$instance.trigger(i),!1):e(t)}};a.featherlight.extend(n,{autoBind:"[data-featherlight-gallery]"}),a.extend(n.prototype,{previousIcon:"&#9664;",nextIcon:"&#9654;",galleryFadeIn:100,galleryFadeOut:300,slides:function(){return this.filter?this.$source.find(this.filter):this.$source},images:function(){return e("images is deprecated, please use slides instead"),this.slides()},currentNavigation:function(){return this.slides().index(this.$currentTarget)},navigateTo:function(e){var t=this,i=t.slides(),n=i.length,s=t.$instance.find("."+t.namespace+"-inner");return e=(e%n+n)%n,t.$currentTarget=i.eq(e),t.beforeContent(),a.when(t.getContent(),s.fadeTo(t.galleryFadeOut,.2)).always(function(e){t.setContent(e),t.afterContent(),e.fadeTo(t.galleryFadeIn,1)})},createNavigation:function(t){var i=this;return a('<span title="'+t+'" class="'+this.namespace+"-"+t+'"><span>'+this[t+"Icon"]+"</span></span>").click(function(e){a(this).trigger(t+"."+i.namespace),e.preventDefault()})}}),a.featherlightGallery=n,a.fn.featherlightGallery=function(e){return n.attach(this,e),this},a(document).ready(function(){n._onReady()})}(jQuery),function(s,i,O,u){"use strict";var a=O("html"),n=O(s),d=O(i),L=O.fancybox=function(){L.open.apply(this,arguments)},r=navigator.userAgent.match(/msie/i),o=null,h=i.createTouch!==u,p=function(e){return e&&e.hasOwnProperty&&e instanceof O},f=function(e){return e&&"string"===O.type(e)},N=function(e){return f(e)&&0<e.indexOf("%")},z=function(e,t){var i=parseInt(e,10)||0;return t&&N(e)&&(i=L.getViewport()[t]/100*i),Math.ceil(i)},H=function(e,t){return z(e,t)+"px"};O.extend(L,{version:"2.1.7",defaults:{padding:15,margin:20,width:800,height:600,minWidth:100,minHeight:100,maxWidth:9999,maxHeight:9999,pixelRatio:1,autoSize:!0,autoHeight:!1,autoWidth:!1,autoResize:!0,autoCenter:!h,fitToView:!0,aspectRatio:!1,topRatio:.5,leftRatio:.5,scrolling:"auto",wrapCSS:"",arrows:!0,closeBtn:!0,closeClick:!1,nextClick:!1,mouseWheel:!0,autoPlay:!1,playSpeed:3e3,preload:3,modal:!1,loop:!0,ajax:{dataType:"html",headers:{"X-fancyBox":!0}},iframe:{scrolling:"auto",preload:!0},swf:{wmode:"transparent",allowfullscreen:"true",allowscriptaccess:"always"},keys:{next:{13:"left",34:"up",39:"left",40:"up"},prev:{8:"right",33:"down",37:"right",38:"down"},close:[27],play:[32],toggle:[70]},direction:{next:"left",prev:"right"},scrollOutside:!0,index:0,type:null,href:null,content:null,title:null,tpl:{wrap:'<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',image:'<img class="fancybox-image" src="{href}" alt="" />',iframe:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen'+(r?' allowtransparency="true"':"")+"></iframe>",error:'<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',closeBtn:'<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>',loading:'<div id="fancybox-loading"><div></div></div>'},openEffect:"fade",openSpeed:250,openEasing:"swing",openOpacity:!0,openMethod:"zoomIn",closeEffect:"fade",closeSpeed:250,closeEasing:"swing",closeOpacity:!0,closeMethod:"zoomOut",nextEffect:"elastic",nextSpeed:250,nextEasing:"swing",nextMethod:"changeIn",prevEffect:"elastic",prevSpeed:250,prevEasing:"swing",prevMethod:"changeOut",helpers:{overlay:!0,title:!0},onCancel:O.noop,beforeLoad:O.noop,afterLoad:O.noop,beforeShow:O.noop,afterShow:O.noop,beforeChange:O.noop,beforeClose:O.noop,afterClose:O.noop},group:{},opts:{},previous:null,coming:null,current:null,isActive:!1,isOpen:!1,isOpened:!1,wrap:null,skin:null,outer:null,inner:null,player:{timer:null,isActive:!1},ajaxLoad:null,imgPreload:null,transitions:{},helpers:{},open:function(h,c){if(h&&(O.isPlainObject(c)||(c={}),!1!==L.close(!0)))return O.isArray(h)||(h=p(h)?O(h).get():[h]),O.each(h,function(e,t){var i,n,s,a,r,o,l,d={};"object"===O.type(t)&&(t.nodeType&&(t=O(t)),p(t)?(d={href:t.data("fancybox-href")||t.attr("href"),title:O("<div/>").text(t.data("fancybox-title")||t.attr("title")||"").html(),isDom:!0,element:t},O.metadata&&O.extend(!0,d,t.metadata())):d=t),i=c.href||d.href||(f(t)?t:null),n=c.title!==u?c.title:d.title||"",!(a=(s=c.content||d.content)?"html":c.type||d.type)&&d.isDom&&((a=t.data("fancybox-type"))||(a=(r=t.prop("class").match(/fancybox\.(\w+)/))?r[1]:null)),f(i)&&(a||(L.isImage(i)?a="image":L.isSWF(i)?a="swf":"#"===i.charAt(0)?a="inline":f(t)&&(a="html",s=t)),"ajax"===a&&(i=(o=i.split(/\s+/,2)).shift(),l=o.shift())),s||("inline"===a?i?s=O(f(i)?i.replace(/.*(?=#[^\s]+$)/,""):i):d.isDom&&(s=t):"html"===a?s=i:a||i||!d.isDom||(a="inline",s=t)),O.extend(d,{href:i,type:a,content:s,title:n,selector:l}),h[e]=d}),L.opts=O.extend(!0,{},L.defaults,c),c.keys!==u&&(L.opts.keys=!!c.keys&&O.extend({},L.defaults.keys,c.keys)),L.group=h,L._start(L.opts.index)},cancel:function(){var e=L.coming;e&&!1===L.trigger("onCancel")||(L.hideLoading(),e&&(L.ajaxLoad&&L.ajaxLoad.abort(),L.ajaxLoad=null,L.imgPreload&&(L.imgPreload.onload=L.imgPreload.onerror=null),e.wrap&&e.wrap.stop(!0,!0).trigger("onReset").remove(),L.coming=null,L.current||L._afterZoomOut(e)))},close:function(e){L.cancel(),!1!==L.trigger("beforeClose")&&(L.unbindEvents(),L.isActive&&(L.isOpen&&!0!==e?(L.isOpen=L.isOpened=!1,L.isClosing=!0,O(".fancybox-item, .fancybox-nav").remove(),L.wrap.stop(!0,!0).removeClass("fancybox-opened"),L.transitions[L.current.closeMethod]()):(O(".fancybox-wrap").stop(!0).trigger("onReset").remove(),L._afterZoomOut())))},play:function(e){var t=function(){clearTimeout(L.player.timer)},i=function(){t(),L.current&&L.player.isActive&&(L.player.timer=setTimeout(L.next,L.current.playSpeed))},n=function(){t(),d.unbind(".player"),L.player.isActive=!1,L.trigger("onPlayEnd")};!0===e||!L.player.isActive&&!1!==e?L.current&&(L.current.loop||L.current.index<L.group.length-1)&&(L.player.isActive=!0,d.bind({"onCancel.player beforeClose.player":n,"onUpdate.player":i,"beforeLoad.player":t}),i(),L.trigger("onPlayStart")):n()},next:function(e){var t=L.current;t&&(f(e)||(e=t.direction.next),L.jumpto(t.index+1,e,"next"))},prev:function(e){var t=L.current;t&&(f(e)||(e=t.direction.prev),L.jumpto(t.index-1,e,"prev"))},jumpto:function(e,t,i){var n=L.current;n&&(e=z(e),L.direction=t||n.direction[e>=n.index?"next":"prev"],L.router=i||"jumpto",n.loop&&(e<0&&(e=n.group.length+e%n.group.length),e%=n.group.length),n.group[e]!==u&&(L.cancel(),L._start(e)))},reposition:function(e,t){var i,n=L.current,s=n?n.wrap:null;s&&(i=L._getPosition(t),e&&"scroll"===e.type?(delete i.position,s.stop(!0,!0).animate(i,200)):(s.css(i),n.pos=O.extend({},n.dim,i)))},update:function(t){var i=t&&t.originalEvent&&t.originalEvent.type,n=!i||"orientationchange"===i;n&&(clearTimeout(o),o=null),L.isOpen&&!o&&(o=setTimeout(function(){var e=L.current;e&&!L.isClosing&&(L.wrap.removeClass("fancybox-tmp"),(n||"load"===i||"resize"===i&&e.autoResize)&&L._setDimension(),"scroll"===i&&e.canShrink||L.reposition(t),L.trigger("onUpdate"),o=null)},n&&!h?0:300))},toggle:function(e){L.isOpen&&(L.current.fitToView="boolean"===O.type(e)?e:!L.current.fitToView,h&&(L.wrap.removeAttr("style").addClass("fancybox-tmp"),L.trigger("onUpdate")),L.update())},hideLoading:function(){d.unbind(".loading"),O("#fancybox-loading").remove()},showLoading:function(){var e,t;L.hideLoading(),e=O(L.opts.tpl.loading).click(L.cancel).appendTo("body"),d.bind("keydown.loading",function(e){27===(e.which||e.keyCode)&&(e.preventDefault(),L.cancel())}),L.defaults.fixed||(t=L.getViewport(),e.css({position:"absolute",top:.5*t.h+t.y,left:.5*t.w+t.x})),L.trigger("onLoading")},getViewport:function(){var e=L.current&&L.current.locked||!1,t={x:n.scrollLeft(),y:n.scrollTop()};return e&&e.length?(t.w=e[0].clientWidth,t.h=e[0].clientHeight):(t.w=h&&s.innerWidth?s.innerWidth:n.width(),t.h=h&&s.innerHeight?s.innerHeight:n.height()),t},unbindEvents:function(){L.wrap&&p(L.wrap)&&L.wrap.unbind(".fb"),d.unbind(".fb"),n.unbind(".fb")},bindEvents:function(){var t,l=L.current;l&&(n.bind("orientationchange.fb"+(h?"":" resize.fb")+(l.autoCenter&&!l.locked?" scroll.fb":""),L.update),(t=l.keys)&&d.bind("keydown.fb",function(i){var n=i.which||i.keyCode,e=i.target||i.srcElement;if(27===n&&L.coming)return!1;i.ctrlKey||i.altKey||i.shiftKey||i.metaKey||e&&(e.type||O(e).is("[contenteditable]"))||O.each(t,function(e,t){return 1<l.group.length&&t[n]!==u?(L[e](t[n]),i.preventDefault(),!1):-1<O.inArray(n,t)?(L[e](),i.preventDefault(),!1):void 0})}),O.fn.mousewheel&&l.mouseWheel&&L.wrap.bind("mousewheel.fb",function(e,t,i,n){for(var s,a=e.target||null,r=O(a),o=!1;r.length&&!(o||r.is(".fancybox-skin")||r.is(".fancybox-wrap"));)o=(s=r[0])&&!(s.style.overflow&&"hidden"===s.style.overflow)&&(s.clientWidth&&s.scrollWidth>s.clientWidth||s.clientHeight&&s.scrollHeight>s.clientHeight),r=O(r).parent();0===t||o||1<L.group.length&&!l.canShrink&&(0<n||0<i?L.prev(0<n?"down":"left"):(n<0||i<0)&&L.next(n<0?"up":"right"),e.preventDefault())}))},trigger:function(i,e){var t,n=e||L.coming||L.current;if(n){if(O.isFunction(n[i])&&(t=n[i].apply(n,Array.prototype.slice.call(arguments,1))),!1===t)return!1;n.helpers&&O.each(n.helpers,function(e,t){t&&L.helpers[e]&&O.isFunction(L.helpers[e][i])&&L.helpers[e][i](O.extend(!0,{},L.helpers[e].defaults,t),n)})}d.trigger(i)},isImage:function(e){return f(e)&&e.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i)},isSWF:function(e){return f(e)&&e.match(/\.(swf)((\?|#).*)?$/i)},_start:function(e){var t,i,n,s,a,r={};if(e=z(e),!(t=L.group[e]||null))return!1;if(s=(r=O.extend(!0,{},L.opts,t)).margin,a=r.padding,"number"===O.type(s)&&(r.margin=[s,s,s,s]),"number"===O.type(a)&&(r.padding=[a,a,a,a]),r.modal&&O.extend(!0,r,{closeBtn:!1,closeClick:!1,nextClick:!1,arrows:!1,mouseWheel:!1,keys:null,helpers:{overlay:{closeClick:!1}}}),r.autoSize&&(r.autoWidth=r.autoHeight=!0),"auto"===r.width&&(r.autoWidth=!0),"auto"===r.height&&(r.autoHeight=!0),r.group=L.group,r.index=e,L.coming=r,!1!==L.trigger("beforeLoad")){if(n=r.type,i=r.href,!n)return L.coming=null,!(!L.current||!L.router||"jumpto"===L.router)&&(L.current.index=e,L[L.router](L.direction));if(L.isActive=!0,"image"!==n&&"swf"!==n||(r.autoHeight=r.autoWidth=!1,r.scrolling="visible"),"image"===n&&(r.aspectRatio=!0),"iframe"===n&&h&&(r.scrolling="scroll"),r.wrap=O(r.tpl.wrap).addClass("fancybox-"+(h?"mobile":"desktop")+" fancybox-type-"+n+" fancybox-tmp "+r.wrapCSS).appendTo(r.parent||"body"),O.extend(r,{skin:O(".fancybox-skin",r.wrap),outer:O(".fancybox-outer",r.wrap),inner:O(".fancybox-inner",r.wrap)}),O.each(["Top","Right","Bottom","Left"],function(e,t){r.skin.css("padding"+t,H(r.padding[e]))}),L.trigger("onReady"),"inline"===n||"html"===n){if(!r.content||!r.content.length)return L._error("content")}else if(!i)return L._error("href");"image"===n?L._loadImage():"ajax"===n?L._loadAjax():"iframe"===n?L._loadIframe():L._afterLoad()}else L.coming=null},_error:function(e){O.extend(L.coming,{type:"html",autoWidth:!0,autoHeight:!0,minWidth:0,minHeight:0,scrolling:"no",hasError:e,content:L.coming.tpl.error}),L._afterLoad()},_loadImage:function(){var e=L.imgPreload=new Image;e.onload=function(){this.onload=this.onerror=null,L.coming.width=this.width/L.opts.pixelRatio,L.coming.height=this.height/L.opts.pixelRatio,L._afterLoad()},e.onerror=function(){this.onload=this.onerror=null,L._error("image")},e.src=L.coming.href,!0!==e.complete&&L.showLoading()},_loadAjax:function(){var i=L.coming;L.showLoading(),L.ajaxLoad=O.ajax(O.extend({},i.ajax,{url:i.href,error:function(e,t){L.coming&&"abort"!==t?L._error("ajax",e):L.hideLoading()},success:function(e,t){"success"===t&&(i.content=e,L._afterLoad())}}))},_loadIframe:function(){var e=L.coming,t=O(e.tpl.iframe.replace(/\{rnd\}/g,(new Date).getTime())).attr("scrolling",h?"auto":e.iframe.scrolling).attr("src",e.href);O(e.wrap).bind("onReset",function(){try{O(this).find("iframe").hide().attr("src","//about:blank").end().empty()}catch(e){}}),e.iframe.preload&&(L.showLoading(),t.one("load",function(){O(this).data("ready",1),h||O(this).bind("load.fb",L.update),O(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show(),L._afterLoad()})),e.content=t.appendTo(e.inner),e.iframe.preload||L._afterLoad()},_preloadImages:function(){var e,t,i=L.group,n=L.current,s=i.length,a=n.preload?Math.min(n.preload,s-1):0;for(t=1;t<=a;t+=1)"image"===(e=i[(n.index+t)%s]).type&&e.href&&((new Image).src=e.href)},_afterLoad:function(){var e,i,t,n,s,a,r=L.coming,o=L.current,l="fancybox-placeholder";if(L.hideLoading(),r&&!1!==L.isActive){if(!1===L.trigger("afterLoad",r,o))return r.wrap.stop(!0).trigger("onReset").remove(),void(L.coming=null);switch(o&&(L.trigger("beforeChange",o),o.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove()),L.unbindEvents(),i=(e=r).content,t=r.type,n=r.scrolling,O.extend(L,{wrap:e.wrap,skin:e.skin,outer:e.outer,inner:e.inner,current:e,previous:o}),s=e.href,t){case"inline":case"ajax":case"html":e.selector?i=O("<div>").html(i).find(e.selector):p(i)&&(i.data(l)||i.data(l,O('<div class="'+l+'"></div>').insertAfter(i).hide()),i=i.show().detach(),e.wrap.bind("onReset",function(){O(this).find(i).length&&i.hide().replaceAll(i.data(l)).data(l,!1)}));break;case"image":i=e.tpl.image.replace(/\{href\}/g,s);break;case"swf":i='<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="'+s+'"></param>',a="",O.each(e.swf,function(e,t){i+='<param name="'+e+'" value="'+t+'"></param>',a+=" "+e+'="'+t+'"'}),i+='<embed src="'+s+'" type="application/x-shockwave-flash" width="100%" height="100%"'+a+"></embed></object>"}p(i)&&i.parent().is(e.inner)||e.inner.append(i),L.trigger("beforeShow"),e.inner.css("overflow","yes"===n?"scroll":"no"===n?"hidden":n),L._setDimension(),L.reposition(),L.isOpen=!1,L.coming=null,L.bindEvents(),L.isOpened?o.prevMethod&&L.transitions[o.prevMethod]():O(".fancybox-wrap").not(e.wrap).stop(!0).trigger("onReset").remove(),L.transitions[L.isOpened?e.nextMethod:e.openMethod](),L._preloadImages()}},_setDimension:function(){var e,t,i,n,s,a,r,o,l,d,h,c,u,p,f,g,m,v=L.getViewport(),y=0,b=L.wrap,w=L.skin,_=L.inner,E=L.current,x=E.width,T=E.height,C=E.minWidth,S=E.minHeight,k=E.maxWidth,I=E.maxHeight,M=E.scrolling,D=E.scrollOutside?E.scrollbarWidth:0,A=E.margin,P=z(A[1]+A[3]),$=z(A[0]+A[2]);if(b.add(w).add(_).width("auto").height("auto").removeClass("fancybox-tmp"),s=P+(i=z(w.outerWidth(!0)-w.width())),a=$+(n=z(w.outerHeight(!0)-w.height())),r=N(x)?(v.w-s)*z(x)/100:x,o=N(T)?(v.h-a)*z(T)/100:T,"iframe"===E.type){if(g=E.content,E.autoHeight&&g&&1===g.data("ready"))try{g[0].contentWindow.document.location&&(_.width(r).height(9999),m=g.contents().find("body"),D&&m.css("overflow-x","hidden"),o=m.outerHeight(!0))}catch(e){}}else(E.autoWidth||E.autoHeight)&&(_.addClass("fancybox-tmp"),E.autoWidth||_.width(r),E.autoHeight||_.height(o),E.autoWidth&&(r=_.width()),E.autoHeight&&(o=_.height()),_.removeClass("fancybox-tmp"));if(x=z(r),T=z(o),h=r/o,C=z(N(C)?z(C,"w")-s:C),k=z(N(k)?z(k,"w")-s:k),S=z(N(S)?z(S,"h")-a:S),l=k,d=I=z(N(I)?z(I,"h")-a:I),E.fitToView&&(k=Math.min(v.w-s,k),I=Math.min(v.h-a,I)),p=v.w-P,f=v.h-$,E.aspectRatio?(k<x&&(T=z((x=k)/h)),I<T&&(x=z((T=I)*h)),x<C&&(T=z((x=C)/h)),T<S&&(x=z((T=S)*h))):(x=Math.max(C,Math.min(x,k)),E.autoHeight&&"iframe"!==E.type&&(_.width(x),T=_.height()),T=Math.max(S,Math.min(T,I))),E.fitToView)if(_.width(x).height(T),b.width(x+i),c=b.width(),u=b.height(),E.aspectRatio)for(;(p<c||f<u)&&C<x&&S<T&&!(19<y++);)T=Math.max(S,Math.min(I,T-10)),(x=z(T*h))<C&&(T=z((x=C)/h)),k<x&&(T=z((x=k)/h)),_.width(x).height(T),b.width(x+i),c=b.width(),u=b.height();else x=Math.max(C,Math.min(x,x-(c-p))),T=Math.max(S,Math.min(T,T-(u-f)));D&&"auto"===M&&T<o&&x+i+D<p&&(x+=D),_.width(x).height(T),b.width(x+i),c=b.width(),u=b.height(),e=(p<c||f<u)&&C<x&&S<T,t=E.aspectRatio?x<l&&T<d&&x<r&&T<o:(x<l||T<d)&&(x<r||T<o),O.extend(E,{dim:{width:H(c),height:H(u)},origWidth:r,origHeight:o,canShrink:e,canExpand:t,wPadding:i,hPadding:n,wrapSpace:u-w.outerHeight(!0),skinSpace:w.height()-T}),!g&&E.autoHeight&&S<T&&T<I&&!t&&_.height("auto")},_getPosition:function(e){var t=L.current,i=L.getViewport(),n=t.margin,s=L.wrap.width()+n[1]+n[3],a=L.wrap.height()+n[0]+n[2],r={position:"absolute",top:n[0],left:n[3]};return t.autoCenter&&t.fixed&&!e&&a<=i.h&&s<=i.w?r.position="fixed":t.locked||(r.top+=i.y,r.left+=i.x),r.top=H(Math.max(r.top,r.top+(i.h-a)*t.topRatio)),r.left=H(Math.max(r.left,r.left+(i.w-s)*t.leftRatio)),r},_afterZoomIn:function(){var t=L.current;t&&(L.isOpen=L.isOpened=!0,L.wrap.css("overflow","visible").addClass("fancybox-opened").hide().show(0),L.update(),(t.closeClick||t.nextClick&&1<L.group.length)&&L.inner.css("cursor","pointer").bind("click.fb",function(e){O(e.target).is("a")||O(e.target).parent().is("a")||(e.preventDefault(),L[t.closeClick?"close":"next"]())}),t.closeBtn&&O(t.tpl.closeBtn).appendTo(L.skin).bind("click.fb",function(e){e.preventDefault(),L.close()}),t.arrows&&1<L.group.length&&((t.loop||0<t.index)&&O(t.tpl.prev).appendTo(L.outer).bind("click.fb",L.prev),(t.loop||t.index<L.group.length-1)&&O(t.tpl.next).appendTo(L.outer).bind("click.fb",L.next)),L.trigger("afterShow"),t.loop||t.index!==t.group.length-1?L.opts.autoPlay&&!L.player.isActive&&(L.opts.autoPlay=!1,L.play(!0)):L.play(!1))},_afterZoomOut:function(e){e=e||L.current,O(".fancybox-wrap").trigger("onReset").remove(),O.extend(L,{group:{},opts:{},router:!1,current:null,isActive:!1,isOpened:!1,isOpen:!1,isClosing:!1,wrap:null,skin:null,outer:null,inner:null}),L.trigger("afterClose",e)}}),L.transitions={getOrigPosition:function(){var e=L.current,t=e.element,i=e.orig,n={},s=50,a=50,r=e.hPadding,o=e.wPadding,l=L.getViewport();return!i&&e.isDom&&t.is(":visible")&&((i=t.find("img:first")).length||(i=t)),p(i)?(n=i.offset(),i.is("img")&&(s=i.outerWidth(),a=i.outerHeight())):(n.top=l.y+(l.h-a)*e.topRatio,n.left=l.x+(l.w-s)*e.leftRatio),("fixed"===L.wrap.css("position")||e.locked)&&(n.top-=l.y,n.left-=l.x),n={top:H(n.top-r*e.topRatio),left:H(n.left-o*e.leftRatio),width:H(s+o),height:H(a+r)}},step:function(e,t){var i,n,s=t.prop,a=L.current,r=a.wrapSpace,o=a.skinSpace;"width"!==s&&"height"!==s||(i=t.end===t.start?1:(e-t.start)/(t.end-t.start),L.isClosing&&(i=1-i),n=e-("width"===s?a.wPadding:a.hPadding),L.skin[s](z("width"===s?n:n-r*i)),L.inner[s](z("width"===s?n:n-r*i-o*i)))},zoomIn:function(){var e=L.current,t=e.pos,i=e.openEffect,n="elastic"===i,s=O.extend({opacity:1},t);delete s.position,n?(t=this.getOrigPosition(),e.openOpacity&&(t.opacity=.1)):"fade"===i&&(t.opacity=.1),L.wrap.css(t).animate(s,{duration:"none"===i?0:e.openSpeed,easing:e.openEasing,step:n?this.step:null,complete:L._afterZoomIn})},zoomOut:function(){var e=L.current,t=e.closeEffect,i="elastic"===t,n={opacity:.1};i&&(n=this.getOrigPosition(),e.closeOpacity&&(n.opacity=.1)),L.wrap.animate(n,{duration:"none"===t?0:e.closeSpeed,easing:e.closeEasing,step:i?this.step:null,complete:L._afterZoomOut})},changeIn:function(){var e,t=L.current,i=t.nextEffect,n=t.pos,s={opacity:1},a=L.direction;n.opacity=.1,"elastic"===i&&(e="down"===a||"up"===a?"top":"left","down"===a||"right"===a?(n[e]=H(z(n[e])-200),s[e]="+=200px"):(n[e]=H(z(n[e])+200),s[e]="-=200px")),"none"===i?L._afterZoomIn():L.wrap.css(n).animate(s,{duration:t.nextSpeed,easing:t.nextEasing,complete:L._afterZoomIn})},changeOut:function(){var e=L.previous,t=e.prevEffect,i={opacity:.1},n=L.direction;"elastic"===t&&(i["down"===n||"up"===n?"top":"left"]=("up"===n||"left"===n?"-":"+")+"=200px"),e.wrap.animate(i,{duration:"none"===t?0:e.prevSpeed,easing:e.prevEasing,complete:function(){O(this).trigger("onReset").remove()}})}},L.helpers.overlay={defaults:{closeClick:!0,speedOut:200,showEarly:!0,css:{},locked:!h,fixed:!0},overlay:null,fixed:!1,el:O("html"),create:function(e){var t;e=O.extend({},this.defaults,e),this.overlay&&this.close(),t=L.coming?L.coming.parent:e.parent,this.overlay=O('<div class="fancybox-overlay"></div>').appendTo(t&&t.length?t:"body"),this.fixed=!1,e.fixed&&L.defaults.fixed&&(this.overlay.addClass("fancybox-overlay-fixed"),this.fixed=!0)},open:function(e){var t=this;e=O.extend({},this.defaults,e),this.overlay?this.overlay.unbind(".overlay").width("auto").height("auto"):this.create(e),this.fixed||(n.bind("resize.overlay",O.proxy(this.update,this)),this.update()),e.closeClick&&this.overlay.bind("click.overlay",function(e){if(O(e.target).hasClass("fancybox-overlay"))return L.isActive?L.close():t.close(),!1}),this.overlay.css(e.css).show()},close:function(){n.unbind("resize.overlay"),this.el.hasClass("fancybox-lock")&&(O(".fancybox-margin").removeClass("fancybox-margin"),this.el.removeClass("fancybox-lock"),n.scrollTop(this.scrollV).scrollLeft(this.scrollH)),O(".fancybox-overlay").remove().hide(),O.extend(this,{overlay:null,fixed:!1})},update:function(){var e,t="100%";this.overlay.width(t).height("100%"),r?(e=Math.max(i.documentElement.offsetWidth,i.body.offsetWidth),d.width()>e&&(t=d.width())):d.width()>n.width()&&(t=d.width()),this.overlay.width(t).height(d.height())},onReady:function(e,t){var i=this.overlay;O(".fancybox-overlay").stop(!0,!0),i||this.create(e),e.locked&&this.fixed&&t.fixed&&(t.locked=this.overlay.append(t.wrap),t.fixed=!1),!0===e.showEarly&&this.beforeShow.apply(this,arguments)},beforeShow:function(e,t){t.locked&&!this.el.hasClass("fancybox-lock")&&(!1!==this.fixPosition&&O("*:not(object)").filter(function(){return"fixed"===O(this).css("position")&&!O(this).hasClass("fancybox-overlay")&&!O(this).hasClass("fancybox-wrap")}).addClass("fancybox-margin"),this.el.addClass("fancybox-margin"),this.scrollV=n.scrollTop(),this.scrollH=n.scrollLeft(),this.el.addClass("fancybox-lock"),n.scrollTop(this.scrollV).scrollLeft(this.scrollH)),this.open(e)},onUpdate:function(){this.fixed||this.update()},afterClose:function(e){this.overlay&&!L.coming&&this.overlay.fadeOut(e.speedOut,O.proxy(this.close,this))}},L.helpers.title={defaults:{type:"float",position:"bottom"},beforeShow:function(e){var t,i,n=L.current,s=n.title,a=e.type;if(O.isFunction(s)&&(s=s.call(n.element,n)),f(s)&&""!==O.trim(s)){switch(t=O('<div class="fancybox-title fancybox-title-'+a+'-wrap">'+s+"</div>"),a){case"inside":i=L.skin;break;case"outside":i=L.wrap;break;case"over":i=L.inner;break;default:i=L.skin,t.appendTo("body"),r&&t.width(t.width()),t.wrapInner('<span class="child"></span>'),L.current.margin[2]+=Math.abs(z(t.css("margin-bottom")))}t["top"===e.position?"prependTo":"appendTo"](i)}}},O.fn.fancybox=function(a){var r,o=O(this),l=this.selector||"",e=function(e){var t,i,n=O(this).blur(),s=r;e.ctrlKey||e.altKey||e.shiftKey||e.metaKey||n.is(".fancybox-wrap")||(t=a.groupAttr||"data-fancybox-group",(i=n.attr(t))||(t="rel",i=n.get(0)[t]),i&&""!==i&&"nofollow"!==i&&(s=(n=(n=l.length?O(l):o).filter("["+t+'="'+i+'"]')).index(this)),a.index=s,!1!==L.open(n,a)&&e.preventDefault())};return r=(a=a||{}).index||0,l&&!1!==a.live?d.undelegate(l,"click.fb-start").delegate(l+":not('.fancybox-item, .fancybox-nav')","click.fb-start",e):o.unbind("click.fb-start").bind("click.fb-start",e),this.filter("[data-fancybox-start=1]").trigger("click"),this},d.ready(function(){var e,t,i,n;O.scrollbarWidth===u&&(O.scrollbarWidth=function(){var e=O('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"),t=e.children(),i=t.innerWidth()-t.height(99).innerWidth();return e.remove(),i}),O.support.fixedPosition===u&&(O.support.fixedPosition=(i=O('<div style="position:fixed;top:20px;"></div>').appendTo("body"),n=20===i[0].offsetTop||15===i[0].offsetTop,i.remove(),n)),O.extend(L.defaults,{scrollbarWidth:O.scrollbarWidth(),fixed:O.support.fixedPosition,parent:O("body")}),e=O(s).width(),a.addClass("fancybox-lock-test"),t=O(s).width(),a.removeClass("fancybox-lock-test"),O("<style type='text/css'>.fancybox-margin{margin-right:"+(t-e)+"px;}</style>").appendTo("head")})}(window,document,jQuery),function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Swiper=t()}(this,function(){"use strict";var f="undefined"==typeof document?{body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},location:{hash:""}}:document,H="undefined"==typeof window?{document:f,navigator:{userAgent:""},location:{},history:{},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){}}:window,l=function(e){for(var t=0;t<e.length;t+=1)this[t]=e[t];return this.length=e.length,this};function D(e,t){var i=[],n=0;if(e&&!t&&e instanceof l)return e;if(e)if("string"==typeof e){var s,a,r=e.trim();if(0<=r.indexOf("<")&&0<=r.indexOf(">")){var o="div";for(0===r.indexOf("<li")&&(o="ul"),0===r.indexOf("<tr")&&(o="tbody"),0!==r.indexOf("<td")&&0!==r.indexOf("<th")||(o="tr"),0===r.indexOf("<tbody")&&(o="table"),0===r.indexOf("<option")&&(o="select"),(a=f.createElement(o)).innerHTML=r,n=0;n<a.childNodes.length;n+=1)i.push(a.childNodes[n])}else for(s=t||"#"!==e[0]||e.match(/[ .<>:~]/)?(t||f).querySelectorAll(e.trim()):[f.getElementById(e.trim().split("#")[1])],n=0;n<s.length;n+=1)s[n]&&i.push(s[n])}else if(e.nodeType||e===H||e===f)i.push(e);else if(0<e.length&&e[0].nodeType)for(n=0;n<e.length;n+=1)i.push(e[n]);return new l(i)}function a(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}D.fn=l.prototype,D.Class=l,D.Dom7=l;var t={addClass:function(e){if(void 0===e)return this;for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var n=0;n<this.length;n+=1)void 0!==this[n].classList&&this[n].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var n=0;n<this.length;n+=1)void 0!==this[n].classList&&this[n].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var n=0;n<this.length;n+=1)void 0!==this[n].classList&&this[n].classList.toggle(t[i]);return this},attr:function(e,t){var i=arguments;if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var n=0;n<this.length;n+=1)if(2===i.length)this[n].setAttribute(e,t);else for(var s in e)this[n][s]=e[s],this[n].setAttribute(s,e[s]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var i;if(void 0!==t){for(var n=0;n<this.length;n+=1)(i=this[n]).dom7ElementDataStorage||(i.dom7ElementDataStorage={}),i.dom7ElementDataStorage[e]=t;return this}if(i=this[0])return i.dom7ElementDataStorage&&e in i.dom7ElementDataStorage?i.dom7ElementDataStorage[e]:i.getAttribute("data-"+e)||void 0},transform:function(e){for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransform=e,i.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransitionDuration=e,i.transitionDuration=e}return this},on:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];var n=t[0],a=t[1],r=t[2],s=t[3];function o(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.indexOf(e)<0&&i.unshift(e),D(t).is(a))r.apply(t,i);else for(var n=D(t).parents(),s=0;s<n.length;s+=1)D(n[s]).is(a)&&r.apply(n[s],i)}}function l(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),r.apply(this,t)}"function"==typeof t[1]&&(n=(e=t)[0],r=e[1],s=e[2],a=void 0),s||(s=!1);for(var d,h=n.split(" "),c=0;c<this.length;c+=1){var u=this[c];if(a)for(d=0;d<h.length;d+=1){var p=h[d];u.dom7LiveListeners||(u.dom7LiveListeners={}),u.dom7LiveListeners[p]||(u.dom7LiveListeners[p]=[]),u.dom7LiveListeners[p].push({listener:r,proxyListener:o}),u.addEventListener(p,o,s)}else for(d=0;d<h.length;d+=1){var f=h[d];u.dom7Listeners||(u.dom7Listeners={}),u.dom7Listeners[f]||(u.dom7Listeners[f]=[]),u.dom7Listeners[f].push({listener:r,proxyListener:l}),u.addEventListener(f,l,s)}}return this},off:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];var n=t[0],s=t[1],a=t[2],r=t[3];"function"==typeof t[1]&&(n=(e=t)[0],a=e[1],r=e[2],s=void 0),r||(r=!1);for(var o=n.split(" "),l=0;l<o.length;l+=1)for(var d=o[l],h=0;h<this.length;h+=1){var c=this[h],u=void 0;if(!s&&c.dom7Listeners?u=c.dom7Listeners[d]:s&&c.dom7LiveListeners&&(u=c.dom7LiveListeners[d]),u&&u.length)for(var p=u.length-1;0<=p;p-=1){var f=u[p];a&&f.listener===a?(c.removeEventListener(d,f.proxyListener,r),u.splice(p,1)):a||(c.removeEventListener(d,f.proxyListener,r),u.splice(p,1))}}return this},trigger:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=e[0].split(" "),n=e[1],s=0;s<i.length;s+=1)for(var a=i[s],r=0;r<this.length;r+=1){var o=this[r],l=void 0;try{l=new H.CustomEvent(a,{detail:n,bubbles:!0,cancelable:!0})}catch(e){(l=f.createEvent("Event")).initEvent(a,!0,!0),l.detail=n}o.dom7EventData=e.filter(function(e,t){return 0<t}),o.dispatchEvent(l),o.dom7EventData=[],delete o.dom7EventData}return this},transitionEnd:function(t){var i,n=["webkitTransitionEnd","transitionend"],s=this;function a(e){if(e.target===this)for(t.call(this,e),i=0;i<n.length;i+=1)s.off(n[i],a)}if(t)for(i=0;i<n.length;i+=1)s.on(n[i],a);return this},outerWidth:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},offset:function(){if(0<this.length){var e=this[0],t=e.getBoundingClientRect(),i=f.body,n=e.clientTop||i.clientTop||0,s=e.clientLeft||i.clientLeft||0,a=e===H?H.scrollY:e.scrollTop,r=e===H?H.scrollX:e.scrollLeft;return{top:t.top+a-n,left:t.left+r-s}}return null},css:function(e,t){var i;if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i+=1)for(var n in e)this[i].style[n]=e[n];return this}if(this[0])return H.getComputedStyle(this[0],null).getPropertyValue(e)}if(2===arguments.length&&"string"==typeof e){for(i=0;i<this.length;i+=1)this[i].style[e]=t;return this}return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,i,n=this[0];if(!n||void 0===e)return!1;if("string"==typeof e){if(n.matches)return n.matches(e);if(n.webkitMatchesSelector)return n.webkitMatchesSelector(e);if(n.msMatchesSelector)return n.msMatchesSelector(e);for(t=D(e),i=0;i<t.length;i+=1)if(t[i]===n)return!0;return!1}if(e===f)return n===f;if(e===H)return n===H;if(e.nodeType||e instanceof l){for(t=e.nodeType?[e]:e,i=0;i<t.length;i+=1)if(t[i]===n)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t,i=this.length;return new l(i-1<e?[]:e<0?(t=i+e)<0?[]:[this[t]]:[this[e]])},append:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];for(var n=0;n<t.length;n+=1){e=t[n];for(var s=0;s<this.length;s+=1)if("string"==typeof e){var a=f.createElement("div");for(a.innerHTML=e;a.firstChild;)this[s].appendChild(a.firstChild)}else if(e instanceof l)for(var r=0;r<e.length;r+=1)this[s].appendChild(e[r]);else this[s].appendChild(e)}return this},prepend:function(e){var t,i;for(t=0;t<this.length;t+=1)if("string"==typeof e){var n=f.createElement("div");for(n.innerHTML=e,i=n.childNodes.length-1;0<=i;i-=1)this[t].insertBefore(n.childNodes[i],this[t].childNodes[0])}else if(e instanceof l)for(i=0;i<e.length;i+=1)this[t].insertBefore(e[i],this[t].childNodes[0]);else this[t].insertBefore(e,this[t].childNodes[0]);return this},next:function(e){return 0<this.length?e?this[0].nextElementSibling&&D(this[0].nextElementSibling).is(e)?new l([this[0].nextElementSibling]):new l([]):this[0].nextElementSibling?new l([this[0].nextElementSibling]):new l([]):new l([])},nextAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.nextElementSibling;){var n=i.nextElementSibling;e?D(n).is(e)&&t.push(n):t.push(n),i=n}return new l(t)},prev:function(e){if(0<this.length){var t=this[0];return e?t.previousElementSibling&&D(t.previousElementSibling).is(e)?new l([t.previousElementSibling]):new l([]):t.previousElementSibling?new l([t.previousElementSibling]):new l([])}return new l([])},prevAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.previousElementSibling;){var n=i.previousElementSibling;e?D(n).is(e)&&t.push(n):t.push(n),i=n}return new l(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null!==this[i].parentNode&&(e?D(this[i].parentNode).is(e)&&t.push(this[i].parentNode):t.push(this[i].parentNode));return D(a(t))},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].parentNode;n;)e?D(n).is(e)&&t.push(n):t.push(n),n=n.parentNode;return D(a(t))},closest:function(e){var t=this;return void 0===e?new l([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].querySelectorAll(e),s=0;s<n.length;s+=1)t.push(n[s]);return new l(t)},children:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].childNodes,s=0;s<n.length;s+=1)e?1===n[s].nodeType&&D(n[s]).is(e)&&t.push(n[s]):1===n[s].nodeType&&t.push(n[s]);return new l(a(t))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,n;for(i=0;i<e.length;i+=1){var s=D(e[i]);for(n=0;n<s.length;n+=1)this[this.length]=s[n],this.length+=1}return this},styles:function(){return this[0]?H.getComputedStyle(this[0],null):{}}};Object.keys(t).forEach(function(e){D.fn[e]=t[e]});var e,i,n,j={deleteProps:function(e){var t=e;Object.keys(t).forEach(function(e){try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}})},nextTick:function(e,t){return void 0===t&&(t=0),setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e,t){var i,n,s;void 0===t&&(t="x");var a=H.getComputedStyle(e,null);return H.WebKitCSSMatrix?(6<(n=a.transform||a.webkitTransform).split(",").length&&(n=n.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),s=new H.WebKitCSSMatrix("none"===n?"":n)):i=(s=a.MozTransform||a.OTransform||a.MsTransform||a.msTransform||a.transform||a.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(n=H.WebKitCSSMatrix?s.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(n=H.WebKitCSSMatrix?s.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),n||0},parseUrlQuery:function(e){var t,i,n,s,a={},r=e||H.location.href;if("string"==typeof r&&r.length)for(s=(i=(r=-1<r.indexOf("?")?r.replace(/\S*\?/,""):"").split("&").filter(function(e){return""!==e})).length,t=0;t<s;t+=1)n=i[t].replace(/#\S+/g,"").split("="),a[decodeURIComponent(n[0])]=void 0===n[1]?void 0:decodeURIComponent(n[1])||"";return a},isObject:function(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=Object(e[0]),n=1;n<e.length;n+=1){var s=e[n];if(null!=s)for(var a=Object.keys(Object(s)),r=0,o=a.length;r<o;r+=1){var l=a[r],d=Object.getOwnPropertyDescriptor(s,l);void 0!==d&&d.enumerable&&(j.isObject(i[l])&&j.isObject(s[l])?j.extend(i[l],s[l]):!j.isObject(i[l])&&j.isObject(s[l])?(i[l]={},j.extend(i[l],s[l])):i[l]=s[l])}}return i}},B=(n=f.createElement("div"),{touch:H.Modernizr&&!0===H.Modernizr.touch||!!("ontouchstart"in H||H.DocumentTouch&&f instanceof H.DocumentTouch),pointerEvents:!(!H.navigator.pointerEnabled&&!H.PointerEvent),prefixedPointerEvents:!!H.navigator.msPointerEnabled,transition:(i=n.style,"transition"in i||"webkitTransition"in i||"MozTransition"in i),transforms3d:H.Modernizr&&!0===H.Modernizr.csstransforms3d||(e=n.style,"webkitPerspective"in e||"MozPerspective"in e||"OPerspective"in e||"MsPerspective"in e||"perspective"in e),flexbox:function(){for(var e=n.style,t="alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "),i=0;i<t.length;i+=1)if(t[i]in e)return!0;return!1}(),observer:"MutationObserver"in H||"WebkitMutationObserver"in H,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});H.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in H}),s=function(e){void 0===e&&(e={});var t=this;t.params=e,t.eventsListeners={},t.params&&t.params.on&&Object.keys(t.params.on).forEach(function(e){t.on(e,t.params.on[e])})},r={components:{configurable:!0}};s.prototype.on=function(e,t,i){var n=this;if("function"!=typeof t)return n;var s=i?"unshift":"push";return e.split(" ").forEach(function(e){n.eventsListeners[e]||(n.eventsListeners[e]=[]),n.eventsListeners[e][s](t)}),n},s.prototype.once=function(n,s,e){var a=this;return"function"!=typeof s?a:a.on(n,function e(){for(var t=[],i=arguments.length;i--;)t[i]=arguments[i];s.apply(a,t),a.off(n,e)},e)},s.prototype.off=function(e,n){var s=this;return s.eventsListeners&&e.split(" ").forEach(function(i){void 0===n?s.eventsListeners[i]=[]:s.eventsListeners[i].forEach(function(e,t){e===n&&s.eventsListeners[i].splice(t,1)})}),s},s.prototype.emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,n,s,a=this;return a.eventsListeners&&("string"==typeof e[0]||Array.isArray(e[0])?(i=e[0],n=e.slice(1,e.length),s=a):(i=e[0].events,n=e[0].data,s=e[0].context||a),(Array.isArray(i)?i:i.split(" ")).forEach(function(e){if(a.eventsListeners&&a.eventsListeners[e]){var t=[];a.eventsListeners[e].forEach(function(e){t.push(e)}),t.forEach(function(e){e.apply(s,n)})}})),a},s.prototype.useModulesParams=function(i){var n=this;n.modules&&Object.keys(n.modules).forEach(function(e){var t=n.modules[e];t.params&&j.extend(i,t.params)})},s.prototype.useModules=function(n){void 0===n&&(n={});var s=this;s.modules&&Object.keys(s.modules).forEach(function(e){var i=s.modules[e],t=n[e]||{};i.instance&&Object.keys(i.instance).forEach(function(e){var t=i.instance[e];s[e]="function"==typeof t?t.bind(s):t}),i.on&&s.on&&Object.keys(i.on).forEach(function(e){s.on(e,i.on[e])}),i.create&&i.create.bind(s)(t)})},r.components.set=function(e){this.use&&this.use(e)},s.installModule=function(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];var n=this;n.prototype.modules||(n.prototype.modules={});var s=t.name||Object.keys(n.prototype.modules).length+"_"+j.now();return(n.prototype.modules[s]=t).proto&&Object.keys(t.proto).forEach(function(e){n.prototype[e]=t.proto[e]}),t.static&&Object.keys(t.static).forEach(function(e){n[e]=t.static[e]}),t.install&&t.install.apply(n,e),n},s.use=function(e){for(var t=[],i=arguments.length-1;0<i--;)t[i]=arguments[i+1];var n=this;return Array.isArray(e)?(e.forEach(function(e){return n.installModule(e)}),n):n.installModule.apply(n,[e].concat(t))},Object.defineProperties(s,r);var o={updateSize:function(){var e,t,i=this.$el;e=void 0!==this.params.width?this.params.width:i[0].clientWidth,t=void 0!==this.params.height?this.params.height:i[0].clientHeight,0===e&&this.isHorizontal()||0===t&&this.isVertical()||(e=e-parseInt(i.css("padding-left"),10)-parseInt(i.css("padding-right"),10),t=t-parseInt(i.css("padding-top"),10)-parseInt(i.css("padding-bottom"),10),j.extend(this,{width:e,height:t,size:this.isHorizontal()?e:t}))},updateSlides:function(){var e=this.params,t=this.$wrapperEl,i=this.size,n=this.rtlTranslate,s=this.wrongRTL,a=this.virtual&&e.virtual.enabled,r=a?this.virtual.slides.length:this.slides.length,o=t.children("."+this.params.slideClass),l=a?this.virtual.slides.length:o.length,d=[],h=[],c=[],u=e.slidesOffsetBefore;"function"==typeof u&&(u=e.slidesOffsetBefore.call(this));var p=e.slidesOffsetAfter;"function"==typeof p&&(p=e.slidesOffsetAfter.call(this));var f=this.snapGrid.length,g=this.snapGrid.length,m=e.spaceBetween,v=-u,y=0,b=0;if(void 0!==i){var w,_;"string"==typeof m&&0<=m.indexOf("%")&&(m=parseFloat(m.replace("%",""))/100*i),this.virtualSize=-m,n?o.css({marginLeft:"",marginTop:""}):o.css({marginRight:"",marginBottom:""}),1<e.slidesPerColumn&&(w=Math.floor(l/e.slidesPerColumn)===l/this.params.slidesPerColumn?l:Math.ceil(l/e.slidesPerColumn)*e.slidesPerColumn,"auto"!==e.slidesPerView&&"row"===e.slidesPerColumnFill&&(w=Math.max(w,e.slidesPerView*e.slidesPerColumn)));for(var E,x=e.slidesPerColumn,T=w/x,C=T-(e.slidesPerColumn*T-l),S=0;S<l;S+=1){_=0;var k=o.eq(S);if(1<e.slidesPerColumn){var I=void 0,M=void 0,D=void 0;"column"===e.slidesPerColumnFill?(D=S-(M=Math.floor(S/x))*x,(C<M||M===C&&D===x-1)&&(D+=1)>=x&&(D=0,M+=1),I=M+D*w/x,k.css({"-webkit-box-ordinal-group":I,"-moz-box-ordinal-group":I,"-ms-flex-order":I,"-webkit-order":I,order:I})):M=S-(D=Math.floor(S/T))*T,k.css("margin-"+(this.isHorizontal()?"top":"left"),0!==D&&e.spaceBetween&&e.spaceBetween+"px").attr("data-swiper-column",M).attr("data-swiper-row",D)}if("none"!==k.css("display")){if("auto"===e.slidesPerView){var A=H.getComputedStyle(k[0],null),P=k[0].style.transform,$=k[0].style.webkitTransform;P&&(k[0].style.transform="none"),$&&(k[0].style.webkitTransform="none"),_=this.isHorizontal()?k[0].getBoundingClientRect().width+parseFloat(A.getPropertyValue("margin-left"))+parseFloat(A.getPropertyValue("margin-right")):k[0].getBoundingClientRect().height+parseFloat(A.getPropertyValue("margin-top"))+parseFloat(A.getPropertyValue("margin-bottom")),P&&(k[0].style.transform=P),$&&(k[0].style.webkitTransform=$),e.roundLengths&&(_=Math.floor(_))}else _=(i-(e.slidesPerView-1)*m)/e.slidesPerView,e.roundLengths&&(_=Math.floor(_)),o[S]&&(this.isHorizontal()?o[S].style.width=_+"px":o[S].style.height=_+"px");o[S]&&(o[S].swiperSlideSize=_),c.push(_),e.centeredSlides?(v=v+_/2+y/2+m,0===y&&0!==S&&(v=v-i/2-m),0===S&&(v=v-i/2-m),Math.abs(v)<.001&&(v=0),e.roundLengths&&(v=Math.floor(v)),b%e.slidesPerGroup==0&&d.push(v),h.push(v)):(e.roundLengths&&(v=Math.floor(v)),b%e.slidesPerGroup==0&&d.push(v),h.push(v),v=v+_+m),this.virtualSize+=_+m,y=_,b+=1}}if(this.virtualSize=Math.max(this.virtualSize,i)+p,n&&s&&("slide"===e.effect||"coverflow"===e.effect)&&t.css({width:this.virtualSize+e.spaceBetween+"px"}),B.flexbox&&!e.setWrapperSize||(this.isHorizontal()?t.css({width:this.virtualSize+e.spaceBetween+"px"}):t.css({height:this.virtualSize+e.spaceBetween+"px"})),1<e.slidesPerColumn&&(this.virtualSize=(_+e.spaceBetween)*w,this.virtualSize=Math.ceil(this.virtualSize/e.slidesPerColumn)-e.spaceBetween,this.isHorizontal()?t.css({width:this.virtualSize+e.spaceBetween+"px"}):t.css({height:this.virtualSize+e.spaceBetween+"px"}),e.centeredSlides)){E=[];for(var O=0;O<d.length;O+=1){var L=d[O];e.roundLengths&&(L=Math.floor(L)),d[O]<this.virtualSize+d[0]&&E.push(L)}d=E}if(!e.centeredSlides){E=[];for(var N=0;N<d.length;N+=1){var z=d[N];e.roundLengths&&(z=Math.floor(z)),d[N]<=this.virtualSize-i&&E.push(z)}d=E,1<Math.floor(this.virtualSize-i)-Math.floor(d[d.length-1])&&d.push(this.virtualSize-i)}0===d.length&&(d=[0]),0!==e.spaceBetween&&(this.isHorizontal()?n?o.css({marginLeft:m+"px"}):o.css({marginRight:m+"px"}):o.css({marginBottom:m+"px"})),j.extend(this,{slides:o,snapGrid:d,slidesGrid:h,slidesSizesGrid:c}),l!==r&&this.emit("slidesLengthChange"),d.length!==f&&(this.params.watchOverflow&&this.checkOverflow(),this.emit("snapGridLengthChange")),h.length!==g&&this.emit("slidesGridLengthChange"),(e.watchSlidesProgress||e.watchSlidesVisibility)&&this.updateSlidesOffset()}},updateAutoHeight:function(e){var t,i=[],n=0;if("number"==typeof e?this.setTransition(e):!0===e&&this.setTransition(this.params.speed),"auto"!==this.params.slidesPerView&&1<this.params.slidesPerView)for(t=0;t<Math.ceil(this.params.slidesPerView);t+=1){var s=this.activeIndex+t;if(s>this.slides.length)break;i.push(this.slides.eq(s)[0])}else i.push(this.slides.eq(this.activeIndex)[0]);for(t=0;t<i.length;t+=1)if(void 0!==i[t]){var a=i[t].offsetHeight;n=n<a?a:n}n&&this.$wrapperEl.css("height",n+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this.params,i=this.slides,n=this.rtlTranslate;if(0!==i.length){void 0===i[0].swiperSlideOffset&&this.updateSlidesOffset();var s=-e;n&&(s=e),i.removeClass(t.slideVisibleClass);for(var a=0;a<i.length;a+=1){var r=i[a],o=(s+(t.centeredSlides?this.minTranslate():0)-r.swiperSlideOffset)/(r.swiperSlideSize+t.spaceBetween);if(t.watchSlidesVisibility){var l=-(s-r.swiperSlideOffset),d=l+this.slidesSizesGrid[a];(0<=l&&l<this.size||0<d&&d<=this.size||l<=0&&d>=this.size)&&i.eq(a).addClass(t.slideVisibleClass)}r.progress=n?-o:o}}},updateProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this.params,i=this.maxTranslate()-this.minTranslate(),n=this.progress,s=this.isBeginning,a=this.isEnd,r=s,o=a;0===i?a=s=!(n=0):(s=(n=(e-this.minTranslate())/i)<=0,a=1<=n),j.extend(this,{progress:n,isBeginning:s,isEnd:a}),(t.watchSlidesProgress||t.watchSlidesVisibility)&&this.updateSlidesProgress(e),s&&!r&&this.emit("reachBeginning toEdge"),a&&!o&&this.emit("reachEnd toEdge"),(r&&!s||o&&!a)&&this.emit("fromEdge"),this.emit("progress",n)},updateSlidesClasses:function(){var e,t=this.slides,i=this.params,n=this.$wrapperEl,s=this.activeIndex,a=this.realIndex,r=this.virtual&&i.virtual.enabled;t.removeClass(i.slideActiveClass+" "+i.slideNextClass+" "+i.slidePrevClass+" "+i.slideDuplicateActiveClass+" "+i.slideDuplicateNextClass+" "+i.slideDuplicatePrevClass),(e=r?this.$wrapperEl.find("."+i.slideClass+'[data-swiper-slide-index="'+s+'"]'):t.eq(s)).addClass(i.slideActiveClass),i.loop&&(e.hasClass(i.slideDuplicateClass)?n.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+a+'"]').addClass(i.slideDuplicateActiveClass):n.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+a+'"]').addClass(i.slideDuplicateActiveClass));var o=e.nextAll("."+i.slideClass).eq(0).addClass(i.slideNextClass);i.loop&&0===o.length&&(o=t.eq(0)).addClass(i.slideNextClass);var l=e.prevAll("."+i.slideClass).eq(0).addClass(i.slidePrevClass);i.loop&&0===l.length&&(l=t.eq(-1)).addClass(i.slidePrevClass),i.loop&&(o.hasClass(i.slideDuplicateClass)?n.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass):n.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass),l.hasClass(i.slideDuplicateClass)?n.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass):n.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,i=this.rtlTranslate?this.translate:-this.translate,n=this.slidesGrid,s=this.snapGrid,a=this.params,r=this.activeIndex,o=this.realIndex,l=this.snapIndex,d=e;if(void 0===d){for(var h=0;h<n.length;h+=1)void 0!==n[h+1]?i>=n[h]&&i<n[h+1]-(n[h+1]-n[h])/2?d=h:i>=n[h]&&i<n[h+1]&&(d=h+1):i>=n[h]&&(d=h);a.normalizeSlideIndex&&(d<0||void 0===d)&&(d=0)}if((t=0<=s.indexOf(i)?s.indexOf(i):Math.floor(d/a.slidesPerGroup))>=s.length&&(t=s.length-1),d!==r){var c=parseInt(this.slides.eq(d).attr("data-swiper-slide-index")||d,10);j.extend(this,{snapIndex:t,realIndex:c,previousIndex:r,activeIndex:d}),this.emit("activeIndexChange"),this.emit("snapIndexChange"),o!==c&&this.emit("realIndexChange"),this.emit("slideChange")}else t!==l&&(this.snapIndex=t,this.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this.params,i=D(e.target).closest("."+t.slideClass)[0],n=!1;if(i)for(var s=0;s<this.slides.length;s+=1)this.slides[s]===i&&(n=!0);if(!i||!n)return this.clickedSlide=void 0,void(this.clickedIndex=void 0);this.clickedSlide=i,this.virtual&&this.params.virtual.enabled?this.clickedIndex=parseInt(D(i).attr("data-swiper-slide-index"),10):this.clickedIndex=D(i).index(),t.slideToClickedSlide&&void 0!==this.clickedIndex&&this.clickedIndex!==this.activeIndex&&this.slideToClickedSlide()}},d={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtlTranslate,n=this.translate,s=this.$wrapperEl;if(t.virtualTranslate)return i?-n:n;var a=j.getTranslate(s[0],e);return i&&(a=-a),a||0},setTranslate:function(e,t){var i=this.rtlTranslate,n=this.params,s=this.$wrapperEl,a=this.progress,r=0,o=0;this.isHorizontal()?r=i?-e:e:o=e,n.roundLengths&&(r=Math.floor(r),o=Math.floor(o)),n.virtualTranslate||(B.transforms3d?s.transform("translate3d("+r+"px, "+o+"px, 0px)"):s.transform("translate("+r+"px, "+o+"px)")),this.previousTranslate=this.translate,this.translate=this.isHorizontal()?r:o;var l=this.maxTranslate()-this.minTranslate();(0===l?0:(e-this.minTranslate())/l)!==a&&this.updateProgress(e),this.emit("setTranslate",this.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]}},h={slideTo:function(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var s=this,a=e;a<0&&(a=0);var r=s.params,o=s.snapGrid,l=s.slidesGrid,d=s.previousIndex,h=s.activeIndex,c=s.rtlTranslate;if(s.animating&&r.preventIntercationOnTransition)return!1;var u=Math.floor(a/r.slidesPerGroup);u>=o.length&&(u=o.length-1),(h||r.initialSlide||0)===(d||0)&&i&&s.emit("beforeSlideChangeStart");var p,f=-o[u];if(s.updateProgress(f),r.normalizeSlideIndex)for(var g=0;g<l.length;g+=1)-Math.floor(100*f)>=Math.floor(100*l[g])&&(a=g);if(s.initialized&&a!==h){if(!s.allowSlideNext&&f<s.translate&&f<s.minTranslate())return!1;if(!s.allowSlidePrev&&f>s.translate&&f>s.maxTranslate()&&(h||0)!==a)return!1}return p=h<a?"next":a<h?"prev":"reset",c&&-f===s.translate||!c&&f===s.translate?(s.updateActiveIndex(a),r.autoHeight&&s.updateAutoHeight(),s.updateSlidesClasses(),"slide"!==r.effect&&s.setTranslate(f),"reset"!==p&&(s.transitionStart(i,p),s.transitionEnd(i,p)),!1):(0!==t&&B.transition?(s.setTransition(t),s.setTranslate(f),s.updateActiveIndex(a),s.updateSlidesClasses(),s.emit("beforeTransitionStart",t,n),s.transitionStart(i,p),s.animating||(s.animating=!0,s.onSlideToWrapperTransitionEnd||(s.onSlideToWrapperTransitionEnd=function(e){s&&!s.destroyed&&e.target===this&&(s.$wrapperEl[0].removeEventListener("transitionend",s.onSlideToWrapperTransitionEnd),s.$wrapperEl[0].removeEventListener("webkitTransitionEnd",s.onSlideToWrapperTransitionEnd),s.transitionEnd(i,p))}),s.$wrapperEl[0].addEventListener("transitionend",s.onSlideToWrapperTransitionEnd),s.$wrapperEl[0].addEventListener("webkitTransitionEnd",s.onSlideToWrapperTransitionEnd))):(s.setTransition(0),s.setTranslate(f),s.updateActiveIndex(a),s.updateSlidesClasses(),s.emit("beforeTransitionStart",t,n),s.transitionStart(i,p),s.transitionEnd(i,p)),!0)},slideToLoop:function(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var s=e;return this.params.loop&&(s+=this.loopedSlides),this.slideTo(s,t,i,n)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this.params,s=this.animating;return n.loop?!s&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,this.slideTo(this.activeIndex+n.slidesPerGroup,e,t,i)):this.slideTo(this.activeIndex+n.slidesPerGroup,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this.params,s=this.animating,a=this.snapGrid,r=this.slidesGrid,o=this.rtlTranslate;if(n.loop){if(s)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}function l(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var d,h=l(o?this.translate:-this.translate),c=a.map(function(e){return l(e)}),u=(r.map(function(e){return l(e)}),a[c.indexOf(h)],a[c.indexOf(h)-1]);return void 0!==u&&(d=r.indexOf(u))<0&&(d=this.activeIndex-1),this.slideTo(d,e,t,i)},slideReset:function(e,t,i){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,i)},slideToClosest:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this.activeIndex,s=Math.floor(n/this.params.slidesPerGroup);if(s<this.snapGrid.length-1){var a=this.rtlTranslate?this.translate:-this.translate,r=this.snapGrid[s];a-r>(this.snapGrid[s+1]-r)/2&&(n=this.params.slidesPerGroup)}return this.slideTo(n,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,n=t.$wrapperEl,s="auto"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,a=t.clickedIndex;if(i.loop){if(t.animating)return;e=parseInt(D(t.clickedSlide).attr("data-swiper-slide-index"),10),i.centeredSlides?a<t.loopedSlides-s/2||a>t.slides.length-t.loopedSlides+s/2?(t.loopFix(),a=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),j.nextTick(function(){t.slideTo(a)})):t.slideTo(a):a>t.slides.length-s?(t.loopFix(),a=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),j.nextTick(function(){t.slideTo(a)})):t.slideTo(a)}else t.slideTo(a)}},c={loopCreate:function(){var n=this,e=n.params,t=n.$wrapperEl;t.children("."+e.slideClass+"."+e.slideDuplicateClass).remove();var s=t.children("."+e.slideClass);if(e.loopFillGroupWithBlank){var i=e.slidesPerGroup-s.length%e.slidesPerGroup;if(i!==e.slidesPerGroup){for(var a=0;a<i;a+=1){var r=D(f.createElement("div")).addClass(e.slideClass+" "+e.slideBlankClass);t.append(r)}s=t.children("."+e.slideClass)}}"auto"!==e.slidesPerView||e.loopedSlides||(e.loopedSlides=s.length),n.loopedSlides=parseInt(e.loopedSlides||e.slidesPerView,10),n.loopedSlides+=e.loopAdditionalSlides,n.loopedSlides>s.length&&(n.loopedSlides=s.length);var o=[],l=[];s.each(function(e,t){var i=D(t);e<n.loopedSlides&&l.push(t),e<s.length&&e>=s.length-n.loopedSlides&&o.push(t),i.attr("data-swiper-slide-index",e)});for(var d=0;d<l.length;d+=1)t.append(D(l[d].cloneNode(!0)).addClass(e.slideDuplicateClass));for(var h=o.length-1;0<=h;h-=1)t.prepend(D(o[h].cloneNode(!0)).addClass(e.slideDuplicateClass))},loopFix:function(){var e,t=this.params,i=this.activeIndex,n=this.slides,s=this.loopedSlides,a=this.allowSlidePrev,r=this.allowSlideNext,o=this.snapGrid,l=this.rtlTranslate;this.allowSlidePrev=!0,this.allowSlideNext=!0;var d=-o[i]-this.getTranslate();i<s?(e=n.length-3*s+i,e+=s,this.slideTo(e,0,!1,!0)&&0!==d&&this.setTranslate((l?-this.translate:this.translate)-d)):("auto"===t.slidesPerView&&2*s<=i||i>=n.length-s)&&(e=-n.length+i+s,e+=s,this.slideTo(e,0,!1,!0)&&0!==d&&this.setTranslate((l?-this.translate:this.translate)-d)),this.allowSlidePrev=a,this.allowSlideNext=r},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass).remove(),i.removeAttr("data-swiper-slide-index")}},u={setGrabCursor:function(e){if(!(B.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked)){var t=this.el;t.style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab"}},unsetGrabCursor:function(){B.touch||this.params.watchOverflow&&this.isLocked||(this.el.style.cursor="")}},p={appendSlide:function(e){var t=this.$wrapperEl,i=this.params;if(i.loop&&this.loopDestroy(),"object"==typeof e&&"length"in e)for(var n=0;n<e.length;n+=1)e[n]&&t.append(e[n]);else t.append(e);i.loop&&this.loopCreate(),i.observer&&B.observer||this.update()},prependSlide:function(e){var t=this.params,i=this.$wrapperEl,n=this.activeIndex;t.loop&&this.loopDestroy();var s=n+1;if("object"==typeof e&&"length"in e){for(var a=0;a<e.length;a+=1)e[a]&&i.prepend(e[a]);s=n+e.length}else i.prepend(e);t.loop&&this.loopCreate(),t.observer&&B.observer||this.update(),this.slideTo(s,0,!1)},addSlide:function(e,t){var i=this.$wrapperEl,n=this.params,s=this.activeIndex;n.loop&&(s-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+n.slideClass));var a=this.slides.length;if(e<=0)this.prependSlide(t);else if(a<=e)this.appendSlide(t);else{for(var r=e<s?s+1:s,o=[],l=a-1;e<=l;l-=1){var d=this.slides.eq(l);d.remove(),o.unshift(d)}if("object"==typeof t&&"length"in t){for(var h=0;h<t.length;h+=1)t[h]&&i.append(t[h]);r=e<s?s+t.length:s}else i.append(t);for(var c=0;c<o.length;c+=1)i.append(o[c]);n.loop&&this.loopCreate(),n.observer&&B.observer||this.update(),n.loop?this.slideTo(r+this.loopedSlides,0,!1):this.slideTo(r,0,!1)}},removeSlide:function(e){var t=this.params,i=this.$wrapperEl,n=this.activeIndex;t.loop&&(n-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+t.slideClass));var s,a=n;if("object"==typeof e&&"length"in e){for(var r=0;r<e.length;r+=1)s=e[r],this.slides[s]&&this.slides.eq(s).remove(),s<a&&(a-=1);a=Math.max(a,0)}else s=e,this.slides[s]&&this.slides.eq(s).remove(),s<a&&(a-=1),a=Math.max(a,0);t.loop&&this.loopCreate(),t.observer&&B.observer||this.update(),t.loop?this.slideTo(a+this.loopedSlides,0,!1):this.slideTo(a,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},g=function(){var e=H.navigator.userAgent,t={ios:!1,android:!1,androidChrome:!1,desktop:!1,windows:!1,iphone:!1,ipod:!1,ipad:!1,cordova:H.cordova||H.phonegap,phonegap:H.cordova||H.phonegap},i=e.match(/(Windows Phone);?[\s\/]+([\d.]+)?/),n=e.match(/(Android);?[\s\/]+([\d.]+)?/),s=e.match(/(iPad).*OS\s([\d_]+)/),a=e.match(/(iPod)(.*OS\s([\d_]+))?/),r=!s&&e.match(/(iPhone\sOS|iOS)\s([\d_]+)/);if(i&&(t.os="windows",t.osVersion=i[2],t.windows=!0),n&&!i&&(t.os="android",t.osVersion=n[2],t.android=!0,t.androidChrome=0<=e.toLowerCase().indexOf("chrome")),(s||r||a)&&(t.os="ios",t.ios=!0),r&&!a&&(t.osVersion=r[2].replace(/_/g,"."),t.iphone=!0),s&&(t.osVersion=s[2].replace(/_/g,"."),t.ipad=!0),a&&(t.osVersion=a[3]?a[3].replace(/_/g,"."):null,t.iphone=!0),t.ios&&t.osVersion&&0<=e.indexOf("Version/")&&"10"===t.osVersion.split(".")[0]&&(t.osVersion=e.toLowerCase().split("version/")[1].split(" ")[0]),t.desktop=!(t.os||t.android||t.webView),t.webView=(r||s||a)&&e.match(/.*AppleWebKit(?!.*Safari)/i),t.os&&"ios"===t.os){var o=t.osVersion.split("."),l=f.querySelector('meta[name="viewport"]');t.minimalUi=!t.webView&&(a||r)&&(1*o[0]==7?1<=1*o[1]:7<1*o[0])&&l&&0<=l.getAttribute("content").indexOf("minimal-ui")}return t.pixelRatio=H.devicePixelRatio||1,t}();function m(){var e=this.params,t=this.el;if(!t||0!==t.offsetWidth){e.breakpoints&&this.setBreakpoint();var i=this.allowSlideNext,n=this.allowSlidePrev,s=this.snapGrid;if(this.allowSlideNext=!0,this.allowSlidePrev=!0,this.updateSize(),this.updateSlides(),e.freeMode){var a=Math.min(Math.max(this.translate,this.maxTranslate()),this.minTranslate());this.setTranslate(a),this.updateActiveIndex(),this.updateSlidesClasses(),e.autoHeight&&this.updateAutoHeight()}else this.updateSlidesClasses(),("auto"===e.slidesPerView||1<e.slidesPerView)&&this.isEnd&&!this.params.centeredSlides?this.slideTo(this.slides.length-1,0,!1,!0):this.slideTo(this.activeIndex,0,!1,!0);this.allowSlidePrev=n,this.allowSlideNext=i,this.params.watchOverflow&&s!==this.snapGrid&&this.checkOverflow()}}var v,y={attachEvents:function(){var e=this.params,t=this.touchEvents,i=this.el,n=this.wrapperEl;this.onTouchStart=function(e){var t=this.touchEventsData,i=this.params,n=this.touches;if(!this.animating||!i.preventIntercationOnTransition){var s=e;if(s.originalEvent&&(s=s.originalEvent),t.isTouchEvent="touchstart"===s.type,(t.isTouchEvent||!("which"in s)||3!==s.which)&&(!t.isTouched||!t.isMoved))if(i.noSwiping&&D(s.target).closest(i.noSwipingSelector?i.noSwipingSelector:"."+i.noSwipingClass)[0])this.allowClick=!0;else if(!i.swipeHandler||D(s).closest(i.swipeHandler)[0]){n.currentX="touchstart"===s.type?s.targetTouches[0].pageX:s.pageX,n.currentY="touchstart"===s.type?s.targetTouches[0].pageY:s.pageY;var a=n.currentX,r=n.currentY;if(!g.ios||g.cordova||!i.iOSEdgeSwipeDetection||!(a<=i.iOSEdgeSwipeThreshold||a>=H.screen.width-i.iOSEdgeSwipeThreshold)){if(j.extend(t,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),n.startX=a,n.startY=r,t.touchStartTime=j.now(),this.allowClick=!0,this.updateSize(),this.swipeDirection=void 0,0<i.threshold&&(t.allowThresholdMove=!1),"touchstart"!==s.type){var o=!0;D(s.target).is(t.formElements)&&(o=!1),f.activeElement&&D(f.activeElement).is(t.formElements)&&f.activeElement!==s.target&&f.activeElement.blur(),o&&this.allowTouchMove&&s.preventDefault()}this.emit("touchStart",s)}}}}.bind(this),this.onTouchMove=function(e){var t=this.touchEventsData,i=this.params,n=this.touches,s=this.rtlTranslate,a=e;if(a.originalEvent&&(a=a.originalEvent),t.isTouched){if(!t.isTouchEvent||"mousemove"!==a.type){var r="touchmove"===a.type?a.targetTouches[0].pageX:a.pageX,o="touchmove"===a.type?a.targetTouches[0].pageY:a.pageY;if(a.preventedByNestedSwiper)return n.startX=r,void(n.startY=o);if(!this.allowTouchMove)return this.allowClick=!1,void(t.isTouched&&(j.extend(n,{startX:r,startY:o,currentX:r,currentY:o}),t.touchStartTime=j.now()));if(t.isTouchEvent&&i.touchReleaseOnEdges&&!i.loop)if(this.isVertical()){if(o<n.startY&&this.translate<=this.maxTranslate()||o>n.startY&&this.translate>=this.minTranslate())return t.isTouched=!1,void(t.isMoved=!1)}else if(r<n.startX&&this.translate<=this.maxTranslate()||r>n.startX&&this.translate>=this.minTranslate())return;if(t.isTouchEvent&&f.activeElement&&a.target===f.activeElement&&D(a.target).is(t.formElements))return t.isMoved=!0,void(this.allowClick=!1);if(t.allowTouchCallbacks&&this.emit("touchMove",a),!(a.targetTouches&&1<a.targetTouches.length)){n.currentX=r,n.currentY=o;var l,d=n.currentX-n.startX,h=n.currentY-n.startY;if(void 0===t.isScrolling&&(this.isHorizontal()&&n.currentY===n.startY||this.isVertical()&&n.currentX===n.startX?t.isScrolling=!1:25<=d*d+h*h&&(l=180*Math.atan2(Math.abs(h),Math.abs(d))/Math.PI,t.isScrolling=this.isHorizontal()?l>i.touchAngle:90-l>i.touchAngle)),t.isScrolling&&this.emit("touchMoveOpposite",a),"undefined"==typeof startMoving&&(n.currentX===n.startX&&n.currentY===n.startY||(t.startMoving=!0)),t.isScrolling)t.isTouched=!1;else if(t.startMoving){this.allowClick=!1,a.preventDefault(),i.touchMoveStopPropagation&&!i.nested&&a.stopPropagation(),t.isMoved||(i.loop&&this.loopFix(),t.startTranslate=this.getTranslate(),this.setTransition(0),this.animating&&this.$wrapperEl.trigger("webkitTransitionEnd transitionend"),t.allowMomentumBounce=!1,!i.grabCursor||!0!==this.allowSlideNext&&!0!==this.allowSlidePrev||this.setGrabCursor(!0),this.emit("sliderFirstMove",a)),this.emit("sliderMove",a),t.isMoved=!0;var c=this.isHorizontal()?d:h;n.diff=c,c*=i.touchRatio,s&&(c=-c),this.swipeDirection=0<c?"prev":"next",t.currentTranslate=c+t.startTranslate;var u=!0,p=i.resistanceRatio;if(i.touchReleaseOnEdges&&(p=0),0<c&&t.currentTranslate>this.minTranslate()?(u=!1,i.resistance&&(t.currentTranslate=this.minTranslate()-1+Math.pow(-this.minTranslate()+t.startTranslate+c,p))):c<0&&t.currentTranslate<this.maxTranslate()&&(u=!1,i.resistance&&(t.currentTranslate=this.maxTranslate()+1-Math.pow(this.maxTranslate()-t.startTranslate-c,p))),u&&(a.preventedByNestedSwiper=!0),!this.allowSlideNext&&"next"===this.swipeDirection&&t.currentTranslate<t.startTranslate&&(t.currentTranslate=t.startTranslate),!this.allowSlidePrev&&"prev"===this.swipeDirection&&t.currentTranslate>t.startTranslate&&(t.currentTranslate=t.startTranslate),0<i.threshold){if(!(Math.abs(c)>i.threshold||t.allowThresholdMove))return void(t.currentTranslate=t.startTranslate);if(!t.allowThresholdMove)return t.allowThresholdMove=!0,n.startX=n.currentX,n.startY=n.currentY,t.currentTranslate=t.startTranslate,void(n.diff=this.isHorizontal()?n.currentX-n.startX:n.currentY-n.startY)}i.followFinger&&((i.freeMode||i.watchSlidesProgress||i.watchSlidesVisibility)&&(this.updateActiveIndex(),this.updateSlidesClasses()),i.freeMode&&(0===t.velocities.length&&t.velocities.push({position:n[this.isHorizontal()?"startX":"startY"],time:t.touchStartTime}),t.velocities.push({position:n[this.isHorizontal()?"currentX":"currentY"],time:j.now()})),this.updateProgress(t.currentTranslate),this.setTranslate(t.currentTranslate))}}}}else t.startMoving&&t.isScrolling&&this.emit("touchMoveOpposite",a)}.bind(this),this.onTouchEnd=function(e){var t=this,i=t.touchEventsData,n=t.params,s=t.touches,a=t.rtlTranslate,r=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,d=e;if(d.originalEvent&&(d=d.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",d),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&n.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);n.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var h,c=j.now(),u=c-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(d),t.emit("tap",d),u<300&&300<c-i.lastClickTime&&(i.clickTimeout&&clearTimeout(i.clickTimeout),i.clickTimeout=j.nextTick(function(){t&&!t.destroyed&&t.emit("click",d)},300)),u<300&&c-i.lastClickTime<300&&(i.clickTimeout&&clearTimeout(i.clickTimeout),t.emit("doubleTap",d))),i.lastClickTime=j.now(),j.nextTick(function(){t.destroyed||(t.allowClick=!0)}),!i.isTouched||!i.isMoved||!t.swipeDirection||0===s.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,h=n.followFinger?a?t.translate:-t.translate:-i.currentTranslate,n.freeMode){if(h<-t.minTranslate())return void t.slideTo(t.activeIndex);if(h>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(n.freeModeMomentum){if(1<i.velocities.length){var p=i.velocities.pop(),f=i.velocities.pop(),g=p.position-f.position,m=p.time-f.time;t.velocity=g/m,t.velocity/=2,Math.abs(t.velocity)<n.freeModeMinimumVelocity&&(t.velocity=0),(150<m||300<j.now()-p.time)&&(t.velocity=0)}else t.velocity=0;t.velocity*=n.freeModeMomentumVelocityRatio,i.velocities.length=0;var v=1e3*n.freeModeMomentumRatio,y=t.velocity*v,b=t.translate+y;a&&(b=-b);var w,_,E=!1,x=20*Math.abs(t.velocity)*n.freeModeMomentumBounceRatio;if(b<t.maxTranslate())n.freeModeMomentumBounce?(b+t.maxTranslate()<-x&&(b=t.maxTranslate()-x),w=t.maxTranslate(),E=!0,i.allowMomentumBounce=!0):b=t.maxTranslate(),n.loop&&n.centeredSlides&&(_=!0);else if(b>t.minTranslate())n.freeModeMomentumBounce?(b-t.minTranslate()>x&&(b=t.minTranslate()+x),w=t.minTranslate(),E=!0,i.allowMomentumBounce=!0):b=t.minTranslate(),n.loop&&n.centeredSlides&&(_=!0);else if(n.freeModeSticky){for(var T,C=0;C<l.length;C+=1)if(l[C]>-b){T=C;break}b=-(b=Math.abs(l[T]-b)<Math.abs(l[T-1]-b)||"next"===t.swipeDirection?l[T]:l[T-1])}if(_&&t.once("transitionEnd",function(){t.loopFix()}),0!==t.velocity)v=a?Math.abs((-b-t.translate)/t.velocity):Math.abs((b-t.translate)/t.velocity);else if(n.freeModeSticky)return void t.slideToClosest();n.freeModeMomentumBounce&&E?(t.updateProgress(w),t.setTransition(v),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating=!0,r.transitionEnd(function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(n.speed),t.setTranslate(w),r.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))})):t.velocity?(t.updateProgress(b),t.setTransition(v),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,r.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(b),t.updateActiveIndex(),t.updateSlidesClasses()}else if(n.freeModeSticky)return void t.slideToClosest();(!n.freeModeMomentum||u>=n.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var S=0,k=t.slidesSizesGrid[0],I=0;I<o.length;I+=n.slidesPerGroup)void 0!==o[I+n.slidesPerGroup]?h>=o[I]&&h<o[I+n.slidesPerGroup]&&(k=o[(S=I)+n.slidesPerGroup]-o[I]):h>=o[I]&&(S=I,k=o[o.length-1]-o[o.length-2]);var M=(h-o[S])/k;if(u>n.longSwipesMs){if(!n.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(M>=n.longSwipesRatio?t.slideTo(S+n.slidesPerGroup):t.slideTo(S)),"prev"===t.swipeDirection&&(M>1-n.longSwipesRatio?t.slideTo(S+n.slidesPerGroup):t.slideTo(S))}else{if(!n.shortSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&t.slideTo(S+n.slidesPerGroup),"prev"===t.swipeDirection&&t.slideTo(S)}}}.bind(this),this.onClick=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}.bind(this);var s="container"===e.touchEventsTarget?i:n,a=!!e.nested;if(B.touch||!B.pointerEvents&&!B.prefixedPointerEvents){if(B.touch){var r=!("touchstart"!==t.start||!B.passiveListener||!e.passiveListeners)&&{passive:!0,capture:!1};s.addEventListener(t.start,this.onTouchStart,r),s.addEventListener(t.move,this.onTouchMove,B.passiveListener?{passive:!1,capture:a}:a),s.addEventListener(t.end,this.onTouchEnd,r)}(e.simulateTouch&&!g.ios&&!g.android||e.simulateTouch&&!B.touch&&g.ios)&&(s.addEventListener("mousedown",this.onTouchStart,!1),f.addEventListener("mousemove",this.onTouchMove,a),f.addEventListener("mouseup",this.onTouchEnd,!1))}else s.addEventListener(t.start,this.onTouchStart,!1),f.addEventListener(t.move,this.onTouchMove,a),f.addEventListener(t.end,this.onTouchEnd,!1);(e.preventClicks||e.preventClicksPropagation)&&s.addEventListener("click",this.onClick,!0),this.on(g.ios||g.android?"resize orientationchange observerUpdate":"resize observerUpdate",m,!0)},detachEvents:function(){var e=this.params,t=this.touchEvents,i=this.el,n=this.wrapperEl,s="container"===e.touchEventsTarget?i:n,a=!!e.nested;if(B.touch||!B.pointerEvents&&!B.prefixedPointerEvents){if(B.touch){var r=!("onTouchStart"!==t.start||!B.passiveListener||!e.passiveListeners)&&{passive:!0,capture:!1};s.removeEventListener(t.start,this.onTouchStart,r),s.removeEventListener(t.move,this.onTouchMove,a),s.removeEventListener(t.end,this.onTouchEnd,r)}(e.simulateTouch&&!g.ios&&!g.android||e.simulateTouch&&!B.touch&&g.ios)&&(s.removeEventListener("mousedown",this.onTouchStart,!1),f.removeEventListener("mousemove",this.onTouchMove,a),f.removeEventListener("mouseup",this.onTouchEnd,!1))}else s.removeEventListener(t.start,this.onTouchStart,!1),f.removeEventListener(t.move,this.onTouchMove,a),f.removeEventListener(t.end,this.onTouchEnd,!1);(e.preventClicks||e.preventClicksPropagation)&&s.removeEventListener("click",this.onClick,!0),this.off(g.ios||g.android?"resize orientationchange observerUpdate":"resize observerUpdate",m)}},b={setBreakpoint:function(){var e=this.activeIndex,t=this.initialized,i=this.loopedSlides;void 0===i&&(i=0);var n=this.params,s=n.breakpoints;if(s&&(!s||0!==Object.keys(s).length)){var a=this.getBreakpoint(s);if(a&&this.currentBreakpoint!==a){var r=a in s?s[a]:this.originalParams,o=n.loop&&r.slidesPerView!==n.slidesPerView;j.extend(this.params,r),j.extend(this,{allowTouchMove:this.params.allowTouchMove,allowSlideNext:this.params.allowSlideNext,allowSlidePrev:this.params.allowSlidePrev}),this.currentBreakpoint=a,o&&t&&(this.loopDestroy(),this.loopCreate(),this.updateSlides(),this.slideTo(e-i+this.loopedSlides,0,!1)),this.emit("breakpoint",r)}}},getBreakpoint:function(e){if(e){var t=!1,i=[];Object.keys(e).forEach(function(e){i.push(e)}),i.sort(function(e,t){return parseInt(e,10)-parseInt(t,10)});for(var n=0;n<i.length;n+=1){var s=i[n];s>=H.innerWidth&&!t&&(t=s)}return t||"max"}}},A={isIE:!!H.navigator.userAgent.match(/Trident/g)||!!H.navigator.userAgent.match(/MSIE/g),isSafari:(v=H.navigator.userAgent.toLowerCase(),0<=v.indexOf("safari")&&v.indexOf("chrome")<0&&v.indexOf("android")<0),isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(H.navigator.userAgent)},w={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,preventIntercationOnTransition:!1,iOSEdgeSwipeDetection:!1,iOSEdgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,centeredSlides:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!0,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0},_={update:o,translate:d,transition:{setTransition:function(e,t){this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,n=this.params,s=this.previousIndex;n.autoHeight&&this.updateAutoHeight();var a=t;if(a||(a=s<i?"next":i<s?"prev":"reset"),this.emit("transitionStart"),e&&i!==s){if("reset"===a)return void this.emit("slideResetTransitionStart");this.emit("slideChangeTransitionStart"),"next"===a?this.emit("slideNextTransitionStart"):this.emit("slidePrevTransitionStart")}},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,n=this.previousIndex;this.animating=!1,this.setTransition(0);var s=t;if(s||(s=n<i?"next":i<n?"prev":"reset"),this.emit("transitionEnd"),e&&i!==n){if("reset"===s)return void this.emit("slideResetTransitionEnd");this.emit("slideChangeTransitionEnd"),"next"===s?this.emit("slideNextTransitionEnd"):this.emit("slidePrevTransitionEnd")}}},slide:h,loop:c,grabCursor:u,manipulation:p,events:y,breakpoints:b,checkOverflow:{checkOverflow:function(){var e=this.isLocked;this.isLocked=1===this.snapGrid.length,this.allowSlideNext=!this.isLocked,this.allowSlidePrev=!this.isLocked,e!==this.isLocked&&this.emit(this.isLocked?"lock":"unlock"),e&&e!==this.isLocked&&(this.isEnd=!1,this.navigation.update())}},classes:{addClasses:function(){var t=this.classNames,i=this.params,e=this.rtl,n=this.$el,s=[];s.push(i.direction),i.freeMode&&s.push("free-mode"),B.flexbox||s.push("no-flexbox"),i.autoHeight&&s.push("autoheight"),e&&s.push("rtl"),1<i.slidesPerColumn&&s.push("multirow"),g.android&&s.push("android"),g.ios&&s.push("ios"),A.isIE&&(B.pointerEvents||B.prefixedPointerEvents)&&s.push("wp8-"+i.direction),s.forEach(function(e){t.push(i.containerModifierClass+e)}),n.addClass(t.join(" "))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" "))}},images:{loadImage:function(e,t,i,n,s,a){var r;function o(){a&&a()}e.complete&&s?o():t?((r=new H.Image).onload=o,r.onerror=o,n&&(r.sizes=n),i&&(r.srcset=i),t&&(r.src=t)):o()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var n=e.imagesToLoad[i];e.loadImage(n,n.currentSrc||n.getAttribute("src"),n.srcset||n.getAttribute("srcset"),n.sizes||n.getAttribute("sizes"),!0,t)}}}},E={},x=function(u){function p(){for(var e,t,s,i=[],n=arguments.length;n--;)i[n]=arguments[n];1===i.length&&i[0].constructor&&i[0].constructor===Object?s=i[0]:(t=(e=i)[0],s=e[1]),s||(s={}),s=j.extend({},s),t&&!s.el&&(s.el=t),u.call(this,s),Object.keys(_).forEach(function(t){Object.keys(_[t]).forEach(function(e){p.prototype[e]||(p.prototype[e]=_[t][e])})});var a=this;void 0===a.modules&&(a.modules={}),Object.keys(a.modules).forEach(function(e){var t=a.modules[e];if(t.params){var i=Object.keys(t.params)[0],n=t.params[i];if("object"!=typeof n)return;if(!(i in s&&"enabled"in n))return;!0===s[i]&&(s[i]={enabled:!0}),"object"!=typeof s[i]||"enabled"in s[i]||(s[i].enabled=!0),s[i]||(s[i]={enabled:!1})}});var r=j.extend({},w);a.useModulesParams(r),a.params=j.extend({},r,E,s),a.originalParams=j.extend({},a.params),a.passedParams=j.extend({},s);var o=(a.$=D)(a.params.el);if(t=o[0]){if(1<o.length){var l=[];return o.each(function(e,t){var i=j.extend({},s,{el:t});l.push(new p(i))}),l}t.swiper=a,o.data("swiper",a);var d,h,c=o.children("."+a.params.wrapperClass);return j.extend(a,{$el:o,el:t,$wrapperEl:c,wrapperEl:c[0],classNames:[],slides:D(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===a.params.direction},isVertical:function(){return"vertical"===a.params.direction},rtl:"rtl"===t.dir.toLowerCase()||"rtl"===o.css("direction"),rtlTranslate:"horizontal"===a.params.direction&&("rtl"===t.dir.toLowerCase()||"rtl"===o.css("direction")),wrongRTL:"-webkit-box"===c.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:a.params.allowSlideNext,allowSlidePrev:a.params.allowSlidePrev,touchEvents:(d=["touchstart","touchmove","touchend"],h=["mousedown","mousemove","mouseup"],B.pointerEvents?h=["pointerdown","pointermove","pointerup"]:B.prefixedPointerEvents&&(h=["MSPointerDown","MSPointerMove","MSPointerUp"]),a.touchEventsTouch={start:d[0],move:d[1],end:d[2]},a.touchEventsDesktop={start:h[0],move:h[1],end:h[2]},B.touch||!a.params.simulateTouch?a.touchEventsTouch:a.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video",lastClickTime:j.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:a.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),a.useModules(),a.params.init&&a.init(),a}}u&&(p.__proto__=u);var e={extendedDefaults:{configurable:!0},defaults:{configurable:!0},Class:{configurable:!0},$:{configurable:!0}};return((p.prototype=Object.create(u&&u.prototype)).constructor=p).prototype.slidesPerViewDynamic=function(){var e=this.params,t=this.slides,i=this.slidesGrid,n=this.size,s=this.activeIndex,a=1;if(e.centeredSlides){for(var r,o=t[s].swiperSlideSize,l=s+1;l<t.length;l+=1)t[l]&&!r&&(a+=1,(o+=t[l].swiperSlideSize)>n&&(r=!0));for(var d=s-1;0<=d;d-=1)t[d]&&!r&&(a+=1,(o+=t[d].swiperSlideSize)>n&&(r=!0))}else for(var h=s+1;h<t.length;h+=1)i[h]-i[s]<n&&(a+=1);return a},p.prototype.update=function(){var i=this;if(i&&!i.destroyed){var e=i.snapGrid,t=i.params;t.breakpoints&&i.setBreakpoint(),i.updateSize(),i.updateSlides(),i.updateProgress(),i.updateSlidesClasses(),i.params.freeMode?(n(),i.params.autoHeight&&i.updateAutoHeight()):(("auto"===i.params.slidesPerView||1<i.params.slidesPerView)&&i.isEnd&&!i.params.centeredSlides?i.slideTo(i.slides.length-1,0,!1,!0):i.slideTo(i.activeIndex,0,!1,!0))||n(),t.watchOverflow&&e!==i.snapGrid&&i.checkOverflow(),i.emit("update")}function n(){var e=i.rtlTranslate?-1*i.translate:i.translate,t=Math.min(Math.max(e,i.maxTranslate()),i.minTranslate());i.setTranslate(t),i.updateActiveIndex(),i.updateSlidesClasses()}},p.prototype.init=function(){this.initialized||(this.emit("beforeInit"),this.params.breakpoints&&this.setBreakpoint(),this.addClasses(),this.params.loop&&this.loopCreate(),this.updateSize(),this.updateSlides(),this.params.watchOverflow&&this.checkOverflow(),this.params.grabCursor&&this.setGrabCursor(),this.params.preloadImages&&this.preloadImages(),this.params.loop?this.slideTo(this.params.initialSlide+this.loopedSlides,0,this.params.runCallbacksOnInit):this.slideTo(this.params.initialSlide,0,this.params.runCallbacksOnInit),this.attachEvents(),this.initialized=!0,this.emit("init"))},p.prototype.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=this,n=i.params,s=i.$el,a=i.$wrapperEl,r=i.slides;return void 0===i.params||i.destroyed||(i.emit("beforeDestroy"),i.initialized=!1,i.detachEvents(),n.loop&&i.loopDestroy(),t&&(i.removeClasses(),s.removeAttr("style"),a.removeAttr("style"),r&&r.length&&r.removeClass([n.slideVisibleClass,n.slideActiveClass,n.slideNextClass,n.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index").removeAttr("data-swiper-column").removeAttr("data-swiper-row")),i.emit("destroy"),Object.keys(i.eventsListeners).forEach(function(e){i.off(e)}),!1!==e&&(i.$el[0].swiper=null,i.$el.data("swiper",null),j.deleteProps(i)),i.destroyed=!0),null},p.extendDefaults=function(e){j.extend(E,e)},e.extendedDefaults.get=function(){return E},e.defaults.get=function(){return w},e.Class.get=function(){return u},e.$.get=function(){return D},Object.defineProperties(p,e),p}(s),T={name:"device",proto:{device:g},static:{device:g}},C={name:"support",proto:{support:B},static:{support:B}},S={name:"browser",proto:{browser:A},static:{browser:A}},k={name:"resize",create:function(){var e=this;j.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(){H.addEventListener("resize",this.resize.resizeHandler),H.addEventListener("orientationchange",this.resize.orientationChangeHandler)},destroy:function(){H.removeEventListener("resize",this.resize.resizeHandler),H.removeEventListener("orientationchange",this.resize.orientationChangeHandler)}}},I={func:H.MutationObserver||H.WebkitMutationObserver,attach:function(e,t){void 0===t&&(t={});var i=this,n=new I.func(function(e){e.forEach(function(e){i.emit("observerUpdate",e)})});n.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.observer.observers.push(n)},init:function(){if(B.observer&&this.params.observer){if(this.params.observeParents)for(var e=this.$el.parents(),t=0;t<e.length;t+=1)this.observer.attach(e[t]);this.observer.attach(this.$el[0],{childList:!1}),this.observer.attach(this.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},M={name:"observer",params:{observer:!1,observeParents:!1},create:function(){j.extend(this,{observer:{init:I.init.bind(this),attach:I.attach.bind(this),destroy:I.destroy.bind(this),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},P={update:function(e){var t=this,i=t.params,n=i.slidesPerView,s=i.slidesPerGroup,a=i.centeredSlides,r=t.virtual,o=r.from,l=r.to,d=r.slides,h=r.slidesGrid,c=r.renderSlide,u=r.offset;t.updateActiveIndex();var p,f,g,m=t.activeIndex||0;p=t.rtlTranslate?"right":t.isHorizontal()?"left":"top",a?(f=Math.floor(n/2)+s,g=Math.floor(n/2)+s):(f=n+(s-1),g=s);var v=Math.max((m||0)-g,0),y=Math.min((m||0)+f,d.length-1),b=(t.slidesGrid[v]||0)-(t.slidesGrid[0]||0);function w(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(j.extend(t.virtual,{from:v,to:y,offset:b,slidesGrid:t.slidesGrid}),o===v&&l===y&&!e)return t.slidesGrid!==h&&b!==u&&t.slides.css(p,b+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:b,from:v,to:y,slides:function(){for(var e=[],t=v;t<=y;t+=1)e.push(d[t]);return e}()}),void w();var _=[],E=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var x=o;x<=l;x+=1)(x<v||y<x)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+x+'"]').remove();for(var T=0;T<d.length;T+=1)v<=T&&T<=y&&(void 0===l||e?E.push(T):(l<T&&E.push(T),T<o&&_.push(T)));E.forEach(function(e){t.$wrapperEl.append(c(d[e],e))}),_.sort(function(e,t){return e<t}).forEach(function(e){t.$wrapperEl.prepend(c(d[e],e))}),t.$wrapperEl.children(".swiper-slide").css(p,b+"px"),w()},renderSlide:function(e,t){var i=this.params.virtual;if(i.cache&&this.virtual.cache[t])return this.virtual.cache[t];var n=i.renderSlide?D(i.renderSlide.call(this,e,t)):D('<div class="'+this.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return n.attr("data-swiper-slide-index")||n.attr("data-swiper-slide-index",t),i.cache&&(this.virtual.cache[t]=n),n},appendSlide:function(e){this.virtual.slides.push(e),this.virtual.update(!0)},prependSlide:function(e){if(this.virtual.slides.unshift(e),this.params.virtual.cache){var t=this.virtual.cache,i={};Object.keys(t).forEach(function(e){i[e+1]=t[e]}),this.virtual.cache=i}this.virtual.update(!0),this.slideNext(0)}},$={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null}},create:function(){j.extend(this,{virtual:{update:P.update.bind(this),appendSlide:P.appendSlide.bind(this),prependSlide:P.prependSlide.bind(this),renderSlide:P.renderSlide.bind(this),slides:this.params.virtual.slides,cache:{}}})},on:{beforeInit:function(){if(this.params.virtual.enabled){this.classNames.push(this.params.containerModifierClass+"virtual");var e={watchSlidesProgress:!0};j.extend(this.params,e),j.extend(this.originalParams,e),this.virtual.update()}},setTranslate:function(){this.params.virtual.enabled&&this.virtual.update()}}},O={handle:function(e){var t=this.rtlTranslate,i=e;i.originalEvent&&(i=i.originalEvent);var n=i.keyCode||i.charCode;if(!this.allowSlideNext&&(this.isHorizontal()&&39===n||this.isVertical()&&40===n))return!1;if(!this.allowSlidePrev&&(this.isHorizontal()&&37===n||this.isVertical()&&38===n))return!1;if(!(i.shiftKey||i.altKey||i.ctrlKey||i.metaKey||f.activeElement&&f.activeElement.nodeName&&("input"===f.activeElement.nodeName.toLowerCase()||"textarea"===f.activeElement.nodeName.toLowerCase()))){if(this.params.keyboard.onlyInViewport&&(37===n||39===n||38===n||40===n)){var s=!1;if(0<this.$el.parents("."+this.params.slideClass).length&&0===this.$el.parents("."+this.params.slideActiveClass).length)return;var a=H.innerWidth,r=H.innerHeight,o=this.$el.offset();t&&(o.left-=this.$el[0].scrollLeft);for(var l=[[o.left,o.top],[o.left+this.width,o.top],[o.left,o.top+this.height],[o.left+this.width,o.top+this.height]],d=0;d<l.length;d+=1){var h=l[d];0<=h[0]&&h[0]<=a&&0<=h[1]&&h[1]<=r&&(s=!0)}if(!s)return}this.isHorizontal()?(37!==n&&39!==n||(i.preventDefault?i.preventDefault():i.returnValue=!1),(39===n&&!t||37===n&&t)&&this.slideNext(),(37===n&&!t||39===n&&t)&&this.slidePrev()):(38!==n&&40!==n||(i.preventDefault?i.preventDefault():i.returnValue=!1),40===n&&this.slideNext(),38===n&&this.slidePrev()),this.emit("keyPress",n)}},enable:function(){this.keyboard.enabled||(D(f).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){this.keyboard.enabled&&(D(f).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},L={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0}},create:function(){j.extend(this,{keyboard:{enabled:!1,enable:O.enable.bind(this),disable:O.disable.bind(this),handle:O.handle.bind(this)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}},N={lastScrollTime:j.now(),event:-1<H.navigator.userAgent.indexOf("firefox")?"DOMMouseScroll":function(){var e="onwheel"in f;if(!e){var t=f.createElement("div");t.setAttribute("onwheel","return;"),e="function"==typeof t.onwheel}return!e&&f.implementation&&f.implementation.hasFeature&&!0!==f.implementation.hasFeature("","")&&(e=f.implementation.hasFeature("Events.wheel","3.0")),e}()?"wheel":"mousewheel",normalize:function(e){var t=0,i=0,n=0,s=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),n=10*t,s=10*i,"deltaY"in e&&(s=e.deltaY),"deltaX"in e&&(n=e.deltaX),(n||s)&&e.deltaMode&&(1===e.deltaMode?(n*=40,s*=40):(n*=800,s*=800)),n&&!t&&(t=n<1?-1:1),s&&!i&&(i=s<1?-1:1),{spinX:t,spinY:i,pixelX:n,pixelY:s}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,i=this,n=i.params.mousewheel;if(!i.mouseEntered&&!n.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var s=0,a=i.rtlTranslate?-1:1,r=N.normalize(t);if(n.forceToAxis)if(i.isHorizontal()){if(!(Math.abs(r.pixelX)>Math.abs(r.pixelY)))return!0;s=r.pixelX*a}else{if(!(Math.abs(r.pixelY)>Math.abs(r.pixelX)))return!0;s=r.pixelY}else s=Math.abs(r.pixelX)>Math.abs(r.pixelY)?-r.pixelX*a:-r.pixelY;if(0===s)return!0;if(n.invert&&(s=-s),i.params.freeMode){i.params.loop&&i.loopFix();var o=i.getTranslate()+s*n.sensitivity,l=i.isBeginning,d=i.isEnd;if(o>=i.minTranslate()&&(o=i.minTranslate()),o<=i.maxTranslate()&&(o=i.maxTranslate()),i.setTransition(0),i.setTranslate(o),i.updateProgress(),i.updateActiveIndex(),i.updateSlidesClasses(),(!l&&i.isBeginning||!d&&i.isEnd)&&i.updateSlidesClasses(),i.params.freeModeSticky&&(clearTimeout(i.mousewheel.timeout),i.mousewheel.timeout=j.nextTick(function(){i.slideToClosest()},300)),i.emit("scroll",t),i.params.autoplay&&i.params.autoplayDisableOnInteraction&&i.autoplay.stop(),o===i.minTranslate()||o===i.maxTranslate())return!0}else{if(60<j.now()-i.mousewheel.lastScrollTime)if(s<0)if(i.isEnd&&!i.params.loop||i.animating){if(n.releaseOnEdges)return!0}else i.slideNext(),i.emit("scroll",t);else if(i.isBeginning&&!i.params.loop||i.animating){if(n.releaseOnEdges)return!0}else i.slidePrev(),i.emit("scroll",t);i.mousewheel.lastScrollTime=(new H.Date).getTime()}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},enable:function(){if(!N.event)return!1;if(this.mousewheel.enabled)return!1;var e=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(e=D(this.params.mousewheel.eventsTarged)),e.on("mouseenter",this.mousewheel.handleMouseEnter),e.on("mouseleave",this.mousewheel.handleMouseLeave),e.on(N.event,this.mousewheel.handle),this.mousewheel.enabled=!0},disable:function(){if(!N.event)return!1;if(!this.mousewheel.enabled)return!1;var e=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(e=D(this.params.mousewheel.eventsTarged)),e.off(N.event,this.mousewheel.handle),!(this.mousewheel.enabled=!1)}},z={update:function(){var e=this.params.navigation;if(!this.params.loop){var t=this.navigation,i=t.$nextEl,n=t.$prevEl;n&&0<n.length&&(this.isBeginning?n.addClass(e.disabledClass):n.removeClass(e.disabledClass),n[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass)),i&&0<i.length&&(this.isEnd?i.addClass(e.disabledClass):i.removeClass(e.disabledClass),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass))}},init:function(){var e,t,i=this,n=i.params.navigation;(n.nextEl||n.prevEl)&&(n.nextEl&&(e=D(n.nextEl),i.params.uniqueNavElements&&"string"==typeof n.nextEl&&1<e.length&&1===i.$el.find(n.nextEl).length&&(e=i.$el.find(n.nextEl))),n.prevEl&&(t=D(n.prevEl),i.params.uniqueNavElements&&"string"==typeof n.prevEl&&1<t.length&&1===i.$el.find(n.prevEl).length&&(t=i.$el.find(n.prevEl))),e&&0<e.length&&e.on("click",function(e){e.preventDefault(),i.isEnd&&!i.params.loop||i.slideNext()}),t&&0<t.length&&t.on("click",function(e){e.preventDefault(),i.isBeginning&&!i.params.loop||i.slidePrev()}),j.extend(i.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;t&&t.length&&(t.off("click"),t.removeClass(this.params.navigation.disabledClass)),i&&i.length&&(i.off("click"),i.removeClass(this.params.navigation.disabledClass))}},R={update:function(){var e=this.rtl,s=this.params.pagination;if(s.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var a,t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,n=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length;if(this.params.loop?((a=Math.ceil((this.activeIndex-this.loopedSlides)/this.params.slidesPerGroup))>t-1-2*this.loopedSlides&&(a-=t-2*this.loopedSlides),n-1<a&&(a-=n),a<0&&"bullets"!==this.params.paginationType&&(a=n+a)):a=void 0!==this.snapIndex?this.snapIndex:this.activeIndex||0,"bullets"===s.type&&this.pagination.bullets&&0<this.pagination.bullets.length){var r,o,l,d=this.pagination.bullets;if(s.dynamicBullets&&(this.pagination.bulletSize=d.eq(0)[this.isHorizontal()?"outerWidth":"outerHeight"](!0),i.css(this.isHorizontal()?"width":"height",this.pagination.bulletSize*(s.dynamicMainBullets+4)+"px"),1<s.dynamicMainBullets&&void 0!==this.previousIndex&&(this.pagination.dynamicBulletIndex+=a-this.previousIndex,this.pagination.dynamicBulletIndex>s.dynamicMainBullets-1?this.pagination.dynamicBulletIndex=s.dynamicMainBullets-1:this.pagination.dynamicBulletIndex<0&&(this.pagination.dynamicBulletIndex=0)),r=a-this.pagination.dynamicBulletIndex,l=((o=r+(Math.min(d.length,s.dynamicMainBullets)-1))+r)/2),d.removeClass(s.bulletActiveClass+" "+s.bulletActiveClass+"-next "+s.bulletActiveClass+"-next-next "+s.bulletActiveClass+"-prev "+s.bulletActiveClass+"-prev-prev "+s.bulletActiveClass+"-main"),1<i.length)d.each(function(e,t){var i=D(t),n=i.index();n===a&&i.addClass(s.bulletActiveClass),s.dynamicBullets&&(r<=n&&n<=o&&i.addClass(s.bulletActiveClass+"-main"),n===r&&i.prev().addClass(s.bulletActiveClass+"-prev").prev().addClass(s.bulletActiveClass+"-prev-prev"),n===o&&i.next().addClass(s.bulletActiveClass+"-next").next().addClass(s.bulletActiveClass+"-next-next"))});else if(d.eq(a).addClass(s.bulletActiveClass),s.dynamicBullets){for(var h=d.eq(r),c=d.eq(o),u=r;u<=o;u+=1)d.eq(u).addClass(s.bulletActiveClass+"-main");h.prev().addClass(s.bulletActiveClass+"-prev").prev().addClass(s.bulletActiveClass+"-prev-prev"),c.next().addClass(s.bulletActiveClass+"-next").next().addClass(s.bulletActiveClass+"-next-next")}if(s.dynamicBullets){var p=Math.min(d.length,s.dynamicMainBullets+4),f=(this.pagination.bulletSize*p-this.pagination.bulletSize)/2-l*this.pagination.bulletSize,g=e?"right":"left";d.css(this.isHorizontal()?g:"top",f+"px")}}if("fraction"===s.type&&(i.find("."+s.currentClass).text(s.formatFractionCurrent(a+1)),i.find("."+s.totalClass).text(s.formatFractionTotal(n))),"progressbar"===s.type){var m;m=s.progressbarOpposite?this.isHorizontal()?"vertical":"horizontal":this.isHorizontal()?"horizontal":"vertical";var v=(a+1)/n,y=1,b=1;"horizontal"===m?y=v:b=v,i.find("."+s.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+y+") scaleY("+b+")").transition(this.params.speed)}"custom"===s.type&&s.renderCustom?(i.html(s.renderCustom(this,a+1,n)),this.emit("paginationRender",this,i[0])):this.emit("paginationUpdate",this,i[0]),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](s.lockClass)}},render:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,n="";if("bullets"===e.type){for(var s=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length,a=0;a<s;a+=1)e.renderBullet?n+=e.renderBullet.call(this,a,e.bulletClass):n+="<"+e.bulletElement+' class="'+e.bulletClass+'"></'+e.bulletElement+">";i.html(n),this.pagination.bullets=i.find("."+e.bulletClass)}"fraction"===e.type&&(n=e.renderFraction?e.renderFraction.call(this,e.currentClass,e.totalClass):'<span class="'+e.currentClass+'"></span> / <span class="'+e.totalClass+'"></span>',i.html(n)),"progressbar"===e.type&&(n=e.renderProgressbar?e.renderProgressbar.call(this,e.progressbarFillClass):'<span class="'+e.progressbarFillClass+'"></span>',i.html(n)),"custom"!==e.type&&this.emit("paginationRender",this.pagination.$el[0])}},init:function(){var i=this,e=i.params.pagination;if(e.el){var t=D(e.el);0!==t.length&&(i.params.uniqueNavElements&&"string"==typeof e.el&&1<t.length&&1===i.$el.find(e.el).length&&(t=i.$el.find(e.el)),"bullets"===e.type&&e.clickable&&t.addClass(e.clickableClass),t.addClass(e.modifierClass+e.type),"bullets"===e.type&&e.dynamicBullets&&(t.addClass(""+e.modifierClass+e.type+"-dynamic"),i.pagination.dynamicBulletIndex=0,e.dynamicMainBullets<1&&(e.dynamicMainBullets=1)),"progressbar"===e.type&&e.progressbarOpposite&&t.addClass(e.progressbarOppositeClass),e.clickable&&t.on("click","."+e.bulletClass,function(e){e.preventDefault();var t=D(this).index()*i.params.slidesPerGroup;i.params.loop&&(t+=i.loopedSlides),i.slideTo(t)}),j.extend(i.pagination,{$el:t,el:t[0]}))}},destroy:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.pagination.$el;t.removeClass(e.hiddenClass),t.removeClass(e.modifierClass+e.type),this.pagination.bullets&&this.pagination.bullets.removeClass(e.bulletActiveClass),e.clickable&&t.off("click","."+e.bulletClass)}}},W={setTranslate:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=this.rtlTranslate,i=this.progress,n=e.dragSize,s=e.trackSize,a=e.$dragEl,r=e.$el,o=this.params.scrollbar,l=n,d=(s-n)*i;t?0<(d=-d)?(l=n-d,d=0):s<-d+n&&(l=s+d):d<0?(l=n+d,d=0):s<d+n&&(l=s-d),this.isHorizontal()?(B.transforms3d?a.transform("translate3d("+d+"px, 0, 0)"):a.transform("translateX("+d+"px)"),a[0].style.width=l+"px"):(B.transforms3d?a.transform("translate3d(0px, "+d+"px, 0)"):a.transform("translateY("+d+"px)"),a[0].style.height=l+"px"),o.hide&&(clearTimeout(this.scrollbar.timeout),r[0].style.opacity=1,this.scrollbar.timeout=setTimeout(function(){r[0].style.opacity=0,r.transition(400)},1e3))}},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=e.$dragEl,i=e.$el;t[0].style.width="",t[0].style.height="";var n,s=this.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,a=this.size/this.virtualSize,r=a*(s/this.size);n="auto"===this.params.scrollbar.dragSize?s*a:parseInt(this.params.scrollbar.dragSize,10),this.isHorizontal()?t[0].style.width=n+"px":t[0].style.height=n+"px",i[0].style.display=1<=a?"none":"",this.params.scrollbarHide&&(i[0].style.opacity=0),j.extend(e,{trackSize:s,divider:a,moveDivider:r,dragSize:n}),e.$el[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](this.params.scrollbar.lockClass)}},setDragPosition:function(e){var t,i=this.scrollbar,n=this.rtlTranslate,s=i.$el,a=i.dragSize,r=i.trackSize;t=((this.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageX:e.pageX||e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageY:e.pageY||e.clientY)-s.offset()[this.isHorizontal()?"left":"top"]-a/2)/(r-a),t=Math.max(Math.min(t,1),0),n&&(t=1-t);var o=this.minTranslate()+(this.maxTranslate()-this.minTranslate())*t;this.updateProgress(o),this.setTranslate(o),this.updateActiveIndex(),this.updateSlidesClasses()},onDragStart:function(e){var t=this.params.scrollbar,i=this.scrollbar,n=this.$wrapperEl,s=i.$el,a=i.$dragEl;this.scrollbar.isTouched=!0,e.preventDefault(),e.stopPropagation(),n.transition(100),a.transition(100),i.setDragPosition(e),clearTimeout(this.scrollbar.dragTimeout),s.transition(0),t.hide&&s.css("opacity",1),this.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,n=t.$el,s=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),n.transition(0),s.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this.params.scrollbar,i=this.scrollbar.$el;this.scrollbar.isTouched&&(this.scrollbar.isTouched=!1,t.hide&&(clearTimeout(this.scrollbar.dragTimeout),this.scrollbar.dragTimeout=j.nextTick(function(){i.css("opacity",0),i.transition(400)},1e3)),this.emit("scrollbarDragEnd",e),t.snapOnRelease&&this.slideToClosest())},enableDraggable:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.touchEvents,i=this.touchEventsDesktop,n=this.params,s=e.$el[0],a=!(!B.passiveListener||!n.passiveListener)&&{passive:!1,capture:!1},r=!(!B.passiveListener||!n.passiveListener)&&{passive:!0,capture:!1};B.touch||!B.pointerEvents&&!B.prefixedPointerEvents?(B.touch&&(s.addEventListener(t.start,this.scrollbar.onDragStart,a),s.addEventListener(t.move,this.scrollbar.onDragMove,a),s.addEventListener(t.end,this.scrollbar.onDragEnd,r)),(n.simulateTouch&&!g.ios&&!g.android||n.simulateTouch&&!B.touch&&g.ios)&&(s.addEventListener("mousedown",this.scrollbar.onDragStart,a),f.addEventListener("mousemove",this.scrollbar.onDragMove,a),f.addEventListener("mouseup",this.scrollbar.onDragEnd,r))):(s.addEventListener(i.start,this.scrollbar.onDragStart,a),f.addEventListener(i.move,this.scrollbar.onDragMove,a),f.addEventListener(i.end,this.scrollbar.onDragEnd,r))}},disableDraggable:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.touchEvents,i=this.touchEventsDesktop,n=this.params,s=e.$el[0],a=!(!B.passiveListener||!n.passiveListener)&&{passive:!1,capture:!1},r=!(!B.passiveListener||!n.passiveListener)&&{passive:!0,capture:!1};B.touch||!B.pointerEvents&&!B.prefixedPointerEvents?(B.touch&&(s.removeEventListener(t.start,this.scrollbar.onDragStart,a),s.removeEventListener(t.move,this.scrollbar.onDragMove,a),s.removeEventListener(t.end,this.scrollbar.onDragEnd,r)),(n.simulateTouch&&!g.ios&&!g.android||n.simulateTouch&&!B.touch&&g.ios)&&(s.removeEventListener("mousedown",this.scrollbar.onDragStart,a),f.removeEventListener("mousemove",this.scrollbar.onDragMove,a),f.removeEventListener("mouseup",this.scrollbar.onDragEnd,r))):(s.removeEventListener(i.start,this.scrollbar.onDragStart,a),f.removeEventListener(i.move,this.scrollbar.onDragMove,a),f.removeEventListener(i.end,this.scrollbar.onDragEnd,r))}},init:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.$el,i=this.params.scrollbar,n=D(i.el);this.params.uniqueNavElements&&"string"==typeof i.el&&1<n.length&&1===t.find(i.el).length&&(n=t.find(i.el));var s=n.find("."+this.params.scrollbar.dragClass);0===s.length&&(s=D('<div class="'+this.params.scrollbar.dragClass+'"></div>'),n.append(s)),j.extend(e,{$el:n,el:n[0],$dragEl:s,dragEl:s[0]}),i.draggable&&e.enableDraggable()}},destroy:function(){this.scrollbar.disableDraggable()}},V={setTransform:function(e,t){var i=this.rtl,n=D(e),s=i?-1:1,a=n.attr("data-swiper-parallax")||"0",r=n.attr("data-swiper-parallax-x"),o=n.attr("data-swiper-parallax-y"),l=n.attr("data-swiper-parallax-scale"),d=n.attr("data-swiper-parallax-opacity");if(r||o?(r=r||"0",o=o||"0"):this.isHorizontal()?(r=a,o="0"):(o=a,r="0"),r=0<=r.indexOf("%")?parseInt(r,10)*t*s+"%":r*t*s+"px",o=0<=o.indexOf("%")?parseInt(o,10)*t+"%":o*t+"px",null!=d){var h=d-(d-1)*(1-Math.abs(t));n[0].style.opacity=h}if(null==l)n.transform("translate3d("+r+", "+o+", 0px)");else{var c=l-(l-1)*(1-Math.abs(t));n.transform("translate3d("+r+", "+o+", 0px) scale("+c+")")}},setTranslate:function(){var n=this,e=n.$el,t=n.slides,s=n.progress,a=n.snapGrid;e.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){n.parallax.setTransform(t,s)}),t.each(function(e,t){var i=t.progress;1<n.params.slidesPerGroup&&"auto"!==n.params.slidesPerView&&(i+=Math.ceil(e/2)-s*(a.length-1)),i=Math.min(Math.max(i,-1),1),D(t).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){n.parallax.setTransform(t,i)})})},setTransition:function(s){void 0===s&&(s=this.params.speed),this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){var i=D(t),n=parseInt(i.attr("data-swiper-parallax-duration"),10)||s;0===s&&(n=0),i.transition(n)})}},F={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,n=e.targetTouches[1].pageX,s=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(n-t,2)+Math.pow(s-i,2))},onGestureStart:function(e){var t=this.params.zoom,i=this.zoom,n=i.gesture;if(i.fakeGestureTouched=!1,i.fakeGestureMoved=!1,!B.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;i.fakeGestureTouched=!0,n.scaleStart=F.getDistanceBetweenTouches(e)}n.$slideEl&&n.$slideEl.length||(n.$slideEl=D(e.target).closest(".swiper-slide"),0===n.$slideEl.length&&(n.$slideEl=this.slides.eq(this.activeIndex)),n.$imageEl=n.$slideEl.find("img, svg, canvas"),n.$imageWrapEl=n.$imageEl.parent("."+t.containerClass),n.maxRatio=n.$imageWrapEl.attr("data-swiper-zoom")||t.maxRatio,0!==n.$imageWrapEl.length)?(n.$imageEl.transition(0),this.zoom.isScaling=!0):n.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,i=this.zoom,n=i.gesture;if(!B.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;i.fakeGestureMoved=!0,n.scaleMove=F.getDistanceBetweenTouches(e)}n.$imageEl&&0!==n.$imageEl.length&&(B.gestures?this.zoom.scale=e.scale*i.currentScale:i.scale=n.scaleMove/n.scaleStart*i.currentScale,i.scale>n.maxRatio&&(i.scale=n.maxRatio-1+Math.pow(i.scale-n.maxRatio+1,.5)),i.scale<t.minRatio&&(i.scale=t.minRatio+1-Math.pow(t.minRatio-i.scale+1,.5)),n.$imageEl.transform("translate3d(0,0,0) scale("+i.scale+")"))},onGestureEnd:function(e){var t=this.params.zoom,i=this.zoom,n=i.gesture;if(!B.gestures){if(!i.fakeGestureTouched||!i.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!g.android)return;i.fakeGestureTouched=!1,i.fakeGestureMoved=!1}n.$imageEl&&0!==n.$imageEl.length&&(i.scale=Math.max(Math.min(i.scale,n.maxRatio),t.minRatio),n.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+i.scale+")"),i.currentScale=i.scale,i.isScaling=!1,1===i.scale&&(n.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,i=t.gesture,n=t.image;i.$imageEl&&0!==i.$imageEl.length&&(n.isTouched||(g.android&&e.preventDefault(),n.isTouched=!0,n.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,n.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this.zoom,i=t.gesture,n=t.image,s=t.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(this.allowClick=!1,n.isTouched&&i.$slideEl)){n.isMoved||(n.width=i.$imageEl[0].offsetWidth,n.height=i.$imageEl[0].offsetHeight,n.startX=j.getTranslate(i.$imageWrapEl[0],"x")||0,n.startY=j.getTranslate(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),this.rtl&&(n.startX=-n.startX,n.startY=-n.startY));var a=n.width*t.scale,r=n.height*t.scale;if(!(a<i.slideWidth&&r<i.slideHeight)){if(n.minX=Math.min(i.slideWidth/2-a/2,0),n.maxX=-n.minX,n.minY=Math.min(i.slideHeight/2-r/2,0),n.maxY=-n.minY,n.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,n.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!n.isMoved&&!t.isScaling){if(this.isHorizontal()&&(Math.floor(n.minX)===Math.floor(n.startX)&&n.touchesCurrent.x<n.touchesStart.x||Math.floor(n.maxX)===Math.floor(n.startX)&&n.touchesCurrent.x>n.touchesStart.x))return void(n.isTouched=!1);if(!this.isHorizontal()&&(Math.floor(n.minY)===Math.floor(n.startY)&&n.touchesCurrent.y<n.touchesStart.y||Math.floor(n.maxY)===Math.floor(n.startY)&&n.touchesCurrent.y>n.touchesStart.y))return void(n.isTouched=!1)}e.preventDefault(),e.stopPropagation(),n.isMoved=!0,n.currentX=n.touchesCurrent.x-n.touchesStart.x+n.startX,n.currentY=n.touchesCurrent.y-n.touchesStart.y+n.startY,n.currentX<n.minX&&(n.currentX=n.minX+1-Math.pow(n.minX-n.currentX+1,.8)),n.currentX>n.maxX&&(n.currentX=n.maxX-1+Math.pow(n.currentX-n.maxX+1,.8)),n.currentY<n.minY&&(n.currentY=n.minY+1-Math.pow(n.minY-n.currentY+1,.8)),n.currentY>n.maxY&&(n.currentY=n.maxY-1+Math.pow(n.currentY-n.maxY+1,.8)),s.prevPositionX||(s.prevPositionX=n.touchesCurrent.x),s.prevPositionY||(s.prevPositionY=n.touchesCurrent.y),s.prevTime||(s.prevTime=Date.now()),s.x=(n.touchesCurrent.x-s.prevPositionX)/(Date.now()-s.prevTime)/2,s.y=(n.touchesCurrent.y-s.prevPositionY)/(Date.now()-s.prevTime)/2,Math.abs(n.touchesCurrent.x-s.prevPositionX)<2&&(s.x=0),Math.abs(n.touchesCurrent.y-s.prevPositionY)<2&&(s.y=0),s.prevPositionX=n.touchesCurrent.x,s.prevPositionY=n.touchesCurrent.y,s.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d("+n.currentX+"px, "+n.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,n=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var s=300,a=300,r=n.x*s,o=i.currentX+r,l=n.y*a,d=i.currentY+l;0!==n.x&&(s=Math.abs((o-i.currentX)/n.x)),0!==n.y&&(a=Math.abs((d-i.currentY)/n.y));var h=Math.max(s,a);i.currentX=o,i.currentY=d;var c=i.width*e.scale,u=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-c/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-u/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(h).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl.transform("translate3d(0,0,0)"),t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0,e.scale=1,e.currentScale=1)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,n,s,a,r,o,l,d,h,c,u,p,f,g,m,v=this.zoom,y=this.params.zoom,b=v.gesture,w=v.image;b.$slideEl||(b.$slideEl=this.clickedSlide?D(this.clickedSlide):this.slides.eq(this.activeIndex),b.$imageEl=b.$slideEl.find("img, svg, canvas"),b.$imageWrapEl=b.$imageEl.parent("."+y.containerClass)),b.$imageEl&&0!==b.$imageEl.length&&(b.$slideEl.addClass(""+y.zoomedSlideClass),void 0===w.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,i="touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=w.touchesStart.x,i=w.touchesStart.y),v.scale=b.$imageWrapEl.attr("data-swiper-zoom")||y.maxRatio,v.currentScale=b.$imageWrapEl.attr("data-swiper-zoom")||y.maxRatio,e?(g=b.$slideEl[0].offsetWidth,m=b.$slideEl[0].offsetHeight,n=b.$slideEl.offset().left+g/2-t,s=b.$slideEl.offset().top+m/2-i,o=b.$imageEl[0].offsetWidth,l=b.$imageEl[0].offsetHeight,d=o*v.scale,h=l*v.scale,p=-(c=Math.min(g/2-d/2,0)),f=-(u=Math.min(m/2-h/2,0)),(a=n*v.scale)<c&&(a=c),p<a&&(a=p),(r=s*v.scale)<u&&(r=u),f<r&&(r=f)):r=a=0,b.$imageWrapEl.transition(300).transform("translate3d("+a+"px, "+r+"px,0)"),b.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+v.scale+")"))},out:function(){var e=this.zoom,t=this.params.zoom,i=e.gesture;i.$slideEl||(i.$slideEl=this.clickedSlide?D(this.clickedSlide):this.slides.eq(this.activeIndex),i.$imageEl=i.$slideEl.find("img, svg, canvas"),i.$imageWrapEl=i.$imageEl.parent("."+t.containerClass)),i.$imageEl&&0!==i.$imageEl.length&&(e.scale=1,e.currentScale=1,i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),i.$slideEl.removeClass(""+t.zoomedSlideClass),i.$slideEl=void 0)},enable:function(){var e=this.zoom;if(!e.enabled){e.enabled=!0;var t=!("touchstart"!==this.touchEvents.start||!B.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1};B.gestures?(this.$wrapperEl.on("gesturestart",".swiper-slide",e.onGestureStart,t),this.$wrapperEl.on("gesturechange",".swiper-slide",e.onGestureChange,t),this.$wrapperEl.on("gestureend",".swiper-slide",e.onGestureEnd,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.on(this.touchEvents.start,".swiper-slide",e.onGestureStart,t),this.$wrapperEl.on(this.touchEvents.move,".swiper-slide",e.onGestureChange,t),this.$wrapperEl.on(this.touchEvents.end,".swiper-slide",e.onGestureEnd,t)),this.$wrapperEl.on(this.touchEvents.move,"."+this.params.zoom.containerClass,e.onTouchMove)}},disable:function(){var e=this.zoom;if(e.enabled){this.zoom.enabled=!1;var t=!("touchstart"!==this.touchEvents.start||!B.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1};B.gestures?(this.$wrapperEl.off("gesturestart",".swiper-slide",e.onGestureStart,t),this.$wrapperEl.off("gesturechange",".swiper-slide",e.onGestureChange,t),this.$wrapperEl.off("gestureend",".swiper-slide",e.onGestureEnd,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.off(this.touchEvents.start,".swiper-slide",e.onGestureStart,t),this.$wrapperEl.off(this.touchEvents.move,".swiper-slide",e.onGestureChange,t),this.$wrapperEl.off(this.touchEvents.end,".swiper-slide",e.onGestureEnd,t)),this.$wrapperEl.off(this.touchEvents.move,"."+this.params.zoom.containerClass,e.onTouchMove)}}},Y={loadInSlide:function(e,l){void 0===l&&(l=!0);var d=this,h=d.params.lazy;if(void 0!==e&&0!==d.slides.length){var c=d.virtual&&d.params.virtual.enabled?d.$wrapperEl.children("."+d.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):d.slides.eq(e),t=c.find("."+h.elementClass+":not(."+h.loadedClass+"):not(."+h.loadingClass+")");!c.hasClass(h.elementClass)||c.hasClass(h.loadedClass)||c.hasClass(h.loadingClass)||(t=t.add(c[0])),0!==t.length&&t.each(function(e,t){var n=D(t);n.addClass(h.loadingClass);var s=n.attr("data-background"),a=n.attr("data-src"),r=n.attr("data-srcset"),o=n.attr("data-sizes");d.loadImage(n[0],a||s,r,o,!1,function(){if(null!=d&&d&&(!d||d.params)&&!d.destroyed){if(s?(n.css("background-image",'url("'+s+'")'),n.removeAttr("data-background")):(r&&(n.attr("srcset",r),n.removeAttr("data-srcset")),o&&(n.attr("sizes",o),n.removeAttr("data-sizes")),a&&(n.attr("src",a),n.removeAttr("data-src"))),n.addClass(h.loadedClass).removeClass(h.loadingClass),c.find("."+h.preloaderClass).remove(),d.params.loop&&l){var e=c.attr("data-swiper-slide-index");if(c.hasClass(d.params.slideDuplicateClass)){var t=d.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+d.params.slideDuplicateClass+")");d.lazy.loadInSlide(t.index(),!1)}else{var i=d.$wrapperEl.children("."+d.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]');d.lazy.loadInSlide(i.index(),!1)}}d.emit("lazyImageReady",c[0],n[0])}}),d.emit("lazyImageLoad",c[0],n[0])})}},load:function(){var n=this,t=n.$wrapperEl,i=n.params,s=n.slides,e=n.activeIndex,a=n.virtual&&i.virtual.enabled,r=i.lazy,o=i.slidesPerView;function l(e){if(a){if(t.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return!0}else if(s[e])return!0;return!1}function d(e){return a?D(e).attr("data-swiper-slide-index"):D(e).index()}if("auto"===o&&(o=0),n.lazy.initialImageLoaded||(n.lazy.initialImageLoaded=!0),n.params.watchSlidesVisibility)t.children("."+i.slideVisibleClass).each(function(e,t){var i=a?D(t).attr("data-swiper-slide-index"):D(t).index();n.lazy.loadInSlide(i)});else if(1<o)for(var h=e;h<e+o;h+=1)l(h)&&n.lazy.loadInSlide(h);else n.lazy.loadInSlide(e);if(r.loadPrevNext)if(1<o||r.loadPrevNextAmount&&1<r.loadPrevNextAmount){for(var c=r.loadPrevNextAmount,u=o,p=Math.min(e+u+Math.max(c,u),s.length),f=Math.max(e-Math.max(u,c),0),g=e+o;g<p;g+=1)l(g)&&n.lazy.loadInSlide(g);for(var m=f;m<e;m+=1)l(m)&&n.lazy.loadInSlide(m)}else{var v=t.children("."+i.slideNextClass);0<v.length&&n.lazy.loadInSlide(d(v));var y=t.children("."+i.slidePrevClass);0<y.length&&n.lazy.loadInSlide(d(y))}}},G={LinearSpline:function(e,t){var i,n,s,a,r;return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(r=function(e,t){for(n=-1,i=e.length;1<i-n;)e[s=i+n>>1]<=t?n=s:i=s;return i}(this.x,e),a=r-1,(e-this.x[a])*(this.y[r]-this.y[a])/(this.x[r]-this.x[a])+this.y[a]):0},this},getInterpolateFunction:function(e){this.controller.spline||(this.controller.spline=this.params.loop?new G.LinearSpline(this.slidesGrid,e.slidesGrid):new G.LinearSpline(this.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,n,s=this,a=s.controller.control;function r(e){var t=s.rtlTranslate?-s.translate:s.translate;"slide"===s.params.controller.by&&(s.controller.getInterpolateFunction(e),n=-s.controller.spline.interpolate(-t)),n&&"container"!==s.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(s.maxTranslate()-s.minTranslate()),n=(t-s.minTranslate())*i+e.minTranslate()),s.params.controller.inverse&&(n=e.maxTranslate()-n),e.updateProgress(n),e.setTranslate(n,s),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(a))for(var o=0;o<a.length;o+=1)a[o]!==t&&a[o]instanceof x&&r(a[o]);else a instanceof x&&t!==a&&r(a)},setTransition:function(t,e){var i,n=this,s=n.controller.control;function a(e){e.setTransition(t,n),0!==t&&(e.transitionStart(),e.$wrapperEl.transitionEnd(function(){s&&(e.params.loop&&"slide"===n.params.controller.by&&e.loopFix(),e.transitionEnd())}))}if(Array.isArray(s))for(i=0;i<s.length;i+=1)s[i]!==e&&s[i]instanceof x&&a(s[i]);else s instanceof x&&e!==s&&a(s)}},X={makeElFocusable:function(e){return e.attr("tabIndex","0"),e},addElRole:function(e,t){return e.attr("role",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t=this.params.a11y;if(13===e.keyCode){var i=D(e.target);this.navigation&&this.navigation.$nextEl&&i.is(this.navigation.$nextEl)&&(this.isEnd&&!this.params.loop||this.slideNext(),this.isEnd?this.a11y.notify(t.lastSlideMessage):this.a11y.notify(t.nextSlideMessage)),this.navigation&&this.navigation.$prevEl&&i.is(this.navigation.$prevEl)&&(this.isBeginning&&!this.params.loop||this.slidePrev(),this.isBeginning?this.a11y.notify(t.firstSlideMessage):this.a11y.notify(t.prevSlideMessage)),this.pagination&&i.is("."+this.params.pagination.bulletClass)&&i[0].click()}},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){if(!this.params.loop){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;i&&0<i.length&&(this.isBeginning?this.a11y.disableEl(i):this.a11y.enableEl(i)),t&&0<t.length&&(this.isEnd?this.a11y.disableEl(t):this.a11y.enableEl(t))}},updatePagination:function(){var n=this,s=n.params.a11y;n.pagination&&n.params.pagination.clickable&&n.pagination.bullets&&n.pagination.bullets.length&&n.pagination.bullets.each(function(e,t){var i=D(t);n.a11y.makeElFocusable(i),n.a11y.addElRole(i,"button"),n.a11y.addElLabel(i,s.paginationBulletMessage.replace(/{{index}}/,i.index()+1))})},init:function(){this.$el.append(this.a11y.liveRegion);var e,t,i=this.params.a11y;this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&(this.a11y.makeElFocusable(e),this.a11y.addElRole(e,"button"),this.a11y.addElLabel(e,i.nextSlideMessage),e.on("keydown",this.a11y.onEnterKey)),t&&(this.a11y.makeElFocusable(t),this.a11y.addElRole(t,"button"),this.a11y.addElLabel(t,i.prevSlideMessage),t.on("keydown",this.a11y.onEnterKey)),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.on("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)},destroy:function(){var e,t;this.a11y.liveRegion&&0<this.a11y.liveRegion.length&&this.a11y.liveRegion.remove(),this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&e.off("keydown",this.a11y.onEnterKey),t&&t.off("keydown",this.a11y.onEnterKey),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.off("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)}},U={init:function(){if(this.params.history){if(!H.history||!H.history.pushState)return this.params.history.enabled=!1,void(this.params.hashNavigation.enabled=!0);var e=this.history;e.initialized=!0,e.paths=U.getPathValues(),(e.paths.key||e.paths.value)&&(e.scrollToSlide(0,e.paths.value,this.params.runCallbacksOnInit),this.params.history.replaceState||H.addEventListener("popstate",this.history.setHistoryPopState))}},destroy:function(){this.params.history.replaceState||H.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=U.getPathValues(),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(){var e=H.location.pathname.slice(1).split("/").filter(function(e){return""!==e}),t=e.length;return{key:e[t-2],value:e[t-1]}},setHistory:function(e,t){if(this.history.initialized&&this.params.history.enabled){var i=this.slides.eq(t),n=U.slugify(i.attr("data-history"));H.location.pathname.includes(e)||(n=e+"/"+n);var s=H.history.state;s&&s.value===n||(this.params.history.replaceState?H.history.replaceState({value:n},null,n):H.history.pushState({value:n},null,n))}},slugify:function(e){return e.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){if(t)for(var n=0,s=this.slides.length;n<s;n+=1){var a=this.slides.eq(n);if(U.slugify(a.attr("data-history"))===t&&!a.hasClass(this.params.slideDuplicateClass)){var r=a.index();this.slideTo(r,e,i)}}else this.slideTo(0,e,i)}},K={onHashCange:function(){var e=f.location.hash.replace("#","");e!==this.slides.eq(this.activeIndex).attr("data-hash")&&this.slideTo(this.$wrapperEl.children("."+this.params.slideClass+'[data-hash="'+e+'"]').index())},setHash:function(){if(this.hashNavigation.initialized&&this.params.hashNavigation.enabled)if(this.params.hashNavigation.replaceState&&H.history&&H.history.replaceState)H.history.replaceState(null,null,"#"+this.slides.eq(this.activeIndex).attr("data-hash")||"");else{var e=this.slides.eq(this.activeIndex),t=e.attr("data-hash")||e.attr("data-history");f.location.hash=t||""}},init:function(){if(!(!this.params.hashNavigation.enabled||this.params.history&&this.params.history.enabled)){this.hashNavigation.initialized=!0;var e=f.location.hash.replace("#","");if(e)for(var t=0,i=this.slides.length;t<i;t+=1){var n=this.slides.eq(t);if((n.attr("data-hash")||n.attr("data-history"))===e&&!n.hasClass(this.params.slideDuplicateClass)){var s=n.index();this.slideTo(s,0,this.params.runCallbacksOnInit,!0)}}this.params.hashNavigation.watchState&&D(H).on("hashchange",this.hashNavigation.onHashCange)}},destroy:function(){this.params.hashNavigation.watchState&&D(H).off("hashchange",this.hashNavigation.onHashCange)}},q={run:function(){var e=this,t=e.slides.eq(e.activeIndex),i=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(i=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),e.autoplay.timeout=j.nextTick(function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay"))},i)},start:function(){return void 0===this.autoplay.timeout&&!this.autoplay.running&&(this.autoplay.running=!0,this.emit("autoplayStart"),this.autoplay.run(),!0)},stop:function(){return!!this.autoplay.running&&void 0!==this.autoplay.timeout&&(this.autoplay.timeout&&(clearTimeout(this.autoplay.timeout),this.autoplay.timeout=void 0),this.autoplay.running=!1,this.emit("autoplayStop"),!0)},pause:function(e){this.autoplay.running&&(this.autoplay.paused||(this.autoplay.timeout&&clearTimeout(this.autoplay.timeout),this.autoplay.paused=!0,0!==e&&this.params.autoplay.waitForTransition?(this.$wrapperEl[0].addEventListener("transitionend",this.autoplay.onTransitionEnd),this.$wrapperEl[0].addEventListener("webkitTransitionEnd",this.autoplay.onTransitionEnd)):(this.autoplay.paused=!1,this.autoplay.run())))}},Q={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=this.slides.eq(t),n=-i[0].swiperSlideOffset;this.params.virtualTranslate||(n-=this.translate);var s=0;this.isHorizontal()||(s=n,n=0);var a=this.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:a}).transform("translate3d("+n+"px, "+s+"px, 0px)")}},setTransition:function(e){var i=this,t=i.slides,n=i.$wrapperEl;if(t.transition(e),i.params.virtualTranslate&&0!==e){var s=!1;t.transitionEnd(function(){if(!s&&i&&!i.destroyed){s=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)n.trigger(e[t])}})}}},Z={setTranslate:function(){var e,t=this.$el,i=this.$wrapperEl,n=this.slides,s=this.width,a=this.height,r=this.rtlTranslate,o=this.size,l=this.params.cubeEffect,d=this.isHorizontal(),h=this.virtual&&this.params.virtual.enabled,c=0;l.shadow&&(d?(0===(e=i.find(".swiper-cube-shadow")).length&&(e=D('<div class="swiper-cube-shadow"></div>'),i.append(e)),e.css({height:s+"px"})):0===(e=t.find(".swiper-cube-shadow")).length&&(e=D('<div class="swiper-cube-shadow"></div>'),t.append(e)));for(var u=0;u<n.length;u+=1){var p=n.eq(u),f=u;h&&(f=parseInt(p.attr("data-swiper-slide-index"),10));var g=90*f,m=Math.floor(g/360);r&&(g=-g,m=Math.floor(-g/360));var v=Math.max(Math.min(p[0].progress,1),-1),y=0,b=0,w=0;f%4==0?(y=4*-m*o,w=0):(f-1)%4==0?(y=0,w=4*-m*o):(f-2)%4==0?(y=o+4*m*o,w=o):(f-3)%4==0&&(y=-o,w=3*o+4*o*m),r&&(y=-y),d||(b=y,y=0);var _="rotateX("+(d?0:-g)+"deg) rotateY("+(d?g:0)+"deg) translate3d("+y+"px, "+b+"px, "+w+"px)";if(v<=1&&-1<v&&(c=90*f+90*v,r&&(c=90*-f-90*v)),p.transform(_),l.slideShadows){var E=d?p.find(".swiper-slide-shadow-left"):p.find(".swiper-slide-shadow-top"),x=d?p.find(".swiper-slide-shadow-right"):p.find(".swiper-slide-shadow-bottom");0===E.length&&(E=D('<div class="swiper-slide-shadow-'+(d?"left":"top")+'"></div>'),p.append(E)),0===x.length&&(x=D('<div class="swiper-slide-shadow-'+(d?"right":"bottom")+'"></div>'),p.append(x)),E.length&&(E[0].style.opacity=Math.max(-v,0)),x.length&&(x[0].style.opacity=Math.max(v,0))}}if(i.css({"-webkit-transform-origin":"50% 50% -"+o/2+"px","-moz-transform-origin":"50% 50% -"+o/2+"px","-ms-transform-origin":"50% 50% -"+o/2+"px","transform-origin":"50% 50% -"+o/2+"px"}),l.shadow)if(d)e.transform("translate3d(0px, "+(s/2+l.shadowOffset)+"px, "+-s/2+"px) rotateX(90deg) rotateZ(0deg) scale("+l.shadowScale+")");else{var T=Math.abs(c)-90*Math.floor(Math.abs(c)/90),C=1.5-(Math.sin(2*T*Math.PI/360)/2+Math.cos(2*T*Math.PI/360)/2),S=l.shadowScale,k=l.shadowScale/C,I=l.shadowOffset;e.transform("scale3d("+S+", 1, "+k+") translate3d(0px, "+(a/2+I)+"px, "+-a/2/k+"px) rotateX(-90deg)")}var M=A.isSafari||A.isUiWebView?-o/2:0;i.transform("translate3d(0px,0,"+M+"px) rotateX("+(this.isHorizontal()?0:c)+"deg) rotateY("+(this.isHorizontal()?-c:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},J={setTranslate:function(){for(var e=this.slides,t=this.rtlTranslate,i=0;i<e.length;i+=1){var n=e.eq(i),s=n[0].progress;this.params.flipEffect.limitRotation&&(s=Math.max(Math.min(n[0].progress,1),-1));var a=-180*s,r=0,o=-n[0].swiperSlideOffset,l=0;if(this.isHorizontal()?t&&(a=-a):(l=o,r=-a,a=o=0),n[0].style.zIndex=-Math.abs(Math.round(s))+e.length,this.params.flipEffect.slideShadows){var d=this.isHorizontal()?n.find(".swiper-slide-shadow-left"):n.find(".swiper-slide-shadow-top"),h=this.isHorizontal()?n.find(".swiper-slide-shadow-right"):n.find(".swiper-slide-shadow-bottom");0===d.length&&(d=D('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"left":"top")+'"></div>'),n.append(d)),0===h.length&&(h=D('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"right":"bottom")+'"></div>'),n.append(h)),d.length&&(d[0].style.opacity=Math.max(-s,0)),h.length&&(h[0].style.opacity=Math.max(s,0))}n.transform("translate3d("+o+"px, "+l+"px, 0px) rotateX("+r+"deg) rotateY("+a+"deg)")}},setTransition:function(e){var i=this,t=i.slides,n=i.activeIndex,s=i.$wrapperEl;if(t.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),i.params.virtualTranslate&&0!==e){var a=!1;t.eq(n).transitionEnd(function(){if(!a&&i&&!i.destroyed){a=!0,i.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)s.trigger(e[t])}})}}},ee={setTranslate:function(){for(var e=this.width,t=this.height,i=this.slides,n=this.$wrapperEl,s=this.slidesSizesGrid,a=this.params.coverflowEffect,r=this.isHorizontal(),o=this.translate,l=r?e/2-o:t/2-o,d=r?a.rotate:-a.rotate,h=a.depth,c=0,u=i.length;c<u;c+=1){var p=i.eq(c),f=s[c],g=(l-p[0].swiperSlideOffset-f/2)/f*a.modifier,m=r?d*g:0,v=r?0:d*g,y=-h*Math.abs(g),b=r?0:a.stretch*g,w=r?a.stretch*g:0;Math.abs(w)<.001&&(w=0),Math.abs(b)<.001&&(b=0),Math.abs(y)<.001&&(y=0),Math.abs(m)<.001&&(m=0),Math.abs(v)<.001&&(v=0);var _="translate3d("+w+"px,"+b+"px,"+y+"px)  rotateX("+v+"deg) rotateY("+m+"deg)";if(p.transform(_),p[0].style.zIndex=1-Math.abs(Math.round(g)),a.slideShadows){var E=r?p.find(".swiper-slide-shadow-left"):p.find(".swiper-slide-shadow-top"),x=r?p.find(".swiper-slide-shadow-right"):p.find(".swiper-slide-shadow-bottom");0===E.length&&(E=D('<div class="swiper-slide-shadow-'+(r?"left":"top")+'"></div>'),p.append(E)),0===x.length&&(x=D('<div class="swiper-slide-shadow-'+(r?"right":"bottom")+'"></div>'),p.append(x)),E.length&&(E[0].style.opacity=0<g?g:0),x.length&&(x[0].style.opacity=0<-g?-g:0)}}(B.pointerEvents||B.prefixedPointerEvents)&&(n[0].style.perspectiveOrigin=l+"px 50%")},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},te=[T,C,S,k,M,$,L,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarged:"container"}},create:function(){j.extend(this,{mousewheel:{enabled:!1,enable:N.enable.bind(this),disable:N.disable.bind(this),handle:N.handle.bind(this),handleMouseEnter:N.handleMouseEnter.bind(this),handleMouseLeave:N.handleMouseLeave.bind(this),lastScrollTime:j.now()}})},on:{init:function(){this.params.mousewheel.enabled&&this.mousewheel.enable()},destroy:function(){this.mousewheel.enabled&&this.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){j.extend(this,{navigation:{init:z.init.bind(this),update:z.update.bind(this),destroy:z.destroy.bind(this)}})},on:{init:function(){this.navigation.init(),this.navigation.update()},toEdge:function(){this.navigation.update()},fromEdge:function(){this.navigation.update()},destroy:function(){this.navigation.destroy()},click:function(e){var t=this.navigation,i=t.$nextEl,n=t.$prevEl;!this.params.navigation.hideOnClick||D(e.target).is(n)||D(e.target).is(i)||(i&&i.toggleClass(this.params.navigation.hiddenClass),n&&n.toggleClass(this.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){j.extend(this,{pagination:{init:R.init.bind(this),render:R.render.bind(this),update:R.update.bind(this),destroy:R.destroy.bind(this),dynamicBulletIndex:0}})},on:{init:function(){this.pagination.init(),this.pagination.render(),this.pagination.update()},activeIndexChange:function(){this.params.loop?this.pagination.update():void 0===this.snapIndex&&this.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){this.params.loop&&(this.pagination.render(),this.pagination.update())},snapGridLengthChange:function(){this.params.loop||(this.pagination.render(),this.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){this.params.pagination.el&&this.params.pagination.hideOnClick&&0<this.pagination.$el.length&&!D(e.target).hasClass(this.params.pagination.bulletClass)&&this.pagination.$el.toggleClass(this.params.pagination.hiddenClass)}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){j.extend(this,{scrollbar:{init:W.init.bind(this),destroy:W.destroy.bind(this),updateSize:W.updateSize.bind(this),setTranslate:W.setTranslate.bind(this),setTransition:W.setTransition.bind(this),enableDraggable:W.enableDraggable.bind(this),disableDraggable:W.disableDraggable.bind(this),setDragPosition:W.setDragPosition.bind(this),onDragStart:W.onDragStart.bind(this),onDragMove:W.onDragMove.bind(this),onDragEnd:W.onDragEnd.bind(this),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){this.scrollbar.init(),this.scrollbar.updateSize(),this.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){j.extend(this,{parallax:{setTransform:V.setTransform.bind(this),setTranslate:V.setTranslate.bind(this),setTransition:V.setTransition.bind(this)}})},on:{beforeInit:function(){this.params.parallax.enabled&&(this.params.watchSlidesProgress=!0)},init:function(){this.params.parallax&&this.parallax.setTranslate()},setTranslate:function(){this.params.parallax&&this.parallax.setTranslate()},setTransition:function(e){this.params.parallax&&this.parallax.setTransition(e)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var t=this,i={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function(e){i[e]=F[e].bind(t)}),j.extend(t,{zoom:i})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){this.params.zoom.enabled&&this.zoom.enabled&&this.params.zoom.toggle&&this.zoom.toggle(e)},transitionEnd:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){j.extend(this,{lazy:{initialImageLoaded:!1,load:Y.load.bind(this),loadInSlide:Y.loadInSlide.bind(this)}})},on:{beforeInit:function(){this.params.lazy.enabled&&this.params.preloadImages&&(this.params.preloadImages=!1)},init:function(){this.params.lazy.enabled&&!this.params.loop&&0===this.params.initialSlide&&this.lazy.load()},scroll:function(){this.params.freeMode&&!this.params.freeModeSticky&&this.lazy.load()},resize:function(){this.params.lazy.enabled&&this.lazy.load()},scrollbarDragMove:function(){this.params.lazy.enabled&&this.lazy.load()},transitionStart:function(){this.params.lazy.enabled&&(this.params.lazy.loadOnTransitionStart||!this.params.lazy.loadOnTransitionStart&&!this.lazy.initialImageLoaded)&&this.lazy.load()},transitionEnd:function(){this.params.lazy.enabled&&!this.params.lazy.loadOnTransitionStart&&this.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){j.extend(this,{controller:{control:this.params.controller.control,getInterpolateFunction:G.getInterpolateFunction.bind(this),setTranslate:G.setTranslate.bind(this),setTransition:G.setTransition.bind(this)}})},on:{update:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},resize:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},observerUpdate:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},setTranslate:function(e,t){this.controller.control&&this.controller.setTranslate(e,t)},setTransition:function(e,t){this.controller.control&&this.controller.setTransition(e,t)}}},{name:"a11y",params:{a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}"}},create:function(){var t=this;j.extend(t,{a11y:{liveRegion:D('<span class="'+t.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')}}),Object.keys(X).forEach(function(e){t.a11y[e]=X[e].bind(t)})},on:{init:function(){this.params.a11y.enabled&&(this.a11y.init(),this.a11y.updateNavigation())},toEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},fromEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},paginationUpdate:function(){this.params.a11y.enabled&&this.a11y.updatePagination()},destroy:function(){this.params.a11y.enabled&&this.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){j.extend(this,{history:{init:U.init.bind(this),setHistory:U.setHistory.bind(this),setHistoryPopState:U.setHistoryPopState.bind(this),scrollToSlide:U.scrollToSlide.bind(this),destroy:U.destroy.bind(this)}})},on:{init:function(){this.params.history.enabled&&this.history.init()},destroy:function(){this.params.history.enabled&&this.history.destroy()},transitionEnd:function(){this.history.initialized&&this.history.setHistory(this.params.history.key,this.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){j.extend(this,{hashNavigation:{initialized:!1,init:K.init.bind(this),destroy:K.destroy.bind(this),setHash:K.setHash.bind(this),onHashCange:K.onHashCange.bind(this)}})},on:{init:function(){this.params.hashNavigation.enabled&&this.hashNavigation.init()},destroy:function(){this.params.hashNavigation.enabled&&this.hashNavigation.destroy()},transitionEnd:function(){this.hashNavigation.initialized&&this.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){var t=this;j.extend(t,{autoplay:{running:!1,paused:!1,run:q.run.bind(t),start:q.start.bind(t),stop:q.stop.bind(t),pause:q.pause.bind(t),onTransitionEnd:function(e){t&&!t.destroyed&&t.$wrapperEl&&e.target===this&&(t.$wrapperEl[0].removeEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].removeEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd),t.autoplay.paused=!1,t.autoplay.running?t.autoplay.run():t.autoplay.stop())}}})},on:{init:function(){this.params.autoplay.enabled&&this.autoplay.start()},beforeTransitionStart:function(e,t){this.autoplay.running&&(t||!this.params.autoplay.disableOnInteraction?this.autoplay.pause(e):this.autoplay.stop())},sliderFirstMove:function(){this.autoplay.running&&(this.params.autoplay.disableOnInteraction?this.autoplay.stop():this.autoplay.pause())},destroy:function(){this.autoplay.running&&this.autoplay.stop()}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){j.extend(this,{fadeEffect:{setTranslate:Q.setTranslate.bind(this),setTransition:Q.setTransition.bind(this)}})},on:{beforeInit:function(){if("fade"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"fade");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};j.extend(this.params,e),j.extend(this.originalParams,e)}},setTranslate:function(){"fade"===this.params.effect&&this.fadeEffect.setTranslate()},setTransition:function(e){"fade"===this.params.effect&&this.fadeEffect.setTransition(e)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){j.extend(this,{cubeEffect:{setTranslate:Z.setTranslate.bind(this),setTransition:Z.setTransition.bind(this)}})},on:{beforeInit:function(){if("cube"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"cube"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0};j.extend(this.params,e),j.extend(this.originalParams,e)}},setTranslate:function(){"cube"===this.params.effect&&this.cubeEffect.setTranslate()},setTransition:function(e){"cube"===this.params.effect&&this.cubeEffect.setTransition(e)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){j.extend(this,{flipEffect:{setTranslate:J.setTranslate.bind(this),setTransition:J.setTransition.bind(this)}})},on:{beforeInit:function(){if("flip"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"flip"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};j.extend(this.params,e),j.extend(this.originalParams,e)}},setTranslate:function(){"flip"===this.params.effect&&this.flipEffect.setTranslate()},setTransition:function(e){"flip"===this.params.effect&&this.flipEffect.setTransition(e)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0}},create:function(){j.extend(this,{coverflowEffect:{setTranslate:ee.setTranslate.bind(this),setTransition:ee.setTransition.bind(this)}})},on:{beforeInit:function(){"coverflow"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"coverflow"),this.classNames.push(this.params.containerModifierClass+"3d"),this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},setTranslate:function(){"coverflow"===this.params.effect&&this.coverflowEffect.setTranslate()},setTransition:function(e){"coverflow"===this.params.effect&&this.coverflowEffect.setTransition(e)}}}];return void 0===x.use&&(x.use=x.Class.use,x.installModule=x.Class.installModule),x.use(te),x}),$(document).ready(function(){$("form").submit(function(){if(null==$("#nombre").val().match(".*[a-zA-Z]+.*"))return alert("El nombre debe contener al menos una letra"),!1;var t=get_info($(this)),e="php/ajax_request.php";return-1<window.location.href.indexOf("/en/")&&(e="../php/ajax_request.php"),$.ajax({method:"POST",url:e,data:t}).done(function(e){$("#form-descarga-modal .close-modal").trigger("click"),$("#form-success").modal(),load_ga_form(t.type)}),!1})});var galerias={};function scroll_function_menu(){var s=document.body.scrollTop||document.documentElement.scrollTop,e=(s-$("#fixed-menu-content").offset().top+$(window).height())/$("#fixed-menu-content").height()*100;100<e&&(e=100),document.getElementById("myBar").style.height=e+"%",$("#fixed-menu-content").find("a").removeClass("active");var a=null,r=1e9;$("#fixed-menu-content").find("a").each(function(){var e=$("#"+$(this).attr("href").replace("#","")),t=e.offset().top,i=e.offset().top+e.height(),n=Math.abs(s-t)+Math.abs(s+$(window).height()-i);i<s||s+$(window).height()<t||n<r&&(r=n,a=$(this))}),null!=a&&a.addClass("active")}function check_ie(){for(var e,t,i=3,n=document.createElement("div"),s=n.getElementsByTagName("i");n.innerHTML="\x3c!--[if gt IE "+ ++i+"]><i></i><![endif]--\x3e",s[0];);if(i=4<i?i:document.documentMode){e=" ie";for(var a=5;a<12;a++)i<a?e+=" lte-ie"+a:a<i?e+=" gte-ie"+a:i==a&&(e+=" ie"+a);t={version:i}}else t=!(e=" not-ie");$("body").addClass(e),window.ie=t}function load_events(){switch(param_analytics_events){case"GA":load_events_ga();break;case"ML":load_events_ml();break;case"GP":load_events_gp();break;default:$(".c-menu__list a").click(function(){gtag("event","click",{event_category:action_ga,event_label:entradas_menu[$(".c-menu__list a").index($(this))]})}),$(".menu-descarga span").click(function(){gtag("event","click",{event_category:action_ga,event_label:"DESCARGA_DOSSIER"})}),$("#form-descarga-modal .btn-primary").click(function(){gtag("event","click",{event_category:action_ga,event_label:"SOLICITAR_DOSSIER"})})}}function load_ga_form(e){if("1"==getCookie("consent"))switch(param_analytics_events){case"GA":case"ML":case"GP":"contacto"==e&&gtag("event","click",{event_category:"Conversión",event_label:"ImagenGraciasnospondremosencontacto"}),"dossier"==e&&gtag("event","click",{event_category:"Conversión",event_label:"ImagenFormularioEnviadoconÉxito"})}}function load_events_ga(){$(".gallery_1").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaA1dorm"})}),$(".gallery_2").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaB1dorm"})}),$(".gallery_3").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaCestudio"})}),$(".gallery_4").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaDyC2dorm"})}),$(".gallery_5").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaA2dorm"})}),$(".gallery_6").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaBestudio"})}),$(".gallery_7").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoAticoDuplexA"})}),$(".gallery_8").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoAticoDuplexC"})}),$(".gallery_9").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoPlantaBaja"})}),$(".c-internacional__firma__desc__link a").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerMasInfoProyectosInt"})}),$(".c-footer__contact-line--phone a").click(function(){gtag("event","click",{event_category:"Interés contacto",event_label:"AbrirMailInfo"})}),$(".c-footer__contact-line--email a").click(function(){gtag("event","click",{event_category:"Interés contacto",event_label:"AbrirLlamadaTlfno"})})}function load_events_ml(){$(".gallery_1").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoDuplexB"})}),$(".gallery_2").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaA"})}),$(".gallery_3").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaB"})}),$(".gallery_4").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaA3D"})}),$(".gallery_5").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaA2D"})}),$(".gallery_6").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaA1D1D"})}),$(".gallery_7").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoAticoA"})}),$(".gallery_8").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoAticoB"})}),$(".gallery_9").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoAzotea"})}),$(".c-internacional__firma__desc__link a").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerMasInfoProyectosInt"})}),$(".c-footer__contact-line--phone a").click(function(){gtag("event","click",{event_category:"Interés contacto",event_label:"AbrirMailInfo"})}),$(".c-footer__contact-line--email a").click(function(){gtag("event","click",{event_category:"Interés contacto",event_label:"AbrirLlamadaTlfno"})})}function load_events_gp(){$(".gallery_1").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaTipo1"})}),$(".gallery_2").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaTipo2"})}),$(".gallery_3").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaTipo3"})}),$(".gallery_4").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaAticos"})}),$(".gallery_5").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaAzotea"})}),$(".gallery_6").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerPlanoViviendaSotanos"})}),$(".c-internacional__firma__desc__link a").click(function(){gtag("event","click",{event_category:"Ampliar info",event_label:"VerMasInfoProyectosInt"})}),$(".c-footer__contact-line--phone a").click(function(){gtag("event","click",{event_category:"Interés contacto",event_label:"AbrirMailInfo"})}),$(".c-footer__contact-line--email a").click(function(){gtag("event","click",{event_category:"Interés contacto",event_label:"AbrirLlamadaTlfno"})})}function gtag(){dataLayer.push(arguments)}function load_analytics(){window.dataLayer=window.dataLayer||[],gtag("js",new Date),gtag("config",codigo_analytics),"GP"==param_analytics_events&&function(e,t,i,n,s){e[n]=e[n]||[],e[n].push({"gtm.start":(new Date).getTime(),event:"gtm.js"});var a=t.getElementsByTagName("script")[0],r=t.createElement("script");r.async=!0,r.src="https://www.googletagmanager.com/gtm.js?id=GTM-NS4WVKS",a.parentNode.insertBefore(r,a)}(window,document,0,"dataLayer")}function getCookie(e){for(var t=e+"=",i=decodeURIComponent(document.cookie).split(";"),n=0;n<i.length;n++){for(var s=i[n];" "==s.charAt(0);)s=s.substring(1);if(0==s.indexOf(t))return s.substring(t.length,s.length)}return""}function setCookie(e,t,i){var n=new Date;n.setTime(n.getTime()+24*i*60*60*1e3);var s="expires="+n.toUTCString();document.cookie=e+"="+t+";"+s+";path=/"}$(document).ready(function(){$("a.c-promos__item").each(function(){"#"!=$(this).attr("href")&&""!=$(this).attr("href")||$(this).replaceWith($(this).contents())}),$(".swipper_gallery").each(function(){galerias.hasOwnProperty($(this).attr("rel"))||(galerias[$(this).attr("rel")]=1,$(this).find("a").addClass($(this).attr("rel")),$(this).find("a").each(function(){$(this).find("img").attr("src",$(this).attr("href").replace("big","small"))}),$("."+$(this).attr("rel")).featherlightGallery())}),$("#fixed-menu-content").length&&(window.onscroll=function(){scroll_function_menu()});var e=$(".c-menu-fijo").next().offset().top;if($(window).scroll(function(){$(window).scrollTop()>e?($(".c-menu-download").addClass("visible"),$(".c-menu-fijo").addClass("opacidad")):($(".c-menu-download").removeClass("visible"),$(".c-menu-fijo").removeClass("opacidad"))}),$(".menu-icon").on("click",function(e){$("body").toggleClass("menu-open"),setTimeout(function(){$(".c-menu-fijo").toggleClass("menu-fijo",100),$(".menu-imago").toggleClass("visible",100),$(".menu-descarga").toggleClass("visible",100)},100),e.preventDefault()}),0<$(".c-fixed-menu").length){$(".c-fixed-menu__menu__list").offset().top;var i=$(".c-fixed-menu__menu__list").height(),n=$(".c-fixed-menu__menu__content").offset().top;$(".c-fixed-menu__menu__content").height();function t(){var e=$(window).height()/2-170,t=$(this).scrollTop()+e;n<=t&&t+i<=$(".c-fixed-menu__menu__content").offset().top+$(".c-fixed-menu__menu__content").outerHeight()?($(".c-fixed-menu__menu__list").addClass("fixed"),$(".c-fixed-menu__menu__list").removeClass("to-bottom")):n<=t&&t+i>=$(".c-fixed-menu__menu__content").offset().top+$(".c-fixed-menu__menu__content").outerHeight()?($(".c-fixed-menu__menu__list").removeClass("fixed"),$(".c-fixed-menu__menu__list").addClass("to-bottom")):$(".c-fixed-menu__menu__list").removeClass("fixed")}$(window).scroll(function(){t()}),$(window).resize(function(){t()}),$(".manifiesto-wrap").each(function(){var e=$(this);$(this).waypoint({handler:function(){e.addClass("fadeup"),$(".c-fixed-menu__menu__list li").eq(e.index()).find("a").addClass("active"),$(".c-fixed-menu__menu__list li").eq(e.index()).siblings().find("a").removeClass("active")}})}),$(".c-fixed-menu__menu__list li a").click(function(){$(this).addClass("on"),$(this).parents(".c-fixed-menu__menu__list li").siblings().find("a").removeClass("on")})}new Swiper(".swiper-container",{speed:1e3,parallax:!0}),new Swiper(".swiper-container-gallery",{slidesPerView:"auto",navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"}}),new Swiper(".swiper-container-slider2",{slidesPerView:"auto",navigation:{nextEl:".swiper-button-slider2-next",prevEl:".swiper-button-slider2-prev"}});$(".swiper-container-gallery").each(function(){$(this).find(".swiper-slide").length<=1&&($(this).find(".swiper-button-prev").addClass("d-none"),$(this).find(".swiper-button-next").addClass("d-none"))}),$(".swiper-container-slider2").each(function(){$(this).find(".swiper-slide").length<=1&&($(this).find(".swiper-button-prev").addClass("d-none"),$(this).find(".swiper-button-next").addClass("d-none"))}),$('a[href*="#"]').not('[href="#"]').not('[href="#0"]').click(function(e){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var t=$(this.hash);(t=t.length?t:$("[name="+this.hash.slice(1)+"]")).length&&(e.preventDefault(),$("html, body").animate({scrollTop:t.offset().top},1e3,function(){var e=$(t);if(e.focus(),e.is(":focus"))return!1;e.attr("tabindex","-1"),e.focus()}))}}),$(".c-menu__list li").click(function(){$("body").removeClass("menu-open"),$(".c-menu-fijo").removeClass("menu-fijo")}),check_ie()}),$(document).ready(function(){"1"==getCookie("consent")?(load_analytics(),load_events()):$("#aviso_cookies").show(),$("#btn_no_aceptar_cookies").click(function(){$("#aviso_cookies").hide()}),$("#btn_aceptar_cookies").click(function(){setCookie("consent","1",30),load_analytics(),load_events(),$("#aviso_cookies").hide()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
